<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Linux SA Notes By 枯木]]></title>
  <link href="http://kumu-Linux.github.io/atom.xml" rel="self"/>
  <link href="http://kumu-Linux.github.io/"/>
  <updated>2013-09-30T11:00:21+08:00</updated>
  <id>http://kumu-Linux.github.io/</id>
  <author>
    <name><![CDATA[枯木]]></name>
    <email><![CDATA[1988.wulei@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[豆瓣博客认领]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/09/30/douban/"/>
    <updated>2013-09-30T10:56:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/09/30/douban</id>
    <content type="html"><![CDATA[<p>doubanclaim0c049b69a6168670</p>

<ul>
<li>1.先到豆瓣九点的这个页面http://9.douban.com/reader/ 点击右侧“添加订阅”，输入你的博客地址，然后豆瓣就会开始抓取你的博客，稍微等会儿，就添加进去了。</li>
<li>2.然后点下方的“管理订阅列表”，进入页面后，点你博客的名字，进入你的博客九点页面，再点击图片右侧的“认领这个博客”，豆瓣会给出一串字符要求你写进你的博客日志里，写好之后回到这个页面，点击“重抓”，过个10分钟左右等豆瓣验证好了，你就拥有这个博客了，然后那行写在日志里的字符也可以删了。</li>
<li>3.等在九点拥有博客之后，在你的豆瓣个人页面的头像下面就会显示你的博客地址和名称，你的主页上会显示你最新的博客日志并且会自动更新，自动显示你的广播里，你的友邻也都会看见。</li>
<li>4.只不过确实豆瓣有时更新不是很及时，碰上抽风的时候会隔一天才更新出来。你要是等不及可以自己去“重抓”，只不过真抽风的时候连“重抓”都没用</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh的一些安全设定]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/09/26/ssh-safe/"/>
    <updated>2013-09-26T10:42:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/09/26/ssh-safe</id>
    <content type="html"><![CDATA[<center><img src="http://kumu-Linux.github.io/images/nmap_ssh.jpg" width="500"></center>




<!--more-->


<p>ssh是我们日常工作中必不可少的工具，所以它的安全性也是异常重要了，这里笔者简单介绍了一些ssh配置中需要注意的几个点。</p>

<!--more-->


<p>首先,作为root用户登录并备份原始文件，输入下面的命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak
</span></code></pre></td></tr></table></div></figure>


<h3>1、调整认证时限(默认单位为s)，即当用户登录ssh之后，要求输入密码的时间限制，规定时间没有输入则自动断线：</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>LoginGraceTime 60
</span></code></pre></td></tr></table></div></figure>


<h3>2、最好限制root用户远程登录，修改如下：</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>PermitRootLogin no
</span></code></pre></td></tr></table></div></figure>


<h3>3、关闭X11转发，防止额外的信息泄露</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>X11Forwarding no
</span></code></pre></td></tr></table></div></figure>


<h3>4、取消以下两行的注释，使得登录后显示一些信息</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>PrintMotd yes
</span><span class='line'>PrintLastLog yes
</span></code></pre></td></tr></table></div></figure>


<h3>5、编辑<code>/etc/motd</code>文件，添加一些警告信息，如下</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>This computer system is <span class="k">for </span>authorized users only. All activity
</span><span class='line'>is logged and regularly checked. Individuals using this system
</span><span class='line'>without authority or in excess of their authority are subject to
</span><span class='line'>having all their services revoked...
</span></code></pre></td></tr></table></div></figure>


<h3>6、关闭ssh闲置会话</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ClientAliveInterval 60
</span><span class='line'>ClientAliveCountMax 5
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ClientAliveInterval设置表示如果超过这么长时间没有收到客户端的任何数据，将通过安全通道向客户端发送一个&#8221;alive&#8221;消息，并等候应答，单位默认为s。</li>
<li>ClientAliveCountMax表示在未收到任何客户端回应前最多允许发送多少个&#8221;alive&#8221;消息，这是设置5次</li>
</ul>


<p>以上也就是客户端如果60*5=300s，即5分钟如果没有任何操作，则空闲连接会被强制断开，关闭时提示如下</p>

<pre><code>Connection to x.x.x.x closed by remote host.
Connection to x.x.x.x closed.
</code></pre>

<h3>7、开启TCPKeepAlive</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>TCPKeepAlive yes
</span></code></pre></td></tr></table></div></figure>


<p>TCPKeepAlive指定系统是否向客户端发送TCP keepalive消息，这种消息可以检测到死连接、连接不当关闭、客户端崩溃等异常，避免僵尸进程产生，推荐开启。</p>

<h3>8、修改ssh默认端口22</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Port xxxx    <span class="c">#自定义端口</span>
</span></code></pre></td></tr></table></div></figure>


<h3>9、设置允许登录的ssh用户</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>AllowUsers test1 test2 test3
</span></code></pre></td></tr></table></div></figure>


<p>也可以设置允许的组</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>AllowGroups admin
</span></code></pre></td></tr></table></div></figure>


<h3>10、关闭不必要的认证</h3>

<p>如果可以，只允许公钥认证，关闭其它认证方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>PasswordAuthentication no
</span><span class='line'>ChallengeResponseAuthentication no
</span></code></pre></td></tr></table></div></figure>


<p>基本的一个设置就是以上的部分了内容了，还可以结合<code>fail2ban</code>更好的保护ssh的安全。关于<code>fail2ban</code>下次介绍，其实很多网友已经写了很多相关的博文了。</p>

<h3>参考文章</h3>

<ul>
<li><a href="http://blog.licess.org/sshd_config/">sshd_config配置</a></li>
<li><a href="http://lamp.linux.gov.cn/OpenSSH/sshd_config.html">sshd_config中文手册</a></li>
<li><a href="http://www.ibm.com/developerworks/cn/aix/library/au-sshsecurity/">SSH 安全性和配置入门</a></li>
<li><a href="http://www.amazon.com/CentOS-6-Linux-Server-Cookbook/dp/1849519021">CentOS 6 Linux Server Cookbook </a></li>
</ul>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenNebula KVM磁盘热插拔]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/09/25/kvm-disk-hotplug/"/>
    <updated>2013-09-25T15:22:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/09/25/kvm-disk-hotplug</id>
    <content type="html"><![CDATA[<p>KVM支持以下两种磁盘类型的热插拔：</p>

<ul>
<li>sd: SCSI (default).</li>
<li>vd: virtio.</li>
</ul>


<p>KVM虚拟机需要开启acpi才支持磁盘的热插拔，使用OpenNebula安装虚拟机的时候需要设置如下选项：</p>

<ul>
<li>FEATURES = [ acpi=&#8221;yes&#8221; ]</li>
</ul>


<!--more-->


<h3>virtio磁盘热插拔</h3>

<p>虚拟机加载acpiphp驱动</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># modprobe acpiphp   # 加载驱动</span>
</span><span class='line'><span class="c"># fdisk -l</span>
</span><span class='line'>
</span><span class='line'>Disk /dev/vda: 32.2 GB, 32212254720 bytes
</span><span class='line'>255 heads, 63 sectors/track, 3916 cylinders
</span><span class='line'><span class="nv">Units</span> <span class="o">=</span> cylinders of 16065 * <span class="nv">512</span> <span class="o">=</span> 8225280 bytes
</span><span class='line'>
</span><span class='line'>   Device Boot      Start         End      Blocks   Id  System
</span><span class='line'>/dev/vda1   *           1          13      104391   83  Linux
</span><span class='line'>/dev/vda2              14        3916    31350847+  8e  Linux LVM
</span></code></pre></td></tr></table></div></figure>


<p>选择需要添加磁盘的虚拟机- [ Disks &amp; Hotplugging ] ，配置完成之后选择 Attach 挂载使用</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_disk1.jpg" width="500"></center>


<p>Device Prefix选择sd表示scsi磁盘，如果是vd则是vitio类型磁盘。选择Attach之后，刷新页面就会看到新建的磁盘。</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_disk2.jpg" width="500"></center>


<p>此时查看vda磁盘是否生效</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># fdisk -l           # 查看磁盘识别</span>
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>Disk /dev/vdb: 1048 MB, 1048576000 bytes
</span><span class='line'>16 heads, 63 sectors/track, 2031 cylinders
</span><span class='line'><span class="nv">Units</span> <span class="o">=</span> cylinders of 1008 * <span class="nv">512</span> <span class="o">=</span> 516096 bytes
</span><span class='line'>
</span><span class='line'>Disk /dev/vdb doesn<span class="err">&#39;</span>t contain a valid partition table
</span></code></pre></td></tr></table></div></figure>


<h3>scsi磁盘热插拔</h3>

<p>虚拟机加载acpiphp驱动</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># modprobe acpiphp   # 加载驱动</span>
</span></code></pre></td></tr></table></div></figure>


<p>选择需要添加磁盘的虚拟机- [ Disks &amp; Hotplugging ] ，配置完成之后选择 Attach挂载使用</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_disk3.jpg" width="500"></center>


<p>如下即可看到新添加的磁盘</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># fdisk -l</span>
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>Disk /dev/sda: 1048 MB, 1048576000 bytes
</span><span class='line'>33 heads, 61 sectors/track, 1017 cylinders
</span><span class='line'><span class="nv">Units</span> <span class="o">=</span> cylinders of 2013 * <span class="nv">512</span> <span class="o">=</span> 1030656 bytes
</span><span class='line'>
</span><span class='line'>Disk /dev/sda doesn<span class="err">&#39;</span>t contain a valid partition table
</span></code></pre></td></tr></table></div></figure>


<p>如果未识别scsi磁盘，执行如下命令，使得KVM虚拟机识别</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># echo &#39;- - -&#39; &gt; /sys/class/scsi_host/host0/scan</span>
</span><span class='line'><span class="c"># fdisk -l</span>
</span><span class='line'>...
</span><span class='line'>Disk /dev/sdb: 1048 MB, 1048576000 bytes
</span><span class='line'>33 heads, 61 sectors/track, 1017 cylinders
</span><span class='line'><span class="nv">Units</span> <span class="o">=</span> cylinders of 2013 * <span class="nv">512</span> <span class="o">=</span> 1030656 bytes
</span><span class='line'>
</span><span class='line'>Disk /dev/sdb doesn<span class="err">&#39;</span>t contain a valid partition table
</span></code></pre></td></tr></table></div></figure>


<h3>参考文档</h3>

<ul>
<li><a href="http://opennebula.org/documentation:rel4.2:kvmg">KVM Driver 4.2</a></li>
<li><a href="http://serverfault.com/questions/453456/adding-virtio-block-devices-at-runtime-in-libvirt-kvm">Adding Virtio block devices at runtime in Libvirt KVM</a></li>
</ul>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[30 Handy Bash Shell Aliases[译]]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/09/25/shell-alias/"/>
    <updated>2013-09-25T10:42:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/09/25/shell-alias</id>
    <content type="html"><![CDATA[<p>本文为 <a href="http://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html">原文地址</a> 翻译而来，有些地方稍作改动。</p>

<p>一个别名就是一个命令的快捷方式，<code>alias</code>命令允许用户通过输入一个词启动任何命令或一组命令(包括选项和文件名)。通过<code>alias</code>命令可以显示所有已定义的别名列表。你可以在<code>~ /.bashrc</code>文件中自定义用户的别名。通过这些别名可以减少打字时间，更灵活的操作，提升工作效率。</p>

<!--more-->


<h3>Task：列出系统别名列表</h3>

<p>输入以下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出实例:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">cp</span><span class="o">=</span><span class="s1">&#39;cp -i&#39;</span>
</span><span class='line'><span class="nb">alias </span>l.<span class="o">=</span><span class="s1">&#39;ls -d .* --color=auto&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ll</span><span class="o">=</span><span class="s1">&#39;ls -l --color=auto&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ls</span><span class="o">=</span><span class="s1">&#39;ls --color=auto&#39;</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>默认<code>alias</code>命令不添加任何选项输出当前用户定义的别名。</p>

<h3>Task：定义/创建一个别名(bash语法)</h3>

<p>创建别名使用如下语法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">name</span><span class="o">=</span>value
</span><span class='line'><span class="nb">alias </span><span class="nv">name</span><span class="o">=</span><span class="s1">&#39;command&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">name</span><span class="o">=</span><span class="s1">&#39;command arg1 arg2&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">name</span><span class="o">=</span><span class="s1">&#39;/path/to/script&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">name</span><span class="o">=</span><span class="s1">&#39;/path/to/script.pl arg1&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在以下的实例中，创建一个<code>clear</code>清屏命令的别名c，输入如下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">c</span><span class="o">=</span>clear
</span></code></pre></td></tr></table></div></figure>


<p>输入以上命令之后，如果需要清屏，只需直接输入简单的<code>c</code>来代替<code>clear</code>命令即可实现</p>

<h3>Task：暂时禁用别名</h3>

<p>显示别名<code>cp</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">alias </span>cp
</span><span class='line'><span class="nb">alias </span><span class="nv">cp</span><span class="o">=</span><span class="s1">&#39;cp -i&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>cp</code>命令是<code>cp -i</code>的别名，<code>-i</code>选项一定程度上能起到保护作用，但是当我们只想使用原始的cp命令的时候，我们肯定不能简单的输入<code>cp</code>命令，这里有两种方式实现</p>

<ul>
<li>使用全名</li>
<li>或者使用\+命令</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls a b
</span><span class='line'>a  b
</span><span class='line'><span class="nv">$ </span>cp b a      <span class="c">#使用别名之后的cp在覆盖文件时会提示</span>
</span><span class='line'>cp: overwrite <span class="sb">`</span>a<span class="err">&#39;</span>? y
</span><span class='line'><span class="nv">$ </span>/bin/cp b a <span class="c">#使用全称不会有提示</span>
</span><span class='line'><span class="nv">$ </span><span class="se">\c</span>p b a     <span class="c">#使用\cp不会有提示</span>
</span></code></pre></td></tr></table></div></figure>


<h3>移除alias (bash语法)</h3>

<p>你需要使用<code>unalias</code>命令移除别名，语法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">unalias </span>aliasname
</span></code></pre></td></tr></table></div></figure>


<p>例如，移除之前<code>clear</code>的别名<code>c</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">unalias </span>c
</span></code></pre></td></tr></table></div></figure>


<p>如果你在<code>~/bashrc</code>文件中定义了别名，也需要从该文件中移除对应所在行。</p>

<h3>Task：定义永久别名</h3>

<p>alias c只能在当前会话中生效。当你重启或者退出当前会话的时候，就失效了。为了避免这种问题，田间别名到你的<code>~/.bashrc</code>配置文件中，输入:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vi ~/.bashrc
</span></code></pre></td></tr></table></div></figure>


<p>通过添加如下内容，对于当前用户别名c永久生效：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">c</span><span class="o">=</span><span class="s1">&#39;clear&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>保存并退出这个文件，全局别名可以存放在<code>/etc/bashrc</code>文件中，请注意这个别名命令建立在各种shell中，包括ksh、csh、bash等等</p>

<h3>一个关于权限访问的小贴士</h3>

<p>你可以添加如下代码到<code>~/.bashrc</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># if user is not root, pass all commands via sudo #</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> <span class="nv">$UID</span> -ne 0 <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">    </span><span class="nb">alias </span><span class="nv">reboot</span><span class="o">=</span><span class="s1">&#39;sudo reboot&#39;</span>
</span><span class='line'>    <span class="nb">alias </span><span class="nv">update</span><span class="o">=</span><span class="s1">&#39;sudo yum update&#39;</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<h3>按照操作系统添加别名的小贴士</h3>

<p>你可以添加如下代码到<code>~/.bashrc</code> <a href="http://bash.cyberciti.biz/guide/The_case_statement">case语句</a>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">### Get os name via uname ###</span>
</span><span class='line'><span class="nv">_myos</span><span class="o">=</span><span class="s2">&quot;$(uname)&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c">### add alias as per os using $_myos ###</span>
</span><span class='line'><span class="k">case</span> <span class="nv">$_myos</span> in
</span><span class='line'>   Linux<span class="o">)</span> <span class="nb">alias </span><span class="nv">foo</span><span class="o">=</span><span class="s1">&#39;/path/to/linux/bin/foo&#39;</span>;;
</span><span class='line'>   FreeBSD|OpenBSD<span class="o">)</span> <span class="nb">alias </span><span class="nv">foo</span><span class="o">=</span><span class="s1">&#39;/path/to/bsd/bin/foo&#39;</span> ;;
</span><span class='line'>   SunOS<span class="o">)</span> <span class="nb">alias </span><span class="nv">foo</span><span class="o">=</span><span class="s1">&#39;/path/to/sunos/bin/foo&#39;</span> ;;
</span><span class='line'>   *<span class="o">)</span> ;;
</span><span class='line'><span class="k">esac</span>
</span></code></pre></td></tr></table></div></figure>


<h3>30个有用的别名</h3>

<p>你可以定义不同类型的别名来节约时间和提升效率。</p>

<h4>#1: 控制<code>ls</code>命令输出</h4>

<p>给<code>ls</code>命令的输出来电颜色看看</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## Colorize the ls output ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ls</span><span class="o">=</span><span class="s1">&#39;ls --color=auto&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## Use a long listing format ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ll</span><span class="o">=</span><span class="s1">&#39;ls -la&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## Show hidden files ##</span>
</span><span class='line'><span class="nb">alias </span>l.<span class="o">=</span><span class="s1">&#39;ls -d .* --color=auto&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#2: 调整<code>cd</code>命令习惯</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## get rid of command not found ##</span>
</span><span class='line'><span class="nb">alias </span>cd..<span class="o">=</span><span class="s1">&#39;cd ..&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## a quick way to get out of current directory ##</span>
</span><span class='line'><span class="nb">alias</span> ..<span class="o">=</span><span class="s1">&#39;cd ..&#39;</span>
</span><span class='line'><span class="nb">alias</span> ...<span class="o">=</span><span class="s1">&#39;cd ../../../&#39;</span>
</span><span class='line'><span class="nb">alias</span> ....<span class="o">=</span><span class="s1">&#39;cd ../../../../&#39;</span>
</span><span class='line'><span class="nb">alias</span> .....<span class="o">=</span><span class="s1">&#39;cd ../../../../&#39;</span>
</span><span class='line'><span class="nb">alias</span> .4<span class="o">=</span><span class="s1">&#39;cd ../../../../&#39;</span>
</span><span class='line'><span class="nb">alias</span> .5<span class="o">=</span><span class="s1">&#39;cd ../../../../..&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#3：控制<code>grep</code>命令输出</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## Colorize the grep command output for ease of use (good for log files)##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">grep</span><span class="o">=</span><span class="s1">&#39;grep --color=auto&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">egrep</span><span class="o">=</span><span class="s1">&#39;egrep --color=auto&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">fgrep</span><span class="o">=</span><span class="s1">&#39;fgrep --color=auto&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#4：开启计算器小数点计算</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">bc</span><span class="o">=</span><span class="s1">&#39;bc -l&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#5：生成sha1摘要</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">sha1</span><span class="o">=</span><span class="s1">&#39;openssl sha1&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#6、根据需要创建父目录</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">mkdir</span><span class="o">=</span><span class="s1">&#39;mkdir -pv&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#7：有颜色的diff输出</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># install  colordiff package :) 前提需要安装colordiff包</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">diff</span><span class="o">=</span><span class="s1">&#39;colordiff&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#8：使mount命令输出格式更漂亮以及可读性更高</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">mount</span><span class="o">=</span><span class="s1">&#39;mount |column -t&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#9：短命令节省时间</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># handy short cuts #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">h</span><span class="o">=</span><span class="s1">&#39;history&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">j</span><span class="o">=</span><span class="s1">&#39;jobs -l&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#10：创建一些新的命令</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">path</span><span class="o">=</span><span class="s1">&#39;echo -e ${PATH//:/\\n}&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">now</span><span class="o">=</span><span class="s1">&#39;date +&quot;%T&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">nowtime</span><span class="o">=</span>now
</span><span class='line'><span class="nb">alias </span><span class="nv">nowdate</span><span class="o">=</span><span class="s1">&#39;date +&quot;%d-%m-%Y&quot;&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#11：设置默认的vim</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">vi</span><span class="o">=</span>vim
</span><span class='line'><span class="nb">alias </span><span class="nv">svi</span><span class="o">=</span><span class="s1">&#39;sudo vi&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">vis</span><span class="o">=</span><span class="s1">&#39;vim &quot;+set si&quot;&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">edit</span><span class="o">=</span><span class="s1">&#39;vim&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#12：ping的相关设置</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Stop after sending count ECHO_REQUEST packets #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ping</span><span class="o">=</span><span class="s1">&#39;ping -c 5&#39;</span>
</span><span class='line'><span class="c"># Do not wait interval 1 second, go fast #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">fastping</span><span class="o">=</span><span class="s1">&#39;ping -c 100 -s.2&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#13：显示打开的端口</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">ports</span><span class="o">=</span><span class="s1">&#39;netstat -tulanp&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#14：唤醒沉睡的服务</h4>

<p><a href="http://www.cyberciti.biz/tips/linux-send-wake-on-lan-wol-magic-packets.html">Wake-on-LAN(WOL)</a>是一个以太网网络标准,允许通过一个网络信息打开服务。您可以使用以下的别名快速唤醒NAS设备和服务器<a href="http://bash.cyberciti.biz/misc-shell/simple-shell-script-to-wake-up-nas-devices-computers/">Devices Using Linux or Unix Computer</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## replace mac with your actual server mac address #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">wakeupnas01</span><span class="o">=</span><span class="s1">&#39;/usr/bin/wakeonlan 00:11:32:11:15:FC&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">wakeupnas02</span><span class="o">=</span><span class="s1">&#39;/usr/bin/wakeonlan 00:11:32:11:15:FD&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">wakeupnas03</span><span class="o">=</span><span class="s1">&#39;/usr/bin/wakeonlan 00:11:32:11:15:FE&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#15：控制防火墙(iptables)输出</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## shortcut  for iptables and pass it via sudo#</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ipt</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/iptables&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># display all rules #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iptlist</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/iptables -L -n -v --line-numbers&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iptlistin</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/iptables -L INPUT -n -v --line-numbers&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iptlistout</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/iptables -L OUTPUT -n -v --line-numbers&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iptlistfw</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/iptables -L FORWARD -n -v --line-numbers&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">firewall</span><span class="o">=</span>iptlist
</span></code></pre></td></tr></table></div></figure>


<h4>#16：通过curl调试web服务或者CDN问题</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># get web server headers #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">header</span><span class="o">=</span><span class="s1">&#39;curl -I&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># find out if remote server supports gzip / mod_deflate or not #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">headerc</span><span class="o">=</span><span class="s1">&#39;curl -I --compress&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#17：一些安全的设置</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># do not delete / or prompt if deleting more than 3 files at a time #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rm</span><span class="o">=</span><span class="s1">&#39;rm -I --preserve-root&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># confirmation #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">mv</span><span class="o">=</span><span class="s1">&#39;mv -i&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">cp</span><span class="o">=</span><span class="s1">&#39;cp -i&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ln</span><span class="o">=</span><span class="s1">&#39;ln -i&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Parenting changing perms on / #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">chown</span><span class="o">=</span><span class="s1">&#39;chown --preserve-root&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">chmod</span><span class="o">=</span><span class="s1">&#39;chmod --preserve-root&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">chgrp</span><span class="o">=</span><span class="s1">&#39;chgrp --preserve-root&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#18：升级RHEL/CentOS/Fedora Linux 服务</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## distrp specifc RHEL/CentOS ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">update</span><span class="o">=</span><span class="s1">&#39;yum update&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">updatey</span><span class="o">=</span><span class="s1">&#39;yum -y update&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#19：调节sudo和su</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># become root #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">root</span><span class="o">=</span><span class="s1">&#39;sudo -i&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">su</span><span class="o">=</span><span class="s1">&#39;sudo -i&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#20：通过sudo关机或重启</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># reboot / halt / poweroff</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">reboot</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/reboot&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">poweroff</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/poweroff&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">halt</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/halt&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">shutdown</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/shutdown&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#21：控制web服务</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># also pass it via sudo so whoever is admin can reload it without calling you #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">nginxreload</span><span class="o">=</span><span class="s1">&#39;sudo /usr/local/nginx/sbin/nginx -s reload&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">nginxtest</span><span class="o">=</span><span class="s1">&#39;sudo /usr/local/nginx/sbin/nginx -t&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">lightyload</span><span class="o">=</span><span class="s1">&#39;sudo /etc/init.d/lighttpd reload&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">lightytest</span><span class="o">=</span><span class="s1">&#39;sudo /usr/sbin/lighttpd -f /etc/lighttpd/lighttpd.conf -t&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">httpdreload</span><span class="o">=</span><span class="s1">&#39;sudo /usr/sbin/apachectl -k graceful&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">httpdtest</span><span class="o">=</span><span class="s1">&#39;sudo /usr/sbin/apachectl -t &amp;&amp; /usr/sbin/apachectl -t -D DUMP_VHOSTS&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#22：给备份做别名</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># if cron fails or if you want backup on demand just run these commands # </span>
</span><span class='line'><span class="c"># again pass it via sudo so whoever is in admin group can start the job #</span>
</span><span class='line'><span class="c"># Backup scripts #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">backup</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type local --taget /raid1/backups&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">nasbackup</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type nas --target nas01&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">s3backup</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type nas --target nas01 --auth /home/scripts/admin/.authdata/amazon.keys&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rsnapshothourly</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys --config /home/scripts/admin/scripts/backup/config/adsl.conf&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rsnapshotdaily</span><span class="o">=</span><span class="s1">&#39;sudo  /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rsnapshotweekly</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rsnapshotmonthly</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">amazonbackup</span><span class="o">=</span>s3backup
</span></code></pre></td></tr></table></div></figure>


<h4>#23：系统管理员设置端口相关的命令</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## All of our servers eth1 is connected to the Internets via vlan / router etc  ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">dnstop</span><span class="o">=</span><span class="s1">&#39;dnstop -l 5  eth1&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">vnstat</span><span class="o">=</span><span class="s1">&#39;vnstat -i eth1&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iftop</span><span class="o">=</span><span class="s1">&#39;iftop -i eth1&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">tcpdump</span><span class="o">=</span><span class="s1">&#39;tcpdump -i eth1&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ethtool</span><span class="o">=</span><span class="s1">&#39;ethtool eth1&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># work on wlan0 by default #</span>
</span><span class='line'><span class="c"># Only useful for laptop as all servers are without wireless interface</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iwconfig</span><span class="o">=</span><span class="s1">&#39;iwconfig wlan0&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#24：快速获取系统内存、cpu使用以及gpu内存信息</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## pass options to free ## </span>
</span><span class='line'><span class="nb">alias </span><span class="nv">meminfo</span><span class="o">=</span><span class="s1">&#39;free -m -l -t&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## get top process eating memory</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">psmem</span><span class="o">=</span><span class="s1">&#39;ps auxf | sort -nr -k 4&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">psmem10</span><span class="o">=</span><span class="s1">&#39;ps auxf | sort -nr -k 4 | head -10&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## get top process eating cpu ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">pscpu</span><span class="o">=</span><span class="s1">&#39;ps auxf | sort -nr -k 3&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">pscpu10</span><span class="o">=</span><span class="s1">&#39;ps auxf | sort -nr -k 3 | head -10&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## Get server cpu info ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">cpuinfo</span><span class="o">=</span><span class="s1">&#39;lscpu&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## older system use /proc/cpuinfo ##</span>
</span><span class='line'><span class="c">##alias cpuinfo=&#39;less /proc/cpuinfo&#39; ##</span>
</span><span class='line'>
</span><span class='line'><span class="c">## get GPU ram on desktop / laptop## </span>
</span><span class='line'><span class="nb">alias </span><span class="nv">gpumeminfo</span><span class="o">=</span><span class="s1">&#39;grep -i --color memory /var/log/Xorg.0.log&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#25：控制家庭路由器</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Reboot my home Linksys WAG160N / WAG54 / WAG320 / WAG120N Router / Gateway from *nix.</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rebootlinksys</span><span class="o">=</span><span class="s2">&quot;curl -u &#39;admin:my-super-password&#39; &#39;http://192.168.1.2/setup.cgi?todo=reboot&#39;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Reboot tomato based Asus NT16 wireless bridge </span>
</span><span class='line'><span class="nb">alias </span><span class="nv">reboottomato</span><span class="o">=</span><span class="s2">&quot;ssh admin@192.168.1.1 /sbin/reboot&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#26：wget续传</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## this one saved by butt so many times ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">wget</span><span class="o">=</span><span class="s1">&#39;wget -c&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#27：使用不同的浏览器测试网页</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## this one saved by butt so many times ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ff4</span><span class="o">=</span><span class="s1">&#39;/opt/firefox4/firefox&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ff13</span><span class="o">=</span><span class="s1">&#39;/opt/firefox13/firefox&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">chrome</span><span class="o">=</span><span class="s1">&#39;/opt/google/chrome/chrome&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">opera</span><span class="o">=</span><span class="s1">&#39;/opt/opera/opera&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">#default ff </span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ff</span><span class="o">=</span>ff13
</span><span class='line'>
</span><span class='line'><span class="c">#my default browser </span>
</span><span class='line'><span class="nb">alias </span><span class="nv">browser</span><span class="o">=</span>chrome
</span></code></pre></td></tr></table></div></figure>


<h4>#28：ssh小贴士</h4>

<p>不创建别名，通过使用OpenSSH配置文件<code>~/.ssh/config</code>配置，它提供了很多选项，如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Host server10
</span><span class='line'>  Hostname 1.2.3.4
</span><span class='line'>  IdentityFile ~/backups/.ssh/id_dsa
</span><span class='line'>  user foobar
</span><span class='line'>  Port 30000
</span><span class='line'>  ForwardX11Trusted yes
</span><span class='line'>  TCPKeepAlive yes
</span></code></pre></td></tr></table></div></figure>


<p>现在可以通过如下命令连接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh server10
</span></code></pre></td></tr></table></div></figure>


<h4>#29：现在轮到你分享了</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## set some other defaults ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">df</span><span class="o">=</span><span class="s1">&#39;df -H&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">du</span><span class="o">=</span><span class="s1">&#39;du -ch&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># top is atop, just like vi is vim</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">top</span><span class="o">=</span><span class="s1">&#39;atop&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## nfsrestart  - must be root  ##</span>
</span><span class='line'><span class="c">## refresh nfs mount / cache etc for Apache ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">nfsrestart</span><span class="o">=</span><span class="s1">&#39;sync &amp;&amp; sleep 2 &amp;&amp; /etc/init.d/httpd stop &amp;&amp; umount netapp2:/exports/http &amp;&amp; sleep 2 &amp;&amp; mount -o rw,sync,rsize=32768,wsize=32768,intr,hard,proto=tcp,fsc natapp2:/exports /http/var/www/html &amp;&amp;  /etc/init.d/httpd start&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## Memcached server status  ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">mcdstats</span><span class="o">=</span><span class="s1">&#39;/usr/bin/memcached-tool 10.10.27.11:11211 stats&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">mcdshow</span><span class="o">=</span><span class="s1">&#39;/usr/bin/memcached-tool 10.10.27.11:11211 display&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## quickly flush out memcached server ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">flushmcd</span><span class="o">=</span><span class="s1">&#39;echo &quot;flush_all&quot; | nc 10.10.27.11 11211&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## Remove assets quickly from Akamai / Amazon cdn ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">cdndel</span><span class="o">=</span><span class="s1">&#39;/home/scripts/admin/cdn/purge_cdn_cache --profile akamai&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">amzcdndel</span><span class="o">=</span><span class="s1">&#39;/home/scripts/admin/cdn/purge_cdn_cache --profile amazon&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## supply list of urls via file or stdin</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">cdnmdel</span><span class="o">=</span><span class="s1">&#39;/home/scripts/admin/cdn/purge_cdn_cache --profile akamai --stdin&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">amzcdnmdel</span><span class="o">=</span><span class="s1">&#39;/home/scripts/admin/cdn/purge_cdn_cache --profile amazon --stdin&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#30：The End Is the Beginning</h4>

<p>&#8230; &#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenNebula Windows Server镜像制作]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/09/22/opennebula-win/"/>
    <updated>2013-09-22T11:01:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/09/22/opennebula-win</id>
    <content type="html"><![CDATA[<p>Windows镜像制作的方法和Linux其实类似，主要注意的是，Windows需要安装virtio设备驱动。以下主要介绍驱动的安装方法，其它类似镜像导入和模板制作都和Linux方法一样。</p>

<h3>创建虚拟机镜像文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># qemu-img create -f qcow2 win_2008.qcow2 50G</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<h3>安装虚拟机</h3>

<p>网卡推荐使用e1000，磁盘类型使用virtio。使用virtio需要安装virtio设备驱动，否则默认是不能识别virtio设备的。</p>

<h4>下载fedora项目组最新的virtio驱动iso</h4>

<ul>
<li><a href="http://alt.fedoraproject.org/pub/alt/virtio-win/latest/images/bin/">virtio官网地址</a> 目前的提供virtio最新驱动iso为 <a href="http://alt.fedoraproject.org/pub/alt/virtio-win/latest/images/bin/virtio-win-0.1-65.iso">virtio-win-0.1-65.iso</a> ，下载之后使用如下方式安装</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># kvm -m 2048 -cdrom cn_windows_server_2008_r2.iso \</span>
</span><span class='line'>-drive <span class="nv">file</span><span class="o">=</span>/data/virtio-win-0.1-65.iso,media<span class="o">=</span>cdrom <span class="se">\</span>
</span><span class='line'>-drive <span class="nv">file</span><span class="o">=</span>win_2008.qcow2,if<span class="o">=</span>virtio <span class="se">\</span>
</span><span class='line'>-net nic,model<span class="o">=</span>e1000 -net tap,ifname<span class="o">=</span>tap0,script<span class="o">=</span>no <span class="se">\</span>
</span><span class='line'>-boot d -nographic -vnc :0
</span></code></pre></td></tr></table></div></figure>


<p>客户端通过VNC连接，启动之后virtio的硬盘是不能被识别的，如下图</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_win1.jpg" width="500" /></center>




<p></p>


<p>此时，需要安装virtio驱动，点击加载驱动程序，Windows Server 2008对应win7版本</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_win2.jpg" width="500" /></center>


<p></p>


<p>选择之后，按提示操作安装，安装完之后就会识别之前建立的磁盘</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_win3.jpg" width="500" /></center>


<p></p>


<p>磁盘识别之后就可以之后的完整系统安装，关于Windows Server 2008的安装步骤这里不再赘述。</p>

<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh认证代理]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/09/09/ssh-agent/"/>
    <updated>2013-09-09T10:55:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/09/09/ssh-agent</id>
    <content type="html"><![CDATA[<h3>简介</h3>

<p>ssh允许用户把密钥存储在内存中，这就是ssh认证代理[ssh-agent]。认证代理为用户提供了使用RSA密钥而不必随时键入口令字的能力，这对于不必在所有登录、X会话或运行脚本时都要键入口令字提供便利是很有效的。ssh-agent是个长时间持续运行的守护进程（daemon），设计它的唯一目的就是对解密的专用密钥进行高速缓存。ssh包含的内建支持允许它同ssh-agent通信，允许ssh不必每次新连接时都提示您要密码才能获取解密的专用密钥。</p>

<!--more-->


<h3>实例</h3>

<h4>Before ssh-agent</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ssh root@192.168.80.130</span>
</span><span class='line'>Enter passphrase <span class="k">for </span>key <span class="s1">&#39;/root/.ssh/id_rsa&#39;</span>:   <span class="c"># 正常输入密码</span>
</span><span class='line'>Last login: Sat Sep  7 12:40:02 2013 from 192.168.80.131
</span></code></pre></td></tr></table></div></figure>


<h4>After ssh-agent</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ssh-agent bash</span>
</span><span class='line'><span class="c"># ssh-add       </span>
</span><span class='line'><span class="c"># 默认ssh-add添加~/.ssh/id_rsa私钥，按提示输入密码即可，可添加多个密钥</span>
</span><span class='line'><span class="c"># 如果要加入其它密钥直接 ssh-add 私钥文件 即可</span>
</span><span class='line'>Enter passphrase <span class="k">for</span> /root/.ssh/id_rsa:
</span><span class='line'>Identity added: /root/.ssh/id_rsa <span class="o">(</span>/root/.ssh/id_rsa<span class="o">)</span>
</span><span class='line'><span class="c"># ssh-add -l                    # 显示添加密钥添加列表</span>
</span><span class='line'>2048 4f:a8:76:04:42:90:b4:18:c1:6b:13:06:31:c8:59:bf /root/.ssh/id_rsa <span class="o">(</span>RSA<span class="o">)</span>
</span><span class='line'><span class="c"># ssh root@192.168.80.130       # 不需要密码登录了</span>
</span><span class='line'>Last login: Sat Sep  7 12:58:09 2013 from 192.168.80.128
</span></code></pre></td></tr></table></div></figure>


<h4>ssh-agent + ForwardAgent</h4>

<p>A->B->C&#8230;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ssh root@192.168.80.130</span>
</span><span class='line'>Last login: Sat Sep  7 14:05:34 2013 from 192.168.80.128
</span><span class='line'><span class="c"># ssh root@192.168.80.131       # 默认ForwardAgent默认值为no，因此登录到B时再登录C需要密码了</span>
</span><span class='line'>Enter passphrase <span class="k">for </span>key <span class="s1">&#39;/root/.ssh/id_rsa&#39;</span>:
</span></code></pre></td></tr></table></div></figure>


<p>如果想A->B->C&#8230;都不需要密码则可以设置<code>~/.ssh/config</code>如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Host *
</span><span class='line'>    ForwardAgent yes
</span></code></pre></td></tr></table></div></figure>


<p><strong>设置之后</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ssh root@192.168.80.130</span>
</span><span class='line'>Last login: Sat Sep  7 14:06:01 2013 from 192.168.80.128
</span><span class='line'><span class="c"># ssh root@192.168.80.131       # 没有再次提示输入密码，直接登录</span>
</span><span class='line'>Last login: Sat Sep  7 14:05:20 2013 from 192.168.80.130
</span></code></pre></td></tr></table></div></figure>


<h3>参考和拓展文档</h3>

<ul>
<li><a href="http://blog.hellosa.org/2010/03/07/ssh-agent-secure.html">ssh-agent 的安全隐患</a></li>
<li><a href="http://blog.pkufranky.com/2012/08/ssh-agent-forwarding-guide/">SSH Agent Forwarding原理</a></li>
<li><a href="http://livecipher.blogspot.tw/2013/02/ssh-agent-forwarding.html">SSH key agent forwarding</a></li>
<li><a href="https://help.github.com/articles/using-ssh-agent-forwarding">Using ssh agent forwarding</a></li>
<li><a href="upc.lbl.gov/docs/user/sshagent.shtml">A short ssh-agent tutorial</a></li>
</ul>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rsyslog远程传输的几种方式]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/08/28/rsyslog-remote/"/>
    <updated>2013-08-28T10:51:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/08/28/rsyslog-remote</id>
    <content type="html"><![CDATA[<h3>基本介绍</h3>

<p>Rsyslog是一个syslogd的多线程增强版，<a href="www.rsyslog.com/doc/rsyslog_ng_comparison.html">rsyslog vs. syslog-ng</a> 链接是rsyslog官方和syslog特性和性能上的一些对比，目前大部分Linux发行版本默认也是使用rsyslog记录日志。这里介绍rsyslog远程传输的几种方式，对远程日志传输可以有一个了解。</p>

<!--more-->


<p>rsyslog提供三个远程日志传输方式：</p>

<ul>
<li>UDP: 数据包传输可信度不高</li>
<li>TCP: 数据包传输可信度比较高</li>
<li>RELP: 数据包传输可信度最高，避免数据丢失，比较新的协议，目前应用较少</li>
</ul>


<p>以下为man手册对RELP协议的一个介绍：</p>

<blockquote><p>RELP can be used instead of UDP or plain TCP syslog to  provide  reliable  delivery  of syslog  messages.  Please  note that plain TCP syslog does NOT provide truly reliable delivery, with it messages may be  lost when there is a connection problem or the server shuts down. RELP prevents message loss in hose cases.</p></blockquote>

<p>关于RELP的更进一步了解可以参考 <a href="http://www.rsyslog.com/tag/relp/">Using TLS with RELP</a> <a href="http://www.rsyslog.com/doc/imrelp.html">RELP Input Module</a>  <a href="http://www.rsyslog.com/doc/omrelp.html">RELP Output Module (omrelp)</a></p>

<h3>相关配置</h3>

<blockquote><p>To forward messages to another host via UDP, prepend the hostname with the at sign (&#8220;@&#8221;).  To forward it via plain tcp, prepend two at signs (&#8220;@@&#8221;). To forward via RELP, prepend the string &#8220;:omrelp:&#8221; in front of the hostname.</p></blockquote>

<h4>UDP传输</h4>

<h5>Server端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Provides UDP syslog reception</span>
</span><span class='line'><span class="nv">$ModLoad</span> imudp
</span><span class='line'><span class="nv">$UDPServerRun</span> 514
</span><span class='line'><span class="nv">$AllowedSender</span> UDP, 192.168.80.0/24
</span><span class='line'>
</span><span class='line'><span class="c"># This one is the template to generate the log filename dynamically, depending on the client&#39;s IP address. </span>
</span><span class='line'><span class="c"># 根据客户端的IP单独存放主机日志在不同目录，syslog需要手动创建             </span>
</span><span class='line'><span class="nv">$template</span> Remote,<span class="s2">&quot;/var/log/syslog/%fromhost-ip%/%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Log all messages to the dynamically formed file.</span>
</span><span class='line'>:fromhost-ip, !isequal, <span class="s2">&quot;127.0.0.1&quot;</span> ?Remote
</span><span class='line'><span class="c"># 排除本地主机IP日志记录，只记录远程主机日志</span>
</span><span class='line'><span class="c"># 注意此规则需要在其它规则之前，否则配置没有意义，远程主机的日志也会记录到Server的日志文件中</span>
</span><span class='line'>&amp; ~ <span class="c"># 忽略之前所有的日志，远程主机日志记录完之后不再继续往下记录</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者把以上配置单独存放在<code>/etc/rsyslog.d/</code>中的xxx.conf配置文件中，尽量避免修改主配置文件，当然如果要独立文件主配置文件中必须含有以下配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep &#39;rsyslog.d&#39; /etc/rsyslog.conf </span>
</span><span class='line'><span class="c"># Include all config files in /etc/rsyslog.d/</span>
</span><span class='line'><span class="nv">$IncludeConfig</span> /etc/rsyslog.d/*.conf
</span></code></pre></td></tr></table></div></figure>


<h5>Client端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>*.*                     @192.168.80.130
</span></code></pre></td></tr></table></div></figure>


<p>以上配置完成之后<code>/etc/init.d/rsyslog restart</code></p>

<h4>TCP传输</h4>

<p>TCP配置和UDP类似，如下</p>

<h5>Server端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Provides TCP syslog reception</span>
</span><span class='line'><span class="nv">$ModLoad</span> imtcp
</span><span class='line'><span class="nv">$InputTCPServerRun</span> 514
</span><span class='line'><span class="nv">$AllowedSender</span> TCP, 192.168.80.0/24
</span><span class='line'>
</span><span class='line'><span class="c"># This one is the template to generate the log filename dynamically, depending on the client&#39;s IP address.          </span>
</span><span class='line'><span class="nv">$template</span> Remote,<span class="s2">&quot;/var/log/syslog/%fromhost-ip%/%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Log all messages to the dynamically formed file.</span>
</span><span class='line'>:fromhost-ip, !isequal, <span class="s2">&quot;127.0.0.1&quot;</span> ?Remote
</span><span class='line'>&amp; ~
</span></code></pre></td></tr></table></div></figure>


<h5>Client端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>*.*                     @@192.168.80.130
</span></code></pre></td></tr></table></div></figure>


<p>客户端和服务端重启相关服务即可</p>

<p>关于TCP和UDP的传输方式，rsyslog官方推荐使用TCP传输方式</p>

<blockquote><p>In general, we suggest to use TCP syslog. It is way more reliable than UDP syslog and still pretty fast. The main reason is, that UDP might suffer of message loss. This happens when the syslog server must receive large bursts of messages. If the system buffer for UDP is full, all other messages will be dropped. With TCP, this will not happen. But sometimes it might be good to have a UDP server configured as well. That is, because some devices (like routers) are not able to send TCP syslog by design. In that case, you would need both syslog server types to have everything covered. If you need both syslog server types configured, please make sure they run on proper ports. By default UDP syslog is received on port 514. TCP syslog needs a different port because often the RPC service is using this port as well.</p></blockquote>

<h4>RELP传输</h4>

<p>RELP需要安装<code>rsyslog-relp</code>相应模块</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install rsyslog-relp -y</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Server端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ModLoad</span> imrelp <span class="c"># 加载相应模块</span>
</span><span class='line'><span class="nv">$InputRELPServerRun</span> 20514 <span class="c"># 监听端口</span>
</span><span class='line'>
</span><span class='line'><span class="c"># This one is the template to generate the log filename dynamically, depending on the client&#39;s IP address.          </span>
</span><span class='line'><span class="nv">$template</span> Remote,<span class="s2">&quot;/var/log/syslog/%fromhost-ip%/%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Log all messages to the dynamically formed file.</span>
</span><span class='line'>:fromhost-ip, !isequal, <span class="s2">&quot;127.0.0.1&quot;</span> ?Remote
</span></code></pre></td></tr></table></div></figure>


<h5>Client端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ActionQueueType</span> LinkedList     <span class="c"># use asynchronous processing</span>
</span><span class='line'><span class="nv">$ActionQueueFileName</span> srvrfwd    <span class="c"># set file name, also enables disk mode</span>
</span><span class='line'><span class="nv">$ActionResumeRetryCount</span> -1      <span class="c"># infinite retries on insert failure</span>
</span><span class='line'><span class="nv">$ActionQueueSaveOnShutdown</span> on   <span class="c"># save in-memory data if rsyslog shuts down</span>
</span><span class='line'>*.* :omrelp:192.168.80.130:20514
</span></code></pre></td></tr></table></div></figure>


<p>客户端和服务端重启相关服务即可</p>

<h3>参考和拓展资料</h3>

<ul>
<li><a href="http://www.rsyslog.com/tag/relp/">Using TLS with RELP</a></li>
<li><a href="http://www.rsyslog.com/doc/imrelp.html">RELP Input Module</a></li>
<li><a href="http://www.rsyslog.com/doc/omrelp.html">RELP Output Module (omrelp)</a></li>
<li><a href="http://gertverdemme.nl/sysadm/security/rsyslog_relp_remote_logging">Rsyslog remote logging using RELP</a></li>
<li><a href="http://www.rsyslog.com/tag/udp/">UDP Rsyslog</a></li>
<li><a href="http://www.rsyslog.com/tag/tcp/">TCP Rsyslog</a></li>
</ul>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS6.4 X86_64 kvm+PXE备忘]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/08/22/kvm/"/>
    <updated>2013-08-22T13:10:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/08/22/kvm</id>
    <content type="html"><![CDATA[<h3>Install 安装</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install qemu-kvm qemu-img </span>
</span><span class='line'><span class="c"># 使用kvm至少要安装的包，一个提供用户级别kvm模拟器，一个提供磁盘镜像的管理</span>
</span><span class='line'><span class="c"># 安装虚拟化管理的相关工具</span>
</span><span class='line'><span class="c"># yum install virt-manager libvirt \     </span>
</span><span class='line'>libvirt-python python-virtinst libvirt-client
</span></code></pre></td></tr></table></div></figure>


<p>也可以yum groupinstall虚拟化组件，具体可参考<a href="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Virtualization_Host_Configuration_and_Guest_Installation_Guide/sect-Virtualization_Host_Configuration_and_Guest_Installation_Guide-Host_Installation-Installing_KVM_packages_on_an_existing_Red_Hat_Enterprise_Linux_system.html">Redhat官方文档</a></p>

<!--more-->


<ul>
<li>KVM 管理工具

<ul>
<li>kvm 内核模块 &lt;- qemu 管理工具 (可用性低)</li>
<li>qemu 是开源虚拟化软件, 虚拟不同 CPU 架构, 可以 x86 虚拟 power cpu</li>
<li>libvirt, virsh, virt-manager (redhat 的辅助工具)</li>
<li>libvirt api 提供管理接口工具</li>
<li>virt-manager 调用 libvirt 工具</li>
</ul>
</li>
</ul>


<p></p>


<ul>
<li>ibvirt接口

<ul>
<li>virsh 命令行工具</li>
<li>virt-manager 图形工具</li>
<li>RHEV-M (redhat专用收费软件)</li>
</ul>
</li>
</ul>


<p></p>


<ul>
<li>支持三种虚拟设备

<ul>
<li>Emulated software devices 仿真设备 ->  南北桥, USB, PS/2 ISA PCI</li>
<li>Para-virtualized devices  -> 时钟, 网络, 串口</li>
<li>Physically shared devices &#8211;> 光纤设备</li>
</ul>
</li>
</ul>


<p>安装完之后就可以启动kvm了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># /etc/init.d/libvirtd start</span>
</span></code></pre></td></tr></table></div></figure>


<h4>桥接网络</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install bridge-utils -y</span>
</span></code></pre></td></tr></table></div></figure>


<p>桥接实例:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /etc/sysconfig/network-scripts/ifcfg-eth0 </span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span>eth0
</span><span class='line'><span class="nv">TYPE</span><span class="o">=</span>Ethernet
</span><span class='line'><span class="nv">ONBOOT</span><span class="o">=</span>yes
</span><span class='line'><span class="nv">NAME</span><span class="o">=</span><span class="s2">&quot;System eth0&quot;</span>
</span><span class='line'><span class="nv">BRIDGE</span><span class="o">=</span><span class="s2">&quot;br0&quot;</span>
</span><span class='line'><span class="c"># cat /etc/sysconfig/network-scripts/ifcfg-br0</span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span><span class="s2">&quot;br0&quot;</span>
</span><span class='line'><span class="nv">TYPE</span><span class="o">=</span><span class="s2">&quot;Bridge&quot;</span>  <span class="c"># 注意大小写</span>
</span><span class='line'><span class="nv">BOOTPROTO</span><span class="o">=</span><span class="s2">&quot;static&quot;</span>
</span><span class='line'><span class="nv">IPADDR</span><span class="o">=</span>192.168.80.131
</span><span class='line'><span class="nv">NETMASK</span><span class="o">=</span>255.255.255.0
</span><span class='line'><span class="nv">GATEWAY</span><span class="o">=</span>192.168.80.2
</span><span class='line'><span class="nv">ONBOOT</span><span class="o">=</span><span class="s2">&quot;yes&quot;</span>
</span><span class='line'><span class="nv">DELAY</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>具体可参考: <a href="http://www.cyberciti.biz/faq/rhel-linux-kvm-virtualization-bridged-networking-with-libvirt/">CentOS / Redhat: KVM Bridged Network Configuration</a></p>

<h3>构建无人值守，实现KVM PXE安装</h3>

<h4>安装相关软件</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install tftp-server syslinux dhcp vsftpd -y</span>
</span></code></pre></td></tr></table></div></figure>


<h5>dhcp</h5>

<p><strong>dhcp</strong> example:</p>

<figure class='code'><figcaption><span>dhcp    </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /etc/dhcp/dhcpd.conf </span>
</span><span class='line'>subnet 192.168.80.0 netmask 255.255.255.0 <span class="o">{</span>
</span><span class='line'>    range 192.168.80.10 192.168.80.100;
</span><span class='line'>    default-lease-time 600;
</span><span class='line'>    max-lease-time 7200;
</span><span class='line'>    next-server 192.168.80.131; <span class="c"># PXE Server地址</span>
</span><span class='line'>    filename <span class="s2">&quot;pxelinux.0&quot;</span>;      <span class="c"># 引导文件名</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c"># /etc/init.d/dhcpd restart</span>
</span></code></pre></td></tr></table></div></figure>


<h4>tftp</h4>

<p><strong>tftp</strong> example:</p>

<figure class='code'><figcaption><span>tftp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /etc/xinetd.d/tftp </span>
</span><span class='line'>service tftp
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="nv">socket_type</span>     <span class="o">=</span> dgram
</span><span class='line'>    <span class="nv">protocol</span>        <span class="o">=</span> udp
</span><span class='line'>    <span class="nb">wait</span>            <span class="o">=</span> yes
</span><span class='line'>    <span class="nv">user</span>            <span class="o">=</span> root
</span><span class='line'>    <span class="nv">server</span>          <span class="o">=</span> /usr/sbin/in.tftpd
</span><span class='line'>    <span class="nv">server_args</span>     <span class="o">=</span> -s /var/lib/tftpboot
</span><span class='line'>    <span class="nv">disable</span>         <span class="o">=</span> no <span class="c"># 默认yes，改为no即可</span>
</span><span class='line'>    <span class="nv">per_source</span>      <span class="o">=</span> 11
</span><span class='line'>    <span class="nv">cps</span>             <span class="o">=</span> 100 2
</span><span class='line'>    <span class="nv">flags</span>           <span class="o">=</span> IPv4
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c"># /etc/init.d/xinetd restart</span>
</span></code></pre></td></tr></table></div></figure>


<h4>vsftpd</h4>

<p>新建/var/ftp/centos目录，把CentOS光盘镜像挂载至/var/ftp/centos下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># mkdir /var/ftp/centos</span>
</span><span class='line'><span class="c"># mount /dev/cdrom /var/ftp/centos # 挂载镜像使用-o loop</span>
</span><span class='line'><span class="c"># /etc/init.d/vsftpd restart</span>
</span></code></pre></td></tr></table></div></figure>


<h4>无人值守</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># mkdir /var/lib/tftpboot/CentOS6</span>
</span><span class='line'><span class="c"># cp /var/ftp/centos/images/pxeboot/{initrd.img,vmlinuz} /var/lib/tftpboot/CentOS6</span>
</span><span class='line'><span class="c"># cp /var/ftp/centos/isolinux/{boot.msg,vesamenu.c32} /var/lib/tftpboot/</span>
</span><span class='line'><span class="c"># cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/</span>
</span><span class='line'><span class="c"># mkdir /var/ftp/tftpboot/pxelinux.cfg</span>
</span><span class='line'><span class="c"># cp /var/ftp/centos/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg/default</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>tftpboot目录树结构</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># tree /var/lib/tftpboot/</span>
</span><span class='line'>/var/lib/tftpboot/
</span><span class='line'>├── boot.msg
</span><span class='line'>├── CentOS6
</span><span class='line'>│   ├── initrd.img
</span><span class='line'>│   └── vmlinuz
</span><span class='line'>├── pxelinux.0
</span><span class='line'>├── pxelinux.cfg
</span><span class='line'>│   └── default
</span><span class='line'>└── vesamenu.c32
</span><span class='line'>
</span><span class='line'>2 directories, 6 files
</span></code></pre></td></tr></table></div></figure>


<p><strong>pxelinux.cfg/default</strong> example:</p>

<figure class='code'><figcaption><span>pxe default</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /var/lib/tftpboot/pxelinux.cfg/default                                                                                                                      </span>
</span><span class='line'><span class="c"># default CentOS6_PXE # 默认启动&#39;default CentOS6_PXE&#39;标记的内核</span>
</span><span class='line'>default vesamenu.c32  <span class="c"># 菜单选项</span>
</span><span class='line'>timeout 100 <span class="c"># 单位是1/10s</span>
</span><span class='line'><span class="c"># prompt 1  # 为 &#39;0&#39; 时则不提示&#39;boot: &#39;，将会直接启动 &#39;default&#39; 参数中指定的内容</span>
</span><span class='line'>
</span><span class='line'>display boot.msg    <span class="c"># 启动时显示</span>
</span><span class='line'>
</span><span class='line'><span class="c"># menu background splash.jpg    # 菜单背景等</span>
</span><span class='line'>menu title Welcome to CentOS 6.4!
</span><span class='line'>menu color border 0 <span class="c">#ffffffff #00000000</span>
</span><span class='line'>menu color sel 7 <span class="c">#ffffffff #ff000000</span>
</span><span class='line'>menu color title 0 <span class="c">#ffffffff #00000000</span>
</span><span class='line'>menu color tabmsg 0 <span class="c">#ffffffff #00000000</span>
</span><span class='line'>menu color unsel 0 <span class="c">#ffffffff #00000000</span>
</span><span class='line'>menu color hotsel 0 <span class="c">#ff000000 #ffffffff</span>
</span><span class='line'>menu color hotkey 7 <span class="c">#ffffffff #ff000000</span>
</span><span class='line'>menu color scrollbar 0 <span class="c">#ffffffff #00000000</span>
</span><span class='line'>
</span><span class='line'>label CentOS6_PXE
</span><span class='line'>  menu label ^PXE Install CentOS KVM
</span><span class='line'>  kernel /CentOS6/vmlinuz
</span><span class='line'>  append <span class="nv">ks</span><span class="o">=</span>ftp://192.168.80.131/ks.cfg <span class="nv">initrd</span><span class="o">=</span>/CentOS6/initrd.img
</span><span class='line'>label rescue
</span><span class='line'>  menu label ^Rescue installed system
</span><span class='line'>  kernel /CentOS6/vmlinuz
</span><span class='line'>  append <span class="nv">initrd</span><span class="o">=</span>/CentOS6/initrd.img rescue
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>关于PXE的进一步细节可以参考<a href="http://www.syslinux.org/wiki/index.php/PXELINUX">pxelinux官方文档</a></p>

<p><strong>ks.cfg</strong> example:</p>

<figure class='code'><figcaption><span>ks.cfg</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /var/ftp/ks.cfg</span>
</span><span class='line'><span class="c"># System authorization information</span>
</span><span class='line'>auth  --useshadow  --enablemd5
</span><span class='line'><span class="c"># System bootloader configuration</span>
</span><span class='line'>bootloader --location<span class="o">=</span>mbr
</span><span class='line'><span class="c"># Clear the Master Boot Record</span>
</span><span class='line'>zerombr
</span><span class='line'><span class="c"># Partition clearing information</span>
</span><span class='line'>clearpart --all --initlabel
</span><span class='line'><span class="c"># Use text mode install</span>
</span><span class='line'>text
</span><span class='line'><span class="c"># Firewall configuration</span>
</span><span class='line'>firewall --disabled
</span><span class='line'>skipx
</span><span class='line'><span class="c"># Run the Setup Agent on first boot</span>
</span><span class='line'>firstboot --disable
</span><span class='line'><span class="c"># System keyboard</span>
</span><span class='line'>keyboard us
</span><span class='line'><span class="c"># System language</span>
</span><span class='line'>lang en_US
</span><span class='line'><span class="c"># Installation logging level</span>
</span><span class='line'>logging --level<span class="o">=</span>info
</span><span class='line'><span class="c"># Use network installation</span>
</span><span class='line'>url --url<span class="o">=</span>ftp://192.168.80.131/centos
</span><span class='line'><span class="c"># Network information</span>
</span><span class='line'>network --bootproto<span class="o">=</span>dhcp --device<span class="o">=</span>eth0 --onboot<span class="o">=</span>on
</span><span class='line'><span class="c"># Reboot after installation</span>
</span><span class='line'>reboot
</span><span class='line'><span class="c">#Root password</span>
</span><span class='line'>rootpw --iscrypted <span class="nv">$1$duSkJ1$1P5qGnqUGn3S1MTTFiPJY</span>.
</span><span class='line'>
</span><span class='line'><span class="c"># SELinux configuration</span>
</span><span class='line'>selinux --disabled
</span><span class='line'><span class="c"># System timezone</span>
</span><span class='line'>timezone  Asia/Shanghai
</span><span class='line'><span class="c"># Install OS instead of upgrade</span>
</span><span class='line'>install
</span><span class='line'>
</span><span class='line'><span class="c"># Disk partitioning information</span>
</span><span class='line'>part /boot --asprimary --bytes-per-inode<span class="o">=</span>4096 --fstype<span class="o">=</span><span class="s2">&quot;ext3&quot;</span> --size<span class="o">=</span>100
</span><span class='line'>part / --bytes-per-inode<span class="o">=</span>4096 --fstype<span class="o">=</span><span class="s2">&quot;ext3&quot;</span> --size<span class="o">=</span>5000
</span><span class='line'>part swap --bytes-per-inode<span class="o">=</span>4096 --fstype<span class="o">=</span><span class="s2">&quot;swap&quot;</span> --size<span class="o">=</span>512
</span><span class='line'>
</span><span class='line'>%packages --nobase
</span><span class='line'>@core
</span><span class='line'>@Development tools
</span><span class='line'>acpid   <span class="c"># 如果不安装acpid服务，virsh shutdown virtual_name 命令会失效</span>
</span><span class='line'>vim
</span><span class='line'>wget
</span><span class='line'>lsof
</span><span class='line'>%end
</span></code></pre></td></tr></table></div></figure>


<p>如果最小化安装则软件包选择如下：</p>

<figure class='code'><figcaption><span>Minimal install</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>%packages --nobase
</span><span class='line'>@core
</span></code></pre></td></tr></table></div></figure>


<p>关于kickstart的更进一步了解可参考红帽官档<a href="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Installation_Guide/s1-kickstart2-options.html">Kickstart Options</a> <a href="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Virtualization_Host_Configuration_and_Guest_Installation_Guide/sect-Virtualization_Host_Configuration_and_Guest_Installation_Guide-Guest_Installation-Installing_guests_with_PXE.html">Installing guest virtual machines with PXE</a></p>

<h3>PXE 安装KVM虚拟机</h3>

<p>如果要开启&#8211;graphics vnc选项，则需要修改vnc监听端口，默认监听的是127.0.0.1，修改为0.0.0.0即可</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep &#39;^vnc_listen&#39; /etc/libvirt/qemu.conf</span>
</span><span class='line'><span class="nv">vnc_listen</span> <span class="o">=</span> <span class="s2">&quot;0.0.0.0&quot;</span>
</span><span class='line'><span class="c"># /etc/init.d/libvirtd restart</span>
</span></code></pre></td></tr></table></div></figure>


<p>man手册关于vnc端口介绍摘录：</p>

<pre><code>Address to listen on for VNC/Spice connections. Default is typically 127.0.0.1   
(localhost only), but some hypervisors allow changing this globally     
(for example, the qemu driver default can be changed   in /etc/libvirt/qemu.conf).   
Use 0.0.0.0 to allow access from other machines. This is use by ’vnc’ and ’spice.  
</code></pre>

<h4>安装实例：</h4>

<h5>通过location方式结合Kickstart安装</h5>

<ul>
<li>&#8211;extra-args指定ks相关选项，并且指定console类型使得virsh console可以连接操作，也可指定客户机IP、网关、DNS等，无需DHCP：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># virt-install --name centos --ram=1024 --vcpus=1 --os-type=linux --os-variant=rhel6 \</span>
</span><span class='line'>--network bridge:br0 --disk <span class="nv">path</span><span class="o">=</span>/var/lib/libvirt/images/centos6-machine1.img,size<span class="o">=</span>10 <span class="se">\</span>
</span><span class='line'>--location ftp://192.168.80.131/centos/ --extra-args <span class="s2">&quot;ks=ftp://192.168.80.131/ks.cfg \</span>
</span><span class='line'><span class="s2">ksdevice=eth0 ip=192.168.80.150  netmask=255.255.255.0 console=ttyS0&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>PXE方式安装</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># virt-install --connect qemu:///system --network=bridge:br0 \</span>
</span><span class='line'>--pxe --name rhel6-machine1 --ram<span class="o">=</span>1024 --vcpus<span class="o">=</span>1 <span class="se">\</span>
</span><span class='line'>--os-type<span class="o">=</span>linux --os-variant<span class="o">=</span>rhel6 --disk <span class="se">\</span>
</span><span class='line'><span class="nv">path</span><span class="o">=</span>/var/lib/libvirt/images/rhel6-machine1.img,size<span class="o">=</span>10
</span></code></pre></td></tr></table></div></figure>


<p><strong>注意</strong>: 如果需要指定console，&#8211;pxe是不支持&#8211;extra-args额外选项的，所以需要在pxe <code>default</code> 文件添加相关内容[SERIAL和console]，如下example</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>SERIAL 0 115200
</span><span class='line'>label CentOS6_PXE
</span><span class='line'>    menu label ^PXE Install CentOS KVM
</span><span class='line'>    kernel /CentOS6/vmlinuz
</span><span class='line'>    append <span class="nv">ks</span><span class="o">=</span>ftp://192.168.80.131/ks.cfg <span class="nv">initrd</span><span class="o">=</span>/CentOS6/initrd.img <span class="nv">console</span><span class="o">=</span>tty0 <span class="nv">console</span><span class="o">=</span>ttyS0,115200
</span></code></pre></td></tr></table></div></figure>


<h5>本地安装：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># virt-install --name centos --ram=1024 --vcpus=1 --os-type=linux \</span>
</span><span class='line'>--os-variant<span class="o">=</span>rhel6 --location /mnt/ --network bridge:br0 <span class="se">\</span>
</span><span class='line'>--disk <span class="nv">path</span><span class="o">=</span>/var/lib/libvirt/images/rhel6.img,size<span class="o">=</span>10 --extra-args <span class="s2">&quot;console=ttyS0&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>关于KVM的Guest安装方式，virt-install man手册中也有很多实例，这里不一一介绍。</p>

<p>开启&#8211;graphics vnc选项可在Windows下下载vncviewer客户端，输入对应IP和端口即可[ 笔者个人还是习惯通过console连接安装，不开启vnc选项 ]，如下</p>

<figure class='code'><figcaption><span>查看对应端口</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># netstat -tulnp | grep kvm</span>
</span><span class='line'>tcp        0      0 0.0.0.0:5900                0.0.0.0:*                   LISTEN      55762/qemu-kvm
</span><span class='line'>tcp        0      0 0.0.0.0:5901                0.0.0.0:*                   LISTEN      56656/qemu-kvm
</span></code></pre></td></tr></table></div></figure>


<p>连接对应端口<br/>
<img src="http://kumu-Linux.github.io/images/vnc1.png" width="500"></p>

<p></p>


<p>连接之后,就可以正常安装了</p>

<p><img src="http://kumu-Linux.github.io/images/vnc2.png" width="500"></p>

<h3>virsh 操作命令</h3>

<p>这里只介绍一些常用的virsh使用方法，具体的命令可以参看virsh的man手册介绍或者参考红帽官方文档<a href="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/5/html/Virtualization/chap-Virtualization-Managing_guests_with_virsh.html">Managing guests with virsh</a></p>

<p>默认只输入virsh命令会进入virsh的终端：如下，help可以获取命令帮助</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># virsh </span>
</span><span class='line'>Welcome to virsh, the virtualization interactive terminal.
</span><span class='line'>
</span><span class='line'>Type:  <span class="s1">&#39;help&#39;</span> <span class="k">for </span><span class="nb">help </span>with commands
</span><span class='line'>       <span class="s1">&#39;quit&#39;</span> to quit
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># </span>
</span></code></pre></td></tr></table></div></figure>


<p>virsh简单操作</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>virsh <span class="c"># list    # 显示运行或者暂停的Guest</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      running
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># list --all  # 显示所有的Guest，包括状态为shut off的</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      running
</span><span class='line'> -     centos                         shut off
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># console centos6_1   # console方式连接Guest</span>
</span><span class='line'>Connected to domain centos6_1
</span><span class='line'>Escape character is ^<span class="o">]</span>      <span class="c"># 使用Ctrl+]即可退出</span>
</span><span class='line'>
</span><span class='line'>CentOS release 6.4 <span class="o">(</span>Final<span class="o">)</span>
</span><span class='line'>Kernel 2.6.32-358.el6.x86_64 on an x86_64
</span><span class='line'>
</span><span class='line'>localhost.localdomain login:
</span><span class='line'>virsh <span class="c"># start centos        # 开启某个Guest</span>
</span><span class='line'>Domain centos started
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># list</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      running
</span><span class='line'> 32    centos                         running
</span><span class='line'>virsh <span class="c"># shutdown centos     </span>
</span><span class='line'><span class="c"># 关闭某个Guest，这里一定要注意，如果Guest没有安装运行acpid服务，</span>
</span><span class='line'><span class="c"># 则此方式失效，可以kill强制关闭，或者console/ssh连接执行关闭                                                                                                                       </span>
</span><span class='line'>Domain centos is being shutdown
</span></code></pre></td></tr></table></div></figure>


<p>删除某个Guest，一般需要两步走，对于正在运行的Guest则需要先关闭再继续两步走[也可以直接virsh destroy virtual_name], 这里就演示三步：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>virsh destroy guest_name
</span><span class='line'>virsh undefine guest_name
</span><span class='line'>rm -rf guest_img  <span class="c"># 删除虚拟存储</span>
</span></code></pre></td></tr></table></div></figure>


<p>挂起主机</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>virsh <span class="c"># list</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      running
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># suspend centos6_1   # 挂起主机</span>
</span><span class='line'>Domain centos6_1 suspended
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># list</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      paused
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># resume centos6_1    # 把主机从挂起状态切换至运行状态</span>
</span><span class='line'>Domain centos6_1 resumed
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># list</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      running
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># </span>
</span></code></pre></td></tr></table></div></figure>


<h4>virt-clone 克隆Guest</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># virt-clone --connect=qemu:///system --original=centos6_1 \</span>
</span><span class='line'>--name<span class="o">=</span>centos6_2 -f /var/lib/libvirt/images/centos6_2.img
</span><span class='line'>ERROR    Domain with devices to clone must be paused or shutoff.
</span><span class='line'><span class="c"># virsh suspend centos6_1</span>
</span><span class='line'>Domain centos6_1 suspended
</span><span class='line'>
</span><span class='line'><span class="c"># virsh list</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      paused
</span><span class='line'>
</span><span class='line'><span class="c"># virt-clone --connect=qemu:///system --original=centos6_1 \</span>
</span><span class='line'>--name<span class="o">=</span>centos6_2 -f /var/lib/libvirt/images/centos6_2.img
</span><span class='line'>Allocating <span class="s1">&#39;centos6_2.img&#39;</span>           1% <span class="o">[</span>-              <span class="o">]</span> 9.0 MB/s | 112 MB     18:44 ETA
</span></code></pre></td></tr></table></div></figure>


<h3>参考和拓展资料</h3>

<ul>
<li><a href="http://www.joshbolling.com/blog/2013/01/automate-rhel-based-os-deployments-with-pxe-boot-and-kickstart/">Automate RHEL Based OS Deployments with PXE Boot and Kickstart</a></li>
<li><a href="http://www.linuxquestions.org/questions/linux-networking-3/centos-and-and-serial-console-login-894380/">Centos&amp; and serial console login</a></li>
<li><a href="http://zhumeng8337797.blog.163.com/blog/static/1007689142011715111317513/">kvm virsh console</a></li>
<li><a href="http://docs.fedoraproject.org/zh-CN/Fedora/12/html/Virtualization_Guide/chap-Virtualization_Guide-KVM_live_migration.html">KVM 实时迁移</a></li>
<li><a href="http://blog.csdn.net/signmem/article/details/7489135">rhel6 kvm备忘</a></li>
</ul>


<p>自己之前的两篇挫文： <a href="http://blog.csdn.net/kumu_linux/article/details/8263987">KVM在线迁移(动态迁移)</a> <a href="http://blog.csdn.net/kumu_linux/article/details/8263326">RHEL6 KVM安装备忘</a></p>

<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenNebula在CentOS6.4安装备忘]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/08/22/opennebula-install/"/>
    <updated>2013-08-22T11:10:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/08/22/opennebula-install</id>
    <content type="html"><![CDATA[<h3>简介</h3>

<p>OpenNebula是一款为云计算而打造的开源工具箱。它允许你和Xen、KVM或VMware ESX一起建立和管理私有云，同时还提供Deltacloud适配器与Amazon EC2相配合来管理混合云。目前版本4.2，可支持XEN、KVM和VMware，以及实时存取EC2和 ElasticHosts，OpenNebula可以构建私有云、混合云、公开云。</p>

<!--more-->


<h3>OpenNebula 4.2 相关</h3>

<ul>
<li><a href="http://opennebula.org/documentation:rel4.2">OpenNebula 4.2 Guides</a></li>
<li>ruby >= 1.8.7 #　CentOS6.4默认支持版本</li>
<li>OpenNebula<a href="http://downloads.opennebula.org/">下载地址</a>

<ul>
<li>CentOS选择对应版本即可<strong>CentOS-6-opennebula-4.2.0-1.tar.gz</strong></li>
</ul>
</li>
</ul>


<h3>更新配置源和update软件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</span>
</span><span class='line'><span class="c"># rpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm</span>
</span><span class='line'><span class="c"># yum update</span>
</span></code></pre></td></tr></table></div></figure>


<h3>安装OpenNubula4.2</h3>

<h4>解压下载的OpenNebula4.2软件包</h4>

<ul>
<li>opennebula-server: main OpenNebula daemon, scheduler, etc</li>
<li>opennebula-sunstone: OpenNebula Sunstone, EC2, OCCI</li>
<li>opennebula-ozones: OpenNebula OZones</li>
<li>opennebula-ruby: Ruby Bindings</li>
<li>opennebula-java: Java Bindings</li>
<li>opennebula-gate: Gate server that enables communication between VMs and OpenNebula</li>
<li>opennebula-flow: Manages services and elasticity</li>
<li>opennebula-node-kvm: meta-package that installs the oneadmin user, libvirt and kvm</li>
</ul>


<p>可以直接配置OpenNebula yum源直接安装，也可以下载tar包安装</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># tar xf CentOS-6-opennebula-4.2.0-1.tar.gz</span>
</span><span class='line'><span class="c"># cd opennebula-4.2.0-1</span>
</span><span class='line'><span class="c"># yum localinstall opennebula-4.2.0-1.x86_64.rpm \</span>
</span><span class='line'>opennebula-common-4.2.0-1.x86_64.rpm opennebula-java-4.2.0-1.x86_64.rpm <span class="se">\</span>
</span><span class='line'>opennebula-gate-4.2.0-1.x86_64.rpm opennebula-flow-4.2.0-1.x86_64.rpm <span class="se">\</span>
</span><span class='line'>opennebula-server-4.2.0-1.x86_64.rpm opennebula-ozones-4.2.0-1.x86_64.rpm <span class="se">\</span>
</span><span class='line'>opennebula-ruby-4.2.0-1.x86_64.rpm opennebula-sunstone-4.2.0-1.x86_64.rpm -y
</span></code></pre></td></tr></table></div></figure>


<h3>启动相关服务</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># /etc/init.d/opennebula start</span>
</span><span class='line'><span class="c"># /etc/init.d/opennebula-sunstone start</span>
</span></code></pre></td></tr></table></div></figure>


<h3>修改sunstone默认监听网址</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># lsof -i:9869  # 默认监听本地9869端口，如果连接需要修改为和外网通信地址</span>
</span><span class='line'>COMMAND   PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
</span><span class='line'>ruby    22131 oneadmin    6u  IPv4 107999      0t0  TCP localhost:9869 <span class="o">(</span>LISTEN<span class="o">)</span>
</span><span class='line'><span class="c"># grep &#39;:host&#39; /etc/one/sunstone-server.conf</span>
</span><span class='line'>:host: 127.0.0.1
</span><span class='line'><span class="c"># sed -i &#39;/:host/s/127.0.0.1/192.168.80.130/g&#39; /etc/one/sunstone-server.conf</span>
</span><span class='line'><span class="c"># grep &#39;:host&#39; /etc/one/sunstone-server.conf </span>
</span><span class='line'>:host: 192.168.80.130
</span><span class='line'><span class="c"># /etc/init.d/opennebula-sunstone restart</span>
</span></code></pre></td></tr></table></div></figure>


<h3>浏览器登录测试</h3>

<p>http://192.168.80.130:9869</p>

<p><img src="http://kumu-Linux.github.io/images/OpenNebula_web.png" width="500" /></p>

<p>用户名和密码在安装的时候已经随机生成，oneadmin 是用户名，后面的一串是密码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /var/lib/one/.one/one_auth </span>
</span><span class='line'>oneadmin:023c0bd7b09d0631074cc16aa61b7d60
</span></code></pre></td></tr></table></div></figure>


<h3>参考文档</h3>

<p><a href="http://opennebula.org/documentation:rel4.2:ignc#centos_platform_notes">One install doc</a>
<a href="http://www.vpsee.com/2013/05/install-opennebula-4-0-on-centos-6-4/">在CentOS6.4上安装和配置OpenNebula4.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pssh使用方法]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/08/12/pssh/"/>
    <updated>2013-08-12T14:53:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/08/12/pssh</id>
    <content type="html"><![CDATA[<p>pssh是一个python编写可以在多台服务器上执行命令的工具，同时支持拷贝文件，是同类工具中很出色的，类似pdsh <a href="http://kumu-linux.github.io/blog/2013/06/19/pdsh/">pdsh使用方法</a> 。为方便操作，使用前请在各个服务器上配置好密钥认证访问。项目地址: <a href="https://code.google.com/p/parallel-ssh/">parallel-ssh</a></p>

<!--more -->


<h3>安装</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://parallel-ssh.googlecode.com/files/pssh-2.3.1.tar.gz
</span><span class='line'>tar zxvf pssh-2.3.1.tar.gz
</span><span class='line'><span class="nb">cd </span>pssh-2.3.1/
</span><span class='line'>python setup.py install
</span></code></pre></td></tr></table></div></figure>


<h3>pssh相关参数</h3>

<ul>
<li>pssh在多个主机上并行地运行命令

<ul>
<li>-h 执行命令的远程主机列表,文件内容格式[user@]host[:port]

<ul>
<li> 如 test@172.16.10.10:229</li>
</ul>
</li>
<li>-H 执行命令主机，主机格式 user@ip:port</li>
<li>-l 远程机器的用户名</li>
<li>-p 一次最大允许多少连接</li>
<li>-P 执行时输出执行信息</li>
<li>-o 输出内容重定向到一个文件</li>
<li>-e 执行错误重定向到一个文件</li>
<li>-t 设置命令执行超时时间</li>
<li>-A 提示输入密码并且把密码传递给ssh(如果私钥也有密码也用这个参数)</li>
<li>-O 设置ssh一些选项</li>
<li>-x 设置ssh额外的一些参数，可以多个，不同参数间空格分开</li>
<li>-X 同-x,但是只能设置一个参数</li>
<li>-i 显示标准输出和标准错误在每台host执行完毕后</li>
</ul>
</li>
</ul>


<h3>附加工具</h3>

<ul>
<li>pscp 传输文件到多个hosts，类似scp

<ul>
<li>pscp -h hosts.txt -l irb2 foo.txt /home/irb2/foo.txt</li>
</ul>
</li>
<li>pslurp 从多台远程机器拷贝文件到本地</li>
<li>pnuke 并行在远程主机杀进程

<ul>
<li>pnuke -h hosts.txt -l irb2 java</li>
</ul>
</li>
<li>prsync 使用rsync协议从本地计算机同步到远程主机

<ul>
<li>prsync -r -h hosts.txt -l irb2 foo /home/irb2/foo</li>
</ul>
</li>
</ul>


<h3>示例</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>kumu-opsdev ~ <span class="c"># cat host.txt </span>
</span><span class='line'>root@192.168.230.128
</span><span class='line'>wul@10.0.0.8
</span></code></pre></td></tr></table></div></figure>


<p>推荐使用<code>-i</code>选项输出信息而不是<code>-P</code>选项</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>kumu-opsdev ~ <span class="c"># pssh -i -h host.txt &#39;date&#39;</span>
</span><span class='line'><span class="o">[</span>1<span class="o">]</span> 16:32:38 <span class="o">[</span>SUCCESS<span class="o">]</span> root@192.168.230.128
</span><span class='line'>Mon Aug 12 16:32:38 CST 2013
</span><span class='line'><span class="o">[</span>2<span class="o">]</span> 16:32:38 <span class="o">[</span>SUCCESS<span class="o">]</span> wul@10.0.0.8
</span><span class='line'>Mon Aug 12 16:32:38 CST 2013
</span></code></pre></td></tr></table></div></figure>


<p><code>-x</code>选项</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>kumu-opsdev ~ <span class="c"># pssh -x &#39;-t -t -o StrictHostKeyChecking=no&#39; -i -h host.txt date</span>
</span><span class='line'><span class="o">[</span>1<span class="o">]</span> 17:20:01 <span class="o">[</span>SUCCESS<span class="o">]</span> root@192.168.230.128
</span><span class='line'>Mon Aug 12 17:20:01 CST 2013
</span><span class='line'>Stderr: Connection to 192.168.230.128 closed.
</span><span class='line'><span class="o">[</span>2<span class="o">]</span> 17:20:01 <span class="o">[</span>SUCCESS<span class="o">]</span> wul@10.0.0.8
</span><span class='line'>Mon Aug 12 17:20:01 CST 2013
</span><span class='line'>Stderr: Connection to 10.0.0.8 closed.
</span></code></pre></td></tr></table></div></figure>


<p><code>-H</code>选项</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>kumu-opsdev ~ <span class="c"># pssh -x &#39;-t -t -o StrictHostKeyChecking=no&#39; -i -H 192.168.230.128 -H wul@10.0.0.8 date</span>
</span><span class='line'><span class="o">[</span>1<span class="o">]</span> 17:22:58 <span class="o">[</span>SUCCESS<span class="o">]</span> 192.168.230.128
</span><span class='line'>Mon Aug 12 17:22:58 CST 2013
</span><span class='line'>Stderr: Connection to 192.168.230.128 closed.
</span><span class='line'><span class="o">[</span>2<span class="o">]</span> 17:22:58 <span class="o">[</span>SUCCESS<span class="o">]</span> wul@10.0.0.8
</span><span class='line'>Mon Aug 12 17:22:58 CST 2013
</span><span class='line'>Stderr: Connection to 10.0.0.8 closed.
</span></code></pre></td></tr></table></div></figure>


<h3>参考文档</h3>

<ul>
<li><a href="http://linux.die.net/man/1/pssh">pssh</a></li>
<li><a href="http://www.theether.org/pssh/docs/0.2.3/pssh-HOWTO.html">pssh-howto</a></li>
</ul>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux下终端利器tmux]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/08/06/tmux/"/>
    <updated>2013-08-06T11:05:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/08/06/tmux</id>
    <content type="html"><![CDATA[<blockquote><p>&#8220;君子生非异也，善假于物也&#8221; 。&#8211;语出《荀子·劝学》</p></blockquote>

<p>如果记得没错的话，《荀子·劝学》我们这一代高中的时候应该都读过这篇文章。原意大概是君子的资质与一般人没有什么区别，君子之所以高于一般人，是因为他能善于利用外物。对于技术人来说，好工具的选择和使用往往可以省去很多不必要的麻烦，好的开源工具很多，看你如何去使用。对于终端复用工具这里推荐使用tmux，当然此类工具比较好的还有screen，不过相对<a href="http://www.ibm.com/developerworks/cn/linux/l-cn-screen/">screen</a> 这里我更倾向于推荐tmux[强悍的分屏等]。</p>

<!--more-->


<p>如果仅仅只是多标签的功能，那么putty结合一些工具也可以做到，或者干脆使用xshell，当然tmux此类工具不仅仅是那么简单。另外一个选择使用tmux/screen工具的原因是，有时我们会经常需要SSH或者telent远程登录到Linux服务器，有一些任务需要长时间运行，比如系统备份、数据传输等。通常情况下我们都是开一个远程终端窗口，因为执行时间比较长，一般需要等待它执行完毕，在此过程中不能关闭窗口或者网络原因断开连接，断开之后就Game Over了。这个功能就有点类似<code>nohup</code>和<code>setsid</code>命令的实现了，而tmux/screen则集nohup/setsid和多标签于一身。废话少说，我们接下来看如何安装使用它。</p>

<h3>安装</h3>

<p>安装的话这里就不过说明了，不同的Linux发行版相应的包管理机制不同，安装tmux包即可。</p>

<h3>使用技巧</h3>

<h4>几个名词</h4>

<p>tmux主要包括以下几个模块：</p>

<table>
    <tr>
        <td>session</td>
        <td>会话:一个服务器可以包含多个会话</td>
    </tr>
    <tr>
        <td>window</td>
        <td>窗口:一个会话可以包含多个窗口</td>
    </tr>
    <tr>
        <td>pane</td>
        <td>面板:一个窗口可以包含多个面板[强悍的分屏]</td>
    </tr>
</table>




<p></p>


<h4>小试牛刀</h4>

<p>列出了tmux的几个基本模块之后，就要来点实实在在的干货了，和<code>screen</code>默认激活控制台的<code>Ctrl+a</code>不同，tmux默认的是<code>Ctrl+b</code>，使用快捷键之后就可以执行一些相应的指令了。当然如果你不习惯使用<code>Ctrl+b</code>，也可以在<code>~/.tmux</code>文件中加入以下内容把快捷键变为<code>Ctrl+a</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Set prefix key to Ctrl-a</span>
</span><span class='line'>unbind-key C-b
</span><span class='line'><span class="nb">set</span>-option -g prefix C-a
</span></code></pre></td></tr></table></div></figure>


<p>以下所有的操作都是激活控制台之后，即键入<code>Ctrl+b</code>前提下才可以使用的命令【这里假设快捷键没改，改了的话则用<code>Ctrl+b</code>】。</p>

<p><u>基本操作</u>：</p>

<table>
    <tr>
        <td>?</td>
        <td>列出所有快捷键；按q返回</td>
    </tr>
    <tr>
        <td>d</td>
        <td>脱离当前会话,可暂时返回Shell界面，输入tmux attach能够重新进入之前会话</td>
    </tr>
    <tr>
        <td>s</td>
        <td>选择并切换会话；在同时开启了多个会话时使用</td>
    </tr>
    <tr>
        <td>D</td>
        <td>选择要脱离的会话；在同时开启了多个会话时使用</td>
    </tr>   
    <tr>
        <td>:</td>
        <td>进入命令行模式；此时可输入支持的命令，例如kill-server所有tmux会话</td>
    </tr>
    <tr>
        <td>[</td>
        <td>复制模式，光标移动到复制内容位置，空格键开始，方向键选择复制，回车确认，q/Esc退出</td>
    </tr>
    <tr>
        <td>]</td>
        <td>进入粘贴模式，粘贴之前复制的内容，按q/Esc退出</td>
    </tr>
    <tr>
        <td>~</td>
        <td>列出提示信息缓存；其中包含了之前tmux返回的各种提示信息</td>
    </tr>
    <tr>
        <td>t</td>
        <td>显示当前的时间</td>
    </tr>
    <tr>
        <td>Ctrl+z</td>
        <td>挂起当前会话</td>
    </tr>
</table>




<p></p>


<p><u>窗口操作</u>:</p>

<table>
    <tr>
        <td>c</td>
        <td>创建新窗口</td>
    </tr>
    <tr>
        <td>&</td>
        <td>关闭当前窗口</td>
    </tr>
    <tr>
        <td>数字键</td>
        <td>切换到指定窗口</td>
    </tr>
    <tr>
        <td>p</td>
        <td>切换至上一窗口</td>
    </tr>
    <tr>
        <td>n</td>
        <td>切换至下一窗口</td>
    </tr>
    <tr>
        <td>l</td>
        <td>前后窗口间互相切换</td>
    </tr>
    <tr>
        <td>w</td>
        <td>通过窗口列表切换窗口</td>
    </tr>
    <tr>
        <td>,</td>
        <td>重命名当前窗口，便于识别</td>
    </tr>
    <tr>
        <td>.</td>
        <td>修改当前窗口编号，相当于重新排序</td>
    </tr>
    <tr>
        <td>f</td>
        <td>在所有窗口中查找关键词，便于窗口多了切换</td>
    </tr>
</table>




<p></p>


<p><u>面板操作</u>:</p>

<table>
    <tr>
        <td>&#8220;</td>
        <td>将当前面板上下分屏</td>
    </tr>
    <tr>
        <td>%</td>
        <td>将当前面板左右分屏</td>
    </tr>
    <tr>
        <td>x</td>
        <td>关闭当前分屏</td>
    </tr>
    <tr>
        <td>!</td>
        <td>将当前面板置于新窗口,即新建一个窗口,其中仅包含当前面板</td>
    </tr>
    <tr>
        <td>Ctrl+方向键</td>
        <td>以1个单元格为单位移动边缘以调整当前面板大小</td>
    </tr>
    <tr>
        <td>Alt+方向键</td>
        <td>以5个单元格为单位移动边缘以调整当前面板大小</td>
    </tr>
    <tr>
        <td>空格键</td>
        <td>可以在默认面板布局中切换，试试就知道了</td>
    </tr>
    <tr>
        <td>q</td>
        <td>显示面板编号</td>
    </tr>
    <tr>
        <td>o</td>
        <td>选择当前窗口中下一个面板</td>
    </tr>
    <tr>
        <td>方向键</td>
        <td>移动光标选择对应面板</td>
    </tr>
    <tr>
        <td>{</td>
        <td>向前置换当前面板</td>
    </tr>
    <tr>
        <td>}</td>
        <td>向后置换当前面板</td>
    </tr>
    <tr>
        <td>Alt+o</td>
        <td>逆时针旋转当前窗口的面板</td>
    </tr>
    <tr>
        <td>Ctrl+o</td>
        <td>顺时针旋转当前窗口的面板</td>
    </tr>
    <tr>
        <td>z</td>
        <td>tmux 1.8新特性，最大化当前所在面板</td>
    </tr>
</table>




<p></p>


<h4>.tmux.conf基本配置</h4>

<p>软件到手了，自己怎么舒服就怎么用。定制主要还是在于<code>.tmux.conf</code>配置文件的配置，以下列出我的配置文件：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Set prefix key to Ctrl-a</span>
</span><span class='line'>unbind-key C-b
</span><span class='line'><span class="nb">set</span>-option -g prefix C-a
</span><span class='line'><span class="nb">bind</span>-key C-a last-window <span class="c"># 方便切换，个人习惯</span>
</span><span class='line'><span class="nb">bind</span>-key a send-prefix
</span><span class='line'><span class="c"># shell下的Ctrl+a切换到行首在此配置下失效，此处设置之后Ctrl+a再按a即可切换至shell行首</span>
</span><span class='line'>
</span><span class='line'><span class="c"># reload settings # 重新读取加载配置文件</span>
</span><span class='line'><span class="nb">bind </span>R <span class="nb">source</span>-file ~/.tmux.conf <span class="se">\;</span> display-message <span class="s2">&quot;Config reloaded...&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Ctrl-Left/Right cycles thru windows (no prefix) </span>
</span><span class='line'><span class="c"># 不使用prefix键，使用Ctrl和左右方向键方便切换窗口</span>
</span><span class='line'><span class="nb">bind</span>-key -n <span class="s2">&quot;C-Left&quot;</span> <span class="k">select</span>-window -t :-
</span><span class='line'><span class="nb">bind</span>-key -n <span class="s2">&quot;C-Right&quot;</span> <span class="k">select</span>-window -t :+
</span><span class='line'>
</span><span class='line'><span class="c"># displays </span>
</span><span class='line'><span class="nb">bind</span>-key * list-clients
</span><span class='line'>
</span><span class='line'><span class="nb">set</span> -g default-terminal <span class="s2">&quot;screen-256color&quot;</span>   <span class="c"># use 256 colors</span>
</span><span class='line'><span class="nb">set</span> -g display-time 5000                    <span class="c"># status line messages display</span>
</span><span class='line'><span class="nb">set</span> -g status-utf8 on                       <span class="c"># enable utf-8 </span>
</span><span class='line'><span class="nb">set</span> -g <span class="nb">history</span>-limit 100000                 <span class="c"># scrollback buffer n lines</span>
</span><span class='line'>setw -g mode-keys vi                        <span class="c"># use vi mode</span>
</span><span class='line'>
</span><span class='line'><span class="c"># start window indexing at one instead of zero 使窗口从1开始，默认从0开始 </span>
</span><span class='line'><span class="nb">set</span> -g base-index 1
</span><span class='line'>
</span><span class='line'><span class="c"># key bindings for horizontal and vertical panes</span>
</span><span class='line'>unbind %
</span><span class='line'><span class="nb">bind</span> | split-window -h      <span class="c"># 使用|竖屏，方便分屏</span>
</span><span class='line'>unbind <span class="s1">&#39;&quot;&#39;</span>
</span><span class='line'><span class="nb">bind</span> - split-window -v      <span class="c"># 使用-横屏，方便分屏</span>
</span><span class='line'>
</span><span class='line'><span class="c"># window title string (uses statusbar variables)</span>
</span><span class='line'><span class="nb">set</span> -g <span class="nb">set</span>-titles-string <span class="s1">&#39;#T&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># status bar with load and time </span>
</span><span class='line'><span class="nb">set</span> -g status-bg blue
</span><span class='line'><span class="nb">set</span> -g status-fg <span class="s1">&#39;#bbbbbb&#39;</span>
</span><span class='line'><span class="nb">set</span> -g status-left-fg green
</span><span class='line'><span class="nb">set</span> -g status-left-bg blue
</span><span class='line'><span class="nb">set</span> -g status-right-fg green
</span><span class='line'><span class="nb">set</span> -g status-right-bg blue
</span><span class='line'><span class="nb">set</span> -g status-left-length 90
</span><span class='line'><span class="nb">set</span> -g status-right-length 90
</span><span class='line'><span class="nb">set</span> -g status-left <span class="s1">&#39;[#(whoami)]&#39;</span>
</span><span class='line'><span class="nb">set</span> -g status-right <span class="s1">&#39;[#(date +&quot; %m-%d %H:%M &quot;)]&#39;</span>
</span><span class='line'><span class="nb">set</span> -g status-justify <span class="s2">&quot;centre&quot;</span>
</span><span class='line'><span class="nb">set</span> -g window-status-format <span class="s1">&#39;#I #W&#39;</span>
</span><span class='line'><span class="nb">set</span> -g window-status-current-format <span class="s1">&#39; #I #W &#39;</span>
</span><span class='line'>setw -g window-status-current-bg blue
</span><span class='line'>setw -g window-status-current-fg green
</span><span class='line'>
</span><span class='line'><span class="c"># pane border colors</span>
</span><span class='line'><span class="nb">set</span> -g pane-active-border-fg <span class="s1">&#39;#55ff55&#39;</span>
</span><span class='line'><span class="nb">set</span> -g pane-border-fg <span class="s1">&#39;#555555&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>开启批量执行</h4>

<p>如果已经修改prefix键位<code>Ctrl+a</code>，则<code>Ctrl+a</code>[默认Ctrl+b]后输入<code>:set synchronize-panes</code> ，输入:set sync [TAB]键可自动补齐</p>

<p><img src="http://kumu-Linux.github.io/images/tmux.jpg"></p>

<p></p>


<p>取消批量执行模式重复之前操作即可</p>

<h4>脚本化启动</h4>

<p>把以下脚本内容加入到~/.bashrc，即可每次登录进入到tmux</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tmux_init<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    tmux new-session -s <span class="s2">&quot;kumu&quot;</span> -d -n <span class="s2">&quot;local&quot;</span>    <span class="c"># 开启一个会话</span>
</span><span class='line'>    tmux new-window -n <span class="s2">&quot;other&quot;</span>          <span class="c"># 开启一个窗口</span>
</span><span class='line'>    tmux split-window -h                <span class="c"># 开启一个竖屏</span>
</span><span class='line'>    tmux split-window -v <span class="s2">&quot;top&quot;</span>          <span class="c"># 开启一个横屏,并执行top命令</span>
</span><span class='line'>    tmux -2 attach-session -d           <span class="c"># tmux -2强制启用256color，连接已开启的tmux</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 判断是否已有开启的tmux会话，没有则开启</span>
</span><span class='line'><span class="k">if </span>which tmux 2&gt;&amp;1 &gt;/dev/null; <span class="k">then</span>
</span><span class='line'><span class="k">    </span><span class="nb">test</span> -z <span class="s2">&quot;$TMUX&quot;</span> <span class="o">&amp;&amp;</span> <span class="o">(</span>tmux attach <span class="o">||</span> tmux_init<span class="o">)</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果如下：</p>

<p><img src="http://kumu-Linux.github.io/images/tmux1.jpg"></p>

<p></p>


<p>&#8211;EOF&#8211;</p>

<h3>参考文档</h3>

<ul>
<li><a href="https://wiki.freebsdchina.org/software/t/tmux">使用tmux</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Tmux">archlinux tmux</a></li>
<li><a href="http://wiki.wutianqi.com/software/tmux.html">Tankywoo tmux wiki</a></li>
<li><a href="http://www.lovelin.info/blog/2012/10/25/tmuxshi-yong-xin-de-xiao-ji/">Tmux 使用心得小记 </a></li>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tmux&amp;sektion=1">Tmux Openbsd Manual Pages</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[旅途]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/08/02/journey/"/>
    <updated>2013-08-02T17:50:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/08/02/journey</id>
    <content type="html"><![CDATA[<center><img src="http://kumu-Linux.github.io/images/journey.png" alt="journey" title="journey" width="500" /></center>




<p></p>




<!--more-->


<p>2012年6月毕业，到现在也就差不多1年的时间吧。大三暑假的抉择让我彻底和自己的大学专业说再见了，年初的时候我又和生活4年多的城市说再见了，而现在来北京才半年多的时间我又要和北京说再见了。对于我们每个人来说，人生都是一场旅途，有太多的不确定。</p>

<p>大四上学期的时候就开始工作了，现在的自己也就工作了1年半。其实自己并不喜欢经常变动，在一个地方工作久了，也就对一个地方有点难舍，包括那个地方的人或物。可是，天下终究没有不散的宴席，现在还算年轻，跟着自己的感觉走，去拼搏。有些地方停留的久，有些地方停留的短暂，希望下一站能够好好安稳。</p>

<p>技术上来说，我刚开始接触的面比较广，其实这也是有好处的，先面后点，再做到精细 [<strong>所谓专家，就是在一个很小的领域里把所有错误都犯过的人</strong>]。该学的东西还有很多，需要不断的积累和蜕变。貌似最近也有点懒了，博客写的越来越少了，坚持是个很重要的事情，有时候还是要逼一下自己比较好。</p>

<p>生活上来说，我觉得每个人都应像个行者，多些随遇而安，少些浮躁，至少自己可以让自己静下来，保持清醒的头脑比什么都重要。找一点生活乐趣，虽然说技术是自己的一大爱好，但是也不能太拘泥于技术。我想新的开始，我需要好好把自己的字练好，虽然之前的字写的还算凑合，但是已经许久不提笔写字了，这是个不好的信号。可以利用业余的时间去徒步呼吸呼吸新鲜空气，来北京半年的时间也没怎么出去过，印象中一个人就出去过一次，绕着故宫的城墙走了一圈，在景山顶部看了看京城的美景，这座古城已经不再古老。也考虑买辆入门级的山地自行车，找些车友，骑行旅途应该也是件很美妙的事情。</p>

<p>理想很丰满，现实很骨感。力所能及的事情自己就要好好把握，每一次的抉择都是新的开始，努力！</p>

<pre><code>许巍-旅行

阵阵晚风吹动着松涛
吹响这风铃声如天籁
站在这城市的寂静处
让一切喧嚣走远

只有青山藏在白云间
蝴蝶自由穿行在清涧
看那晚霞盛开在天边
有一群向西归鸟

谁画出这天地又画下我和你
让我们的世界绚丽多彩
谁让我们哭泣又给我们惊喜
让我们就这样相爱相遇
总是要说再见相聚又分离
总是走在漫长的路上

只有青山藏在白云间
蝴蝶自由穿行在清涧
看那晚霞盛开在天边
有一群向西归鸟

谁画出这天地又画下我和你
让我们的世界绚丽多彩
谁让我们哭泣又给我们惊喜
让我们就这样相爱相遇
总是要说再见相聚又分离
总是走在漫长的路上
</code></pre>

<center><img src="http://kumu-Linux.github.io/images/beijing.jpg" alt="北京中轴线" title="北京中轴线" width="500" /></center>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[也谈伸手党]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/07/16/ssd/"/>
    <updated>2013-07-16T12:43:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/07/16/ssd</id>
    <content type="html"><![CDATA[<blockquote><p>所谓伸手，中国人俗称盗窃者（小偷，梁上君子）为三只手，手上功夫出神入化，而伸手党，则代表了无偿索要/剽窃别人劳动力或成果的人群。  &#8211;> 摘自百度百科 &lt;&#8211;</p></blockquote>

<!--more-->


<h3>什么是伸手党</h3>

<p>今天我也学学基友 <a href="http://www.wutianqi.com/">Tankywoo</a> 来说说伸手党的事情，<a href="http://www.wutianqi.com/">Tankywoo</a> 的文章标题大意是伸手党是大学教育的产物。这里我不想扯上大学教育，中国的大学教育已经被人诟病很久了，一旦扯上中国教育就有点没完没了的调侃了，我觉得这是不公平的。毕竟，伸手党不仅仅局限于受过大学教育的，社会的每个角落都有他们的身影，这很明显是一个社会的普遍现象。何谓伸手党，我觉得这里有必要给伸手党讨个说法分个类。个人认为伸手党可以分为下几类：</p>

<ul>
<li>1、第一种伸手党我称为<code>“爷”级伸手党</code>，好比收保护费的。这种伸手党比较横，问你个问题他把自己当爷了，孙子给爷解决问题理所当然。这类人一般自认为很拽，直接抛个问题，口气还很横，并且从来不说谢谢。当然这种牛逼型伸手党，一般直接负分，滚粗！</li>
<li>2、第二种伸手党是那种新手类，这里称之为<code>“小白型”伸手党</code>。这种人每次问问题，先把自己身份降低，一般开头是“菜鸟问个小白问题&#8230; &#8230;”。这类人比较多，不过这类伸手党还是情有可原的，可以读读<a href="http://www.wapm.cn/smart-questions/smart-questions-zh.html">《提问的智慧》</a>， 改善改善提问的方法。</li>
<li>3、第三种伸手党就是那种<code>“资料型”伸手党</code>。每当要做某个东西的时候，就会问你，有这个的资料吗，有那个的文档吗，这种人是常年要资料的，很大一部分要了也未必看[看了也就罢了]。这种人从来不写文档，一味的向别人索取文档。尤其是笔者遇到过1年前问你要某个资料，当时给他了，然后隔了一年后还问你要那个资料，真想吐槽说这尼玛这里不是图书馆啊。</li>
<li>4、第四种是<code>完全不动脑型伸手党</code>，对于这种人只能无语，遇到一个问题就问，给文档也不要，就是张嘴就问，巴不得手把手帮他把事给做了，这类人真的是无药可救了，无力吐槽。</li>
</ul>


<h3>关于杜绝伸手党</h3>

<p>其实关于杜绝伸手党，还是要从提问开始。提问是一门很深的学问，之前也提到了 <a href="http://www.wapm.cn/smart-questions/smart-questions-zh.html">《提问的智慧》</a> ，这篇文章介绍了提问的一些技巧，非常值得一读。至少让别人乐意帮助你，而不会让别人觉得你就是一味地索取。曾经在北京西单那边看到一个行乞的老大爷，写得一手的好粉笔字，身旁摆着个大碗，自己头也不抬，自顾自的在地上写字，而行人路过纷纷给钱。相反，那些在地铁背个音响放噪音的，挨个挨个要钱却鲜有人给钱的。两个鲜明的对比，这就是行乞的艺术，我们提问也要有提问的艺术。</p>

<p>有些伸手党是尝到甜头之后，就一直想不劳而获，这是行不通的，古人已经告诉我们了，这叫守株待兔。所以对于一味伸手的那种，你得适时的给点打击给他们。如果他们态度恶劣的，那只能让他们滚粗了。对于第四类直接无视就行了，时间一久估计他们自己也感到无趣了。遇到问题，首先想到的不应该是别人，而应该是自己，个人觉得解决问题可以3步走：</p>

<ul>
<li>1、<code>遇到问题不要怕</code>，自己先尝试解决，对于技术类的，如果程序运行错误，记得一定要看日志和错误提示，认真仔细了看，可能解决方法就在错误提示中，如果无果，那么走第二条</li>
<li>2、<code>善用搜索引擎</code>，当然对于技术类的搜索，百度可以直接无视了。套用一句话，不用Google的技术人不是好技术人，所以这里推荐使用Google来搜索问题，把一些关键性的错误信息输入到Google中搜索，保准能看到别人和你犯的类似的错误，找一些解决方案测试。另外，推荐下<a href="http://www.google.com.hk/advanced_search">Google的高级搜索</a> ，方便过滤一些不需要的信息，找文档也非常有效，还有一篇文章<a href="http://jaychang.iteye.com/blog/1860361">善用GOOGLE &#8211; 从入门到精通</a> 。</li>
<li>3、<code>懂得提问</code>，如果搜索引擎也解决不了，那么就考虑问同事，或去论坛和好一点的QQ群去咨询了。千万要描述清自己的问题，最好分点说明，这样调理清晰一点。而不是直接贴上大片的代码或者大片的Error，条理清楚很重要，你要明白问问题不是贴贴大字报就可以搞定的。</li>
</ul>


<p>这里推荐几个比较好的社区，国外的<a href="http://stackoverflow.com/">stackoverflow</a> 和<a href="http://serverfault.com/">serverfault</a> ，一个偏向编程一个偏向系统，可以说是全球最好的QA社区了。国内这类社区的技术氛围一直很一般，这里推荐<a href="http://www.zhihu.com">知乎</a> 和 <a href="http://www.v2ex.com/">v2ex</a> 。</p>

<p>基本上是这样了，其实扯了那么多，无非就是希望每个技术人都能独立思考。当然独立思考并不是不交流，这是两码事，伸手党不是交流而是一味利己的索取，交流应该是共赢的，很遗憾目前国内还是很缺这种气氛的。当然你可以认为这篇文章完全是我的无病呻吟，看客若觉得不爽，可完全无视。最后，对广大伸手党同志说一句，回头吧！</p>

<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2013-06-29 两本书]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/06/29/life-06-29/"/>
    <updated>2013-06-29T19:16:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/06/29/life-06-29</id>
    <content type="html"><![CDATA[<p>最近一段时间看完了<code>《平凡的世界》</code>和<code>《艾伦·图灵传--如迷的解谜者》</code>，自从买<code>kindle paper white</code>以来，看书的效率比以前要高很多了。虽然自己还是更倾向纸质书的感觉，但是试想每天带着本书挤地铁那是相当的不便，而且纸质书搬家也是个大问题。而kindle让你随时随地都能享受阅读的乐趣，至少让笔者每天挤地铁不会感到很无趣。</p>

<!--more-->


<p>《平凡的世界》这本书其实很早之前就知道这本书了，直到现在才想起看这本书。看完这本书让我想起<code>《山楂树之恋》</code>中老三和静秋的故事，我觉得《平凡的世界》阐述的东西要比《山楂树之恋》要沉重的多。前者的阐述映射了当时的整个社会种种，包括对那个时代的控诉，人性的美与丑，生活的无奈，不安于现实的挣扎，以及那凄美的爱恋了。看这本书我觉得需要一种勇气，太多让人感触的地方，很多地方笔者都感到一阵心酸，特别是田晓霞死后，我已经不想再看之后的章节了，太让人心痛。本为少安和润叶的错过感到可惜，当看到小霞和少平的顽强和坚定，开始感觉有点希望，可是路遥却让这种希望再次幻灭，或许他们本就不能走到一起。唯一庆幸的是，后来总算在兰香身上看到了希望。</p>

<pre><code>不惋惜，不呼唤，我也不啼哭，
一切将逝去……如苹果花丛的薄雾
金黄的落叶堆满我心间——
我已经再不是青春少年。 
</code></pre>

<p>《艾伦·图灵传》让我对图灵有了一个更直观的认识，一个时代不应忘却的人物。孤僻、低调，一个显得和这个世界格格不入，一个为社会做出重大贡献，却又被社会置于死地的巨人。对于Turing的死现在仍然是个谜，我想也许死对于当时的他才是解脱，他杀、自杀也好，我只想说他在自己的世界真的很潇洒。对于图灵，如本书的副标题一样，如谜一样解迷者，有太多难解，推荐这本书，体会书中图灵的喜怒哀乐。现在，计算机的发展迅速，社会也变得越来越人性化。很多年前他播下了一颗种子，此时这颗种子正茁壮成长。</p>

<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nslookup、host和dig]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/06/19/nslookup-dig-host/"/>
    <updated>2013-06-19T16:55:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/06/19/nslookup-dig-host</id>
    <content type="html"><![CDATA[<p><code>nslookup</code>、<code>host</code>和<code>dig</code>是三个DNS查询工具，以下会分别介绍它们的使用方法。</p>

<!--more-->


<h2>nslookup</h2>

<blockquote><p>nslookup is a tried and true program that has weathered the ages. nslookup has been deprecated and may be removed from future releases. There is not even a man page for this program.</p></blockquote>

<p>因此，这里不过多介绍这个古老的工具了</p>

<h2>host</h2>

<p><code>host</code>命令和<code>dig</code>命令很相像，但是<code>host</code>命令的输出要更简洁，如下示例</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  <span class="c"># host www.google.com</span>
</span><span class='line'>  www.google.com has address 74.125.135.106
</span></code></pre></td></tr></table></div></figure>


<p><code>host</code>命令只输出给我们<code>dig</code>命令的ANSWER section，相对<code>dig</code>提供的一些不必要的信息来说更简洁快速。也可指定DNS Server来查询，例如我想使用Google DNS<code>8.8.8.8</code>,named可以如下指定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># host www.google.com 8.8.8.8</span>
</span><span class='line'>Using domain server:
</span><span class='line'>Name: 8.8.8.8
</span><span class='line'>Address: 8.8.8.8#53
</span><span class='line'>Aliases:
</span><span class='line'>
</span><span class='line'>www.google.com has address 173.194.72.147
</span></code></pre></td></tr></table></div></figure>


<p><code>host</code>当然也支持反解析</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># host 173.194.72.147</span>
</span><span class='line'>147.72.194.173.in-addr.arpa domain name pointer tf-in-f147.1e100.net.
</span></code></pre></td></tr></table></div></figure>


<p>指定查询类型可以使用<code>-t</code>选项</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># host -t SOA google.com  #查询SOA记录信息</span>
</span><span class='line'>google.com has SOA record ns1.google.com. dns-admin.google.com. 2013061100 7200 1800 1209600 300
</span></code></pre></td></tr></table></div></figure>


<p>查询<code>MX</code>记录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>host -t MX google.com
</span><span class='line'>google.com mail is handled by 10 aspmx.l.google.com.
</span><span class='line'>google.com mail is handled by 40 alt3.aspmx.l.google.com.
</span><span class='line'>google.com mail is handled by 20 alt1.aspmx.l.google.com.
</span><span class='line'>google.com mail is handled by 50 alt4.aspmx.l.google.com.
</span><span class='line'>google.com mail is handled by 30 alt2.aspmx.l.google.com.
</span></code></pre></td></tr></table></div></figure>


<p><code>-C</code>对比认证DNS SOA信息</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># host -C google.com</span>
</span><span class='line'>Nameserver 216.239.34.10:
</span><span class='line'>        google.com has SOA record ns1.google.com. dns-admin.google.com. 2013061100 7200 1800 1209600 300
</span><span class='line'>Nameserver 216.239.36.10:
</span><span class='line'>        google.com has SOA record ns1.google.com. dns-admin.google.com. 2013061100 7200 1800 1209600 300
</span><span class='line'>Nameserver 216.239.32.10:
</span><span class='line'>... ...
</span></code></pre></td></tr></table></div></figure>


<p>查询DNS Server软件版本信息,10.10.10.2为DNS Server</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># host -c CH -t txt version.bind 10.10.10.2  </span>
</span><span class='line'>Using domain server:
</span><span class='line'>Name: 10.10.10.2
</span><span class='line'>Address: 10.10.10.2#53
</span><span class='line'>Aliases:
</span><span class='line'>
</span><span class='line'>version.bind descriptive text <span class="s2">&quot;9.8.1-P2&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>host帮助</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># host</span>
</span><span class='line'>Usage: host <span class="o">[</span>-aCdlriTwv<span class="o">]</span> <span class="o">[</span>-c class<span class="o">]</span> <span class="o">[</span>-N ndots<span class="o">]</span> <span class="o">[</span>-t <span class="nb">type</span><span class="o">]</span> <span class="o">[</span>-W <span class="nb">time</span><span class="o">]</span>
</span><span class='line'>            <span class="o">[</span>-R number<span class="o">]</span> <span class="o">[</span>-m flag<span class="o">]</span> hostname <span class="o">[</span>server<span class="o">]</span>
</span><span class='line'>       -a is equivalent to -v -t ANY
</span><span class='line'>       -c specifies query class <span class="k">for </span>non-IN data  搜索非网络数据时要指定要查找的类
</span><span class='line'>       -C compares SOA records on authoritative nameservers
</span><span class='line'>       -d is equivalent to -v
</span><span class='line'>       -l lists all hosts in a domain, using AXFR
</span><span class='line'>       -i IP6.INT reverse lookups
</span><span class='line'>       -N changes the number of dots allowed before root lookup is <span class="k">done</span>
</span><span class='line'>       -r disables recursive processing
</span><span class='line'>       -R specifies number of retries <span class="k">for </span>UDP packets
</span><span class='line'>       -s a SERVFAIL response should stop query
</span><span class='line'>       -t specifies the query <span class="nb">type</span> 指定要查询的记录类型
</span><span class='line'>       -T enables TCP/IP mode
</span><span class='line'>       -v enables verbose output  输出更详细的信息
</span><span class='line'>       -w specifies to <span class="nb">wait </span>forever <span class="k">for </span>a reply
</span><span class='line'>       -W specifies how long to <span class="nb">wait </span><span class="k">for </span>a reply
</span><span class='line'>       -4 use IPv4 query transport only
</span><span class='line'>       -6 use IPv6 query transport only
</span><span class='line'>       -m <span class="nb">set </span>memory debugging flag <span class="o">(</span>trace|record|usage<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>dig</h2>

<p>dig也是一个很强大的命令，相对host来说输出较为繁杂，如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>dig www.google.com
</span><span class='line'>... ...
</span><span class='line'>
</span><span class='line'>;; ANSWER SECTION:
</span><span class='line'>www.google.com.         297     IN      A       74.125.135.106
</span><span class='line'>www.google.com.         297     IN      A       74.125.135.104
</span><span class='line'>... ...
</span><span class='line'>
</span><span class='line'>;; AUTHORITY SECTION:
</span><span class='line'>google.com.             172796  IN      NS      ns3.google.com.
</span><span class='line'>google.com.             172796  IN      NS      ns1.google.com.
</span><span class='line'>google.com.             172796  IN      NS      ns4.google.com.
</span><span class='line'>google.com.             172796  IN      NS      ns2.google.com.
</span><span class='line'>
</span><span class='line'>... ...
</span></code></pre></td></tr></table></div></figure>


<p>查询<code>MX</code>记录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>dig google.com MX | grep <span class="s1">&#39;^;; ANSWER SECTION:&#39;</span> -A 5
</span><span class='line'>;; ANSWER SECTION:
</span><span class='line'>google.com.             368     IN      MX      50 alt4.aspmx.l.google.com.
</span><span class='line'>google.com.             368     IN      MX      40 alt3.aspmx.l.google.com.
</span><span class='line'>google.com.             368     IN      MX      10 aspmx.l.google.com.
</span><span class='line'>google.com.             368     IN      MX      30 alt2.aspmx.l.google.com.
</span><span class='line'>google.com.             368     IN      MX      20 alt1.aspmx.l.google.com.
</span></code></pre></td></tr></table></div></figure>


<p>查询<code>SOA</code>记录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>dig google.com SOA | grep <span class="s1">&#39;^;; ANSWER SECTION:&#39;</span> -A 1
</span><span class='line'>;; ANSWER SECTION:
</span><span class='line'>google.com.             85539   IN      SOA     ns1.google.com. dns-admin.google.com. 2013061100 7200 1800 1209600 300
</span></code></pre></td></tr></table></div></figure>


<p>指定DNS Server查询</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>dig www.baidu.com @8.8.8.8
</span><span class='line'>... ...
</span><span class='line'>;; ANSWER SECTION:
</span><span class='line'>www.baidu.com.          1024    IN      CNAME   www.a.shifen.com.
</span><span class='line'>www.a.shifen.com.       166     IN      A       119.75.217.56
</span><span class='line'>www.a.shifen.com.       166     IN      A       119.75.218.77
</span><span class='line'>... ...
</span></code></pre></td></tr></table></div></figure>


<p><code>dig</code>查询版本号</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>dig chaos txt version.bind  10.10.10.2 | grep <span class="s1">&#39;^;; ANSWER SECTION:&#39;</span> -A 1
</span><span class='line'>;; ANSWER SECTION:
</span><span class='line'>version.bind.           0       CH      TXT     <span class="s2">&quot;9.8.1-P2&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>dig</code>反解析<code>-x</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>dig -x 74.125.135.105
</span><span class='line'>;; QUESTION SECTION:
</span><span class='line'>;105.135.125.74.in-addr.arpa.   IN      PTR
</span><span class='line'>
</span><span class='line'>;; ANSWER SECTION:
</span><span class='line'>105.135.125.74.in-addr.arpa. 83205 IN   PTR     ni-in-f105.1e100.net.
</span></code></pre></td></tr></table></div></figure>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pdsh使用方法]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/06/19/pdsh/"/>
    <updated>2013-06-19T15:26:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/06/19/pdsh</id>
    <content type="html"><![CDATA[<p>PDSH(Parallel Distributed SHell)可并行的执行对目标主机的操作，对于批量执行命令和分发任务有很大的帮助，在使用前需要配置ssh无密码登录，<a href="http://sourceforge.net/projects/pdsh/">点击下载</a></p>

<!--more-->


<h2>pdsh基本用法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> pdsh -h
</span><span class='line'>Usage: pdsh <span class="o">[</span>-options<span class="o">]</span> <span class="nb">command</span> ...
</span><span class='line'>-S                <span class="k">return </span>largest of remote <span class="nb">command </span><span class="k">return </span>values
</span><span class='line'>-h                output usage menu and quit                获取帮助
</span><span class='line'>-V                output version information and quit       查看版本
</span><span class='line'>-q                list the option settings and quit         列出pdsh执行的一些信息
</span><span class='line'>-b                disable ^C status feature <span class="o">(</span>batch mode<span class="o">)</span>
</span><span class='line'>-d                <span class="nb">enable </span>extra debug information from ^C status
</span><span class='line'>-l user           execute remote commands as user           指定远程使用的用户
</span><span class='line'>-t seconds        <span class="nb">set </span>connect timeout <span class="o">(</span>default is 10 sec<span class="o">)</span>   指定超时时间
</span><span class='line'>-u seconds        <span class="nb">set command </span>timeout <span class="o">(</span>no default<span class="o">)</span>          类似-t
</span><span class='line'>-f n              use fanout of n nodes                     设置同时连接的目标主机的个数
</span><span class='line'>-w host,host,...  <span class="nb">set </span>target node list on <span class="nb">command </span>line      指定主机，host可以是主机名也可以是ip
</span><span class='line'>-x host,host,...  <span class="nb">set </span>node exclusion list on <span class="nb">command </span>line   排除某些或者某个主机
</span><span class='line'>-R name           <span class="nb">set </span>rcmd module to name                   指定rcmd的模块名，默认使用ssh
</span><span class='line'>-N                disable hostname: labels on output lines  输出不显示主机名或者ip
</span><span class='line'>-L                list info on all loaded modules and <span class="nb">exit</span>  列出pdsh加载的模块信息
</span><span class='line'>-a                target all nodes                          指定所有的节点
</span><span class='line'>-g groupname      target hosts in dsh group <span class="s2">&quot;groupname&quot;</span>     指定dsh组名
</span><span class='line'>-X groupname      exclude hosts in dsh group <span class="s2">&quot;groupname&quot;</span>    排除组，一般和-a连用
</span><span class='line'>available rcmd modules: <span class="nb">exec</span>,xcpu,ssh <span class="o">(</span>default: ssh<span class="o">)</span>        可用的执行命令模块，默认为ssh
</span></code></pre></td></tr></table></div></figure>


<h2>使用实例</h2>

<p><strong>单个主机测试</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pdsh -w 192.168.0.231 -l root uptime
</span><span class='line'>192.168.0.231:  16:16:11 up 32 days, 22:14, ? users,  load average: 0.10, 0.14, 0.16
</span></code></pre></td></tr></table></div></figure>


<p><strong>多个主机测试</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pdsh -w 192.168.0.<span class="o">[</span>231-233<span class="o">]</span> -l root uptime
</span><span class='line'>192.168.0.233:  16:17:05 up 32 days, 22:17, ? users,  load average: 0.13, 0.12, 0.10
</span><span class='line'>192.168.0.232:  16:17:05 up 32 days, 22:17, ? users,  load average: 0.45, 0.34, 0.27
</span><span class='line'>192.168.0.231:  16:17:06 up 32 days, 22:15, ? users,  load average: 0.09, 0.13, 0.15
</span></code></pre></td></tr></table></div></figure>


<p><strong>逗号分隔主机</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pdsh -w 192.168.0.231,192.168.0.234 -l root uptime
</span><span class='line'>192.168.0.234:  16:19:44 up 32 days, 22:19, ? users,  load average: 0.17, 0.21, 0.20
</span><span class='line'>192.168.0.231:  16:19:44 up 32 days, 22:17, ? users,  load average: 0.29, 0.18, 0.16
</span></code></pre></td></tr></table></div></figure>


<p><strong>-x排除某个主机</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pdsh -w 192.168.0.<span class="o">[</span>231-233<span class="o">]</span> -x 192.168.0.232 -l root uptime
</span><span class='line'>192.168.0.233:  16:18:24 up 32 days, 22:19, ? users,  load average: 0.11, 0.12, 0.09
</span><span class='line'>192.168.0.231:  16:18:25 up 32 days, 22:16, ? users,  load average: 0.11, 0.13, 0.15
</span></code></pre></td></tr></table></div></figure>


<p><strong>主机组</strong><br/>
对于-g组，把对应的主机写入到<code>/etc/dsh/group/</code>或<code>~/.dsh/group/</code>目录下的文件中即可，文件名就是对应组名</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat ~/.dsh/group/dsh-test
</span><span class='line'>192.168.0.231
</span><span class='line'>192.168.0.232
</span><span class='line'>192.168.0.233
</span><span class='line'>192.168.0.234
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pdsh -g dsh-test -l root uptime
</span><span class='line'>192.168.0.232:  16:21:38 up 32 days, 22:22, ? users,  load average: 0.01, 0.15, 0.21
</span><span class='line'>192.168.0.231:  16:21:38 up 32 days, 22:19, ? users,  load average: 0.17, 0.16, 0.16
</span><span class='line'>192.168.0.234:  16:21:39 up 32 days, 22:21, ? users,  load average: 0.15, 0.19, 0.19
</span><span class='line'>192.168.0.233:  16:21:40 up 32 days, 22:22, ? users,  load average: 0.15, 0.15, 0.10
</span></code></pre></td></tr></table></div></figure>


<p><strong>dshbak格式化输出</strong><br/>
pdsh的缺省输出格式为主机名加该主机的输出，在主机或输出多时会比较混乱，可以采用<code>dshbak</code>做一些格式化，让输出更清晰。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pdsh -g dsh-test -l root <span class="s1">&#39;date&#39;</span>       <span class="c">#查看哪些主机时间不一样，主机一多，可读性不强</span>
</span><span class='line'>192.168.0.232: Wed Jun 19 16:24:40 CST 2013
</span><span class='line'>192.168.0.231: Wed Jun 19 16:24:40 CST 2013
</span><span class='line'>192.168.0.234: Wed Jun 19 16:24:40 CST 2013
</span><span class='line'>192.168.0.233: Wed Jun 19 16:24:40 CST 2013
</span></code></pre></td></tr></table></div></figure>


<p>使用dshbak之后可读性变得好了很多</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pdsh -g dsh-test -l root <span class="s1">&#39;date&#39;</span> | dshbak -c
</span><span class='line'>----------------
</span><span class='line'>192.168.0.<span class="o">[</span>231-232,234<span class="o">]</span>
</span><span class='line'>----------------
</span><span class='line'>Wed Jun 19 16:24:18 CST 2013
</span><span class='line'>----------------
</span><span class='line'>192.168.0.233
</span><span class='line'>----------------
</span><span class='line'>Wed Jun 19 16:24:19 CST 2013
</span></code></pre></td></tr></table></div></figure>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[top实践小技巧]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/06/07/top-hacks/"/>
    <updated>2013-06-07T17:32:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/06/07/top-hacks</id>
    <content type="html"><![CDATA[<p>之前介绍了<a href="http://kumu-linux.github.io/blog/2013/06/02/top/">top基本介绍</a>,本章主要介绍一些top的实用技巧。</p>

<!--more-->


<p>终端执行top命令之后【也可后接一些选项，比如<code>top -p 1</code>只监控init进程，<code>top -u root</code>只显示root运行进程等等】，可以敲击如下按键，实现不同功能：</p>

<ul>
<li><code>1</code>(数字1)：列出所有的单个CPU负载情况</li>
<li><code>z</code>:top显示颜色</li>
<li><code>P</code>[大写]:按CPU占用高低顺序列出程序</li>
<li><code>M</code>[大写]:按内存占用高低顺序列出程序</li>
<li><code>x</code>:类似高亮显示，在z显示模式下效果才会更明显</li>
</ul>


<p>如下效果图:</p>

<center><img src="http://kumu-Linux.github.io/images/top1.png" alt="geek" title="geek" width="600" /></center>


<ul>
<li>top显示Swap利用率，使用top命令后按f键，然后按p键，回车之后即可看到Swap状态</li>
</ul>


<center><img src="http://kumu-Linux.github.io/images/top2.png" alt="geek" title="geek" width="600" /></center>


<ul>
<li><code>d</code>:top默认的刷新时间是3s，使用d键可以自定义刷新时间</li>
</ul>


<center><img src="http://kumu-Linux.github.io/images/top3.png" alt="geek" title="geek" width="600" /></center>




<p></p>


<p><strong>top类似上下翻页的方法：</strong></p>

<ul>
<li>shift &lt;  下翻页</li>
<li>shift >   上翻页</li>
</ul>


<p>top默认按cpu占用排序，这也是可以修改的，按F(大写)即可选择相应排序，之后任意键退出即可</p>

<center><img src="http://kumu-Linux.github.io/images/top4.png" alt="geek" title="geek" width="600" /></center>


<ul>
<li><code>c</code>:显示进程命令的全路径与参数</li>
<li><code>f</code>:可以指定top显示的内容，如ppid、swap等都可以选择显示</li>
<li><code>k</code>:输入k之后可以kill掉指定的进程</li>
<li><code>A</code>:分类显示各种系统资源高的进程。可用于快速识别系统上的性能要求极高的任务，<strong>推荐使用</strong></li>
<li><code>h</code>:获取top的命令帮助</li>
<li><code>H</code>:显示线程，默认只显示进程</li>
<li><code>W</code>[大写]:将当前设置写入~/.toprc文件中。这是写top配置文件的推荐方法</li>
</ul>


<p>参考: <a href="http://linux.vbird.org/">鸟哥Linux私房菜</a>  <a href="http://www.cyberciti.biz/tips/top-linux-monitoring-tools.html">top - Process Activity Command</a>  <a href="http://how-to.linuxcareer.com/learning-linux-commands-top">Learning Linux Commands: top</a></p>

<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iproute]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/06/04/iproute/"/>
    <updated>2013-06-04T11:16:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/06/04/iproute</id>
    <content type="html"><![CDATA[<h3>iproute基本介绍</h3>

<p>iproute是用于linux下网络配置工具，该工具包包含以下组件</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># rpm -ql  iproute | grep bin</span>
</span><span class='line'>/sbin/cbq         <span class="c">#流量控制</span>
</span><span class='line'>/sbin/ifcfg           <span class="c">#网络地址配置管理</span>
</span><span class='line'>/sbin/ip          <span class="c">#网络配置命令</span>
</span><span class='line'>/sbin/rtmon           <span class="c">#rtmon listens on netlink socket and monitors routing table changes.</span>
</span><span class='line'>/sbin/tc          <span class="c">#进行流量控制的命令</span>
</span><span class='line'>/usr/sbin/arpd        <span class="c">#收集arp信息保存到本地cache daemon</span>
</span><span class='line'>/usr/sbin/lnstat  <span class="c">#网络统计信息</span>
</span><span class='line'>/usr/sbin/nstat       <span class="c">#显示网络统计信息</span>
</span><span class='line'>/usr/sbin/rtacct  <span class="c">#查看数据包流量状态</span>
</span><span class='line'>【nstat and rtacct are simple tools to monitor kernel snmp counters and network interface statistics.】
</span><span class='line'>/usr/sbin/ss      <span class="c">#类似netstat命令，显示活动连接</span>
</span></code></pre></td></tr></table></div></figure>


<p>iproute的中心是<code>ip</code>这个命令，类似<code>arp</code>、<code>ifconfig</code>、<code>route</code>命令虽然这些工具能够工作，但是在Linux2.2和更高版本的内核上就有点out了。</p>

<h3>ip基本使用方法</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ip --help</span>
</span><span class='line'>Usage: ip <span class="o">[</span> OPTIONS <span class="o">]</span> OBJECT <span class="o">{</span> COMMAND | <span class="nb">help</span> <span class="o">}</span>
</span><span class='line'>       ip <span class="o">[</span> -force <span class="o">]</span> -batch filename
</span><span class='line'>where  OBJECT :<span class="o">=</span> <span class="o">{</span> link | addr | addrlabel | route | rule | neigh | ntable |
</span><span class='line'>                   tunnel | maddr | mroute | mrule | monitor | xfrm <span class="o">}</span>
</span><span class='line'>       OPTIONS :<span class="o">=</span> <span class="o">{</span> -V<span class="o">[</span>ersion<span class="o">]</span> | -s<span class="o">[</span>tatistics<span class="o">]</span> | -d<span class="o">[</span>etails<span class="o">]</span> | -r<span class="o">[</span>esolve<span class="o">]</span> |
</span><span class='line'>                    -f<span class="o">[</span>amily<span class="o">]</span> <span class="o">{</span> inet | inet6 | ipx | dnet | link <span class="o">}</span> |
</span><span class='line'>                    -o<span class="o">[</span>neline<span class="o">]</span> | -t<span class="o">[</span>imestamp<span class="o">]</span> | -b<span class="o">[</span>atch<span class="o">]</span> <span class="o">[</span>filename<span class="o">]</span> |
</span><span class='line'>                    -rc<span class="o">[</span>vbuf<span class="o">]</span> <span class="o">[</span>size<span class="o">]}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>OBJECT</strong></p>

<ul>
<li>link          指网络设备，通过此对象命令，我们可以查看及更改网络设备的属性。</li>
<li>addr          地址管理</li>
<li>neigh         arp表管理</li>
<li>route         路由管理</li>
<li>rule          路由策略</li>
<li>maddr         多址广播地址</li>
<li>mroute        多播路由缓存管理</li>
<li>tunnel        通道管理</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ip -V      #打印iproute信息</span>
</span><span class='line'>ip utility, iproute2-ss091226
</span></code></pre></td></tr></table></div></figure>


<p><strong>显示链路信息</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ip link</span>
</span><span class='line'>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue state UNKNOWN
</span><span class='line'>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
</span><span class='line'>2: eth0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast state DOWN qlen 1000
</span><span class='line'>    link/ether 00:0c:29:3b:9c:6f brd ff:ff:ff:ff:ff:ff
</span><span class='line'><span class="c"># ip link show dev eth0</span>
</span><span class='line'>2: eth0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast state DOWN qlen 1000
</span><span class='line'>    link/ether 00:0c:29:3b:9c:6f brd ff:ff:ff:ff:ff:ff
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><strong>显示IP地址</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ip addr</span>
</span><span class='line'>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue state UNKNOWN
</span><span class='line'>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
</span><span class='line'>    inet 127.0.0.1/8 scope host lo
</span><span class='line'>    inet6 ::1/128 scope host
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>2: eth0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast state DOWN qlen 1000
</span><span class='line'>    link/ether 00:0c:29:3b:9c:6f brd ff:ff:ff:ff:ff:ff
</span><span class='line'>    inet 192.168.0.10/24 brd 192.168.0.255 scope global eth0
</span></code></pre></td></tr></table></div></figure>


<p>显示路由<code>ip route</code> [类似<code>route -n</code>]</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ip route | column -t</span>
</span><span class='line'>192.168.0.0/24  dev  eth1          scope  link
</span><span class='line'>10.2.0.0/16     dev  eth2          proto  kernel  scope  link  src  10.2.0.111
</span><span class='line'>default         via  10.2.255.254  dev    eth2
</span><span class='line'><span class="c"># ip route del 192.168.0.0/24 dev eth1</span>
</span><span class='line'><span class="c"># ip route add 192.168.0.0/24 dev eth1</span>
</span><span class='line'><span class="c"># ip route del via 10.2.255.254  //删除默认路由</span>
</span><span class='line'><span class="c"># ip route add via 10.2.255.254  //增加默认路由</span>
</span><span class='line'><span class="c"># ip route add 192.168.1.0/24 via 192.168.0.1  //增加静态路由，192.168.0.1为下一跳地址</span>
</span><span class='line'><span class="c"># ip route del 192.168.1.0/24 via 192.168.0.1  //删除静态路由</span>
</span></code></pre></td></tr></table></div></figure>


<p>显示arp信息<code>ip neigh</code> [可以取代<code>arp -n</code>],删除则是<code>ip neigh del IP地址 dev 设备名</code></p>

<h3>路由策略数据库</h3>

<p>如果你有一个大规模的路由器，需要同时满足不同用户对于路由的不通需求，路由策略数据库可以帮你通过多路由表技术来实现。当内核需要做出路由选择时，它会找出应该参考哪一张路由表。除了<code>ip</code>外,<code>route</code>也可以修改main和local表。</p>

<p><strong>默认规则</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ip rule</span>
</span><span class='line'>0:    from all lookup <span class="nb">local </span>
</span><span class='line'>32766:    from all lookup main
</span><span class='line'>32767:    from all lookup default
</span></code></pre></td></tr></table></div></figure>


<p>上面列出了规则的优先顺序。<code>ip route</code>命令默认显示的就是main表。<code>ip route show table all</code>显示所有规则中的表</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ip route list table local</span>
</span><span class='line'>broadcast 192.168.0.255 dev eth0  proto kernel  scope link  src 192.168.0.10
</span><span class='line'>broadcast 10.2.0.0 dev eth1  proto kernel  scope link  src 10.2.0.217
</span><span class='line'>broadcast 127.255.255.255 dev lo  proto kernel  scope link  src 127.0.0.1
</span><span class='line'>... ...
</span></code></pre></td></tr></table></div></figure>


<p>default表为空</p>

<h3>例 简单策略路由添加 [引用自<a href="https://www.google.com.hk/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=2&amp;cad=rja&amp;ved=0CDkQFjAB&amp;url=%68%74%74%70%3a%2f%2f%77%77%77%2e%6c%61%72%74%63%2e%6f%72%67%2f%4c%41%52%54%43%2d%7a%68%5f%43%4e%2e%47%42%32%33%31%32%2e%70%64%66&amp;ei=4XeuUc3RPIG1lQW1voGwAg&amp;usg=AFQjCNEI4pFvc81u0hYutCtbC4mEoh44qA&amp;sig2=Txgnxnm1LMqWL87RKUsWDQ">Linux高级路由中文HOWTO</a>]</h3>

<p>让我们再来一个真实的例子。我有两个Cable Modem，连接到了一个 Linux的NAT (“伪装”) 路由器上。这里的室友们向我付费使用Internet。假如我其中的一个室友因为只想访问 hotmail 而希望少付一些钱。对我来说这没有问题,他们肯定只能使用那个比较次的Cable Modem。</p>

<p>那个比较快的cable modem 的IP地址是 212.64.94.251，PPP 链路，对端IP是212.64.94.1。而那个比较慢的cable modem的IP地址是212.64.78.148，对端是195.96.98.253。</p>

<p>local 表：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ahu@home ahu<span class="o">]</span><span class="nv">$ </span>ip route list table <span class="nb">local</span>
</span><span class='line'>broadcast 127.255.255.255 dev lo proto kernel scope link src 127.0.0.1
</span><span class='line'><span class="nb">local </span>10.0.0.1 dev eth0 proto kernel scope host src 10.0.0.1
</span><span class='line'>broadcast 10.0.0.0 dev eth0 proto kernel scope link src 10.0.0.1
</span><span class='line'><span class="nb">local </span>212.64.94.251 dev ppp0 proto kernel scope host src 212.64.94.251
</span><span class='line'>broadcast 10.255.255.255 dev eth0 proto kernel scope link src 10.0.0.1
</span><span class='line'>broadcast 127.0.0.0 dev lo proto kernel scope link src 127.0.0.1
</span><span class='line'><span class="nb">local </span>212.64.78.148 dev ppp2 proto kernel scope host src 212.64.78.148
</span><span class='line'><span class="nb">local </span>127.0.0.1 dev lo proto kernel scope host src 127.0.0.1
</span><span class='line'><span class="nb">local </span>127.0.0.0/8 dev lo proto kernel scope host src 127.0.0.1
</span></code></pre></td></tr></table></div></figure>


<p>让我们看看“main”路由表：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ahu@home ahu<span class="o">]</span><span class="nv">$ </span>ip route list table main
</span><span class='line'>195.96.98.253 dev ppp2 proto kernel scope link src 212.64.78.148
</span><span class='line'>212.64.94.1 dev ppp0 proto kernel scope link src 212.64.94.251
</span><span class='line'>10.0.0.0/8 dev eth0 proto kernel scope link src 10.0.0.1
</span><span class='line'>127.0.0.0/8 dev lo scope link
</span><span class='line'>default via 212.64.94.1 dev ppp0
</span></code></pre></td></tr></table></div></figure>


<p>我们现在为我们的朋友创建了一个叫做“John”的规则。其实我们完全可以使用纯数字表示规则，但是不方便。我们可以向<code>/etc/iproute2/rt_tables</code>文件中添加数字与名字的关联：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># echo 200 John &gt;&gt; /etc/iproute2/rt_tables</span>
</span><span class='line'><span class="c"># ip rule add from 10.0.0.10 table John</span>
</span><span class='line'><span class="c"># ip rule</span>
</span><span class='line'>0:    from all lookup <span class="nb">local </span>
</span><span class='line'>32765:  from 10.0.0.10 lookup John
</span><span class='line'>32766:    from all lookup main
</span><span class='line'>32767:    from all lookup default
</span></code></pre></td></tr></table></div></figure>


<p>现在，剩下的事情就是为 John 的路由表创建路由项了。别忘了刷新路由缓存：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ip route add default via 195.96.98.253 dev ppp2 table John</span>
</span><span class='line'><span class="c"># ip route flush cache</span>
</span></code></pre></td></tr></table></div></figure>


<p>总结主要是以下几步：</p>

<ul>
<li>echo 200 John >> /etc/iproute2/rt_tables #方便表示，把规则名字和数字对应加入到<code>/etc/iproute2/rt_tables</code>文件</li>
<li>ip rule add from 10.0.0.10 table John    #新增规则</li>
<li>ip route add default via 195.96.98.253 dev ppp2 table John #规则中添加路由表</li>
<li>ip route flush cache  #刷新路由表</li>
</ul>


<p>&#8211;EOF&#8211;</p>

<p>未完待续<br/>
下一篇预报&#8211;Linux下高级路由</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[top基本介绍]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/06/02/top/"/>
    <updated>2013-06-02T09:49:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/06/02/top</id>
    <content type="html"><![CDATA[<p><code>top</code>命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。下面跟着笔者一起<code>top</code>一下吧：</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># top</span>
</span><span class='line'>top - 10:52:40 up 3 days, 52 min,  1 user,  load average: 57.28, 112.40, 123.60
</span><span class='line'>Tasks:  99 total,   1 running,  98 sleeping,   0 stopped,   0 zombie
</span><span class='line'>Cpu<span class="o">(</span>s<span class="o">)</span>: 19.5%us, 11.4%sy,  0.0%ni,  0.0%id, 65.7%wa,  0.0%hi,  3.4%si,  0.0%st
</span><span class='line'>Mem:  16435896k total, 16232468k used,   203428k free,    58004k buffers
</span><span class='line'>Swap:  1044476k total,   713552k used,   330924k free, 10052032k cached
</span><span class='line'>
</span><span class='line'>  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
</span><span class='line'>  ... ...
</span></code></pre></td></tr></table></div></figure>


<p>统计信息区前五行是系统整体的统计信息。第一行是任务队列信息，同uptime命令的执行结果。其内容如下：</p>

<table class="table table-striped">
    <tr>
        <td>10:52:40</td>
        <td>当前时间</td>
    </tr>
    <tr>
        <td>up 3 days, 52 min</td>
        <td>系统运行时间</td>
    </tr>
    <tr>
        <td>1 users</td>
        <td>当前登录用户数</td>
    </tr>
    <tr>
        <td>load average: 57.28, 112.40, 123.60</td>
        <td>系统负载，即任务队列平均长度。
        <br>分别为1、5、15min前到现在平均值。</br></td>
    </tr>
</table>


<p></p>


<p>第二、三行为进程和CPU的信息。当有多个CPU时，这些内容可能会超过两行。内容如下：</p>

<table>
    <tr>
        <td>Tasks:99 total</td>
        <td>进程总数[键入H可查看线程数]</td>
    </tr>
    <tr>
        <td>1 running,  98 sleeping,  0 stopped</td>
        <td>正在运行的进程、睡眠进程、停止的进程</td>
    </tr>
    <tr>
        <td>0 zombie</td>
        <td>僵尸进程数</td>
    </tr>
    <tr>
        <td>Cpu(s): 19.5%us, 11.4%sy,  
        <br> 0.0%ni, 0.0%id,</br> 
        65.7%wa, 0.0%hi, 3.4%si, 0.0%st</td>
        <td>用户空间占用CPU百分比、内核空间占用CPU百分比
        <br>用户进程空间内改变进程优先级占用CPU、空闲CPU百分比</br>
        等待IO的CPU时间百分比，最后三个是中断请求相关</td>
    </tr>
</table>




<p></p>


<p>倒数第2、3行为内存相关信息：</p>

<table>
    <tr>
        <td>Mem: 16435896k total, 16232468k used, 
        <br>203428k free, 58004k buffers</br></td>
        <td>分别是物理内存总量、使用物理内存总量
        <br>空闲内存总量、用作内核缓存内存量</br></td>
    </tr>
    <tr>
        <td>Swap: 1044476k total, 713552k used, 
        <br>330924k free, 10052032k cached<br></td>
        <td>分别是交换分区量、使用交换分区总量
        <br>空闲交换区总量、缓存交换区总量</br></td>
    </tr>
</table>


<p></p>


<p><strong>buffer</strong>   <a href="http://wiki.answers.com/Q/Difference_between_buffer_and_cache">Difference between buffer and cache?</a></p>

<blockquote><p>A data area, shared by hardware devices or program a process is called buffer. They are operated at different speeds or with different sets of priorities. The buffer allows each device or process to operate without holding up by the other. In order to a buffer to be effective, the size of the buffer needs to be considered by the buffer designer. Like a cache, a buffer is a &#8220;midpoint holding place&#8221; but does not exist so much to accelerate the speed of an activity as for supporting the coordination of separate activities.</p></blockquote>

<p></p>


<p></p>

<blockquote><p>This term is used not only in programming but in hardware as well. In programming, buffering sometimes needs to screen data from its final intended place so that it can be edited or processed before moving to a regular file or database.</p></blockquote>

<p><strong>cached</strong></p>

<blockquote><p>Cache memory is type of random access memory (RAM). Cache Memory can be accessed more quickly by the computer microprocessor than it can be accessed by regular RAM. Like microprocessor processes data, it looks first in the cache memory and if there, it finds the data from a previous reading of data, it does not need to do the more time consuming reading of data from larger memory.</p></blockquote>

<p></p>


<blockquote><p>Sometimes Cache memory is described in levels of closeness and convenience to the microprocessor. An L1 cache is on the same chip like the microprocessors.</p></blockquote>

<p></p>


<p></p>

<blockquote><p>In addition to cache memory, RAM itself is a cache memory for hard disk storage since all of RAM&#8217;s contents come up to the hard disk initially when you turn on your computer and load the operating system that you are loading it into RAM and later when you start new applications and access new data. RAM also contains a special area called a disk cache that consists of the data most recently read in from the hard disk.</p></blockquote>

<p></p>


<p>最后1行则是进程相关的资源占用信息:</p>

<ul>
<li>PID：进程的ID</li>
<li>USER：进程所有者</li>
<li>PR：进程的优先级别，越小越优先被执行</li>
<li>NI：nice值。负值表示高优先级，正值表示低优先级</li>
<li>VIRT：进程占用的虚拟内存</li>
<li>RES：进程占用的物理内存</li>
<li>SHR：进程使用的共享内存</li>
<li>S：进程的状态。S表示休眠，R表示正在运行，Z表示僵死状态，N表示该进程优先值为负数</li>
<li>%CPU：进程占用CPU的使用率</li>
<li>%MEM：进程使用的物理内存和总内存的百分比</li>
<li>TIME+：该进程启动后占用的总的CPU时间，即占用CPU使用时间的累加值。</li>
<li>COMMAND：进程启动命令名称</li>
</ul>


<p>&#8211;EOF&#8211;</p>

<p>top实践&#8211;<a href="http://kumu-linux.github.io/blog/2013/06/07/top-hacks/">top实践小技巧</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[openvpn基本搭建实例]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/05/23/openvpn/"/>
    <updated>2013-05-23T10:19:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/05/23/openvpn</id>
    <content type="html"><![CDATA[<p>OpenVPN是一个用于创建虚拟专用网络加密通道的软件包，最早由James Yonan编写。OpenVPN允许创建的VPN使用公开密钥、电子证书、或者用户名／密码来进行身份验证。</p>

<!--more-->




<center><img src="http://kumu-Linux.github.io/images/openvpn.png" alt="openvpn" title="openvpn" width="500" /></center>


<h2>准备软件：</h2>

<p>本例以RHEL6.3为例</p>

<ul>
<li><a href="http://swupdate.openvpn.org/community/releases/openvpn-2.3.1.tar.gz">openvpn-2.3.1</a></li>
<li><a href="http://www.oberhumer.com/opensource/lzo/download/lzo-2.06.tar.gz">lzo-2.06</a></li>
<li>[最新版本的openvpn-2.3.1官方不再集成<code>easy-rsa</code>] Note that easy-rsa is no longer bundled with OpenVPN source code archives. To get it, visit the easy-rsa page on GitHub, or download it from our Linux software repositories.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://github.com/OpenVPN/easy-rsa
</span></code></pre></td></tr></table></div></figure>


<h2>软件安装</h2>

<p><code>openssl</code>、<code>openssl-devel</code>、<code>pam</code>、<code>pam-devel</code>安装</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install openssl openssl-devel pam pam-devel -y
</span></code></pre></td></tr></table></div></figure>


<p><code>lzo-2.06</code>安装</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./configure <span class="o">&amp;&amp;</span> make <span class="o">&amp;&amp;</span> make install
</span></code></pre></td></tr></table></div></figure>


<p><code>openvpn-2.3.1</code>安装</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./configure <span class="o">&amp;&amp;</span> make <span class="o">&amp;&amp;</span> make install
</span></code></pre></td></tr></table></div></figure>


<h2>相关配置</h2>

<h3>添加环境变量</h3>

<p>在<code>~/.barc_profile</code>文件中加入如下内容,命名根据实际需求修改：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">D</span><span class="o">=</span>/etc/openvpn
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_CONFIG</span><span class="o">=</span><span class="nv">$D</span>/openssl.cnf
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_DIR</span><span class="o">=</span><span class="nv">$D</span>/keys
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_SIZE</span><span class="o">=</span>1024
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_COUNTRY</span><span class="o">=</span>CN
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_PROVINCE</span><span class="o">=</span>BJ
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_CITY</span><span class="o">=</span>BJ
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_ORG</span><span class="o">=</span>kumu
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_OU</span><span class="o">=</span>kumu
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_NAME</span><span class="o">=</span>kumu
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_EMAIL</span><span class="o">=</span>root@kumu
</span></code></pre></td></tr></table></div></figure>


<p>使新增环境变量生效并新建配置文件目录<code>/etc/openvpn</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># source ~/.barc_profile</span>
</span><span class='line'><span class="c"># mkdir /etc/openvpn</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>注</strong>:也可修改easy-rsa中的vars【/usr/local/src/openvpn/easy-rsa/easy-rsa/2.0/vars】，source生效</p>

<h3>生成密钥</h3>

<p>进入之前下载的<code>easy-rsa</code>目录</p>

<p><strong>初始化PKI、生成证书</strong>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># pwd</span>
</span><span class='line'>/usr/local/src/openvpn/easy-rsa/easy-rsa/2.0
</span><span class='line'><span class="c"># ls</span>
</span><span class='line'>build-ca     build-key         build-key-server  clean-all      openssl-0.9.6.cnf  pkitool      vars
</span><span class='line'>build-dh     build-key-pass    build-req         inherit-inter  openssl-0.9.8.cnf  revoke-full  whichopensslcnf
</span><span class='line'>build-inter  build-key-pkcs12  build-req-pass    list-crl       openssl-1.0.0.cnf  sign-req
</span><span class='line'><span class="c"># cp openssl-1.0.0.cnf /etc/openvpn/openssl.cnf</span>
</span><span class='line'><span class="c"># ./clean-all #初始化，清除原有不需要的文件</span>
</span><span class='line'><span class="c"># ./build-ca  #一直回车即可</span>
</span><span class='line'>Generating a 1024 bit RSA private key
</span><span class='line'>.......++++++
</span><span class='line'>............++++++
</span><span class='line'>writing new private key to <span class="s1">&#39;ca.key&#39;</span>
</span><span class='line'>-----
</span><span class='line'>You are about to be asked to enter information that will be incorporated
</span><span class='line'>into your certificate request.
</span><span class='line'>What you are about to enter is what is called a Distinguished Name or a DN.
</span><span class='line'>There are quite a few fields but you can leave some blank
</span><span class='line'>For some fields there will be a default value,
</span><span class='line'>If you enter <span class="s1">&#39;.&#39;</span>, the field will be left blank.
</span><span class='line'>-----
</span><span class='line'>Country Name <span class="o">(</span>2 letter code<span class="o">)</span> <span class="o">[</span>CN<span class="o">]</span>:
</span><span class='line'>State or Province Name <span class="o">(</span>full name<span class="o">)</span> <span class="o">[</span>BJ<span class="o">]</span>:
</span><span class='line'>Locality Name <span class="o">(</span>eg, city<span class="o">)</span> <span class="o">[</span>BJ<span class="o">]</span>:
</span><span class='line'>Organization Name <span class="o">(</span>eg, company<span class="o">)</span> <span class="o">[</span>kumu<span class="o">]</span>:
</span><span class='line'>Organizational Unit Name <span class="o">(</span>eg, section<span class="o">)</span> <span class="o">[</span>kumu<span class="o">]</span>:
</span><span class='line'>Common Name <span class="o">(</span>eg, your name or your server<span class="err">&#39;</span>s hostname<span class="o">)</span> <span class="o">[</span>kumu CA<span class="o">]</span>:
</span><span class='line'>Name <span class="o">[]</span>:kumu
</span><span class='line'>Email Address <span class="o">[</span>root@kumu<span class="o">]</span>:
</span></code></pre></td></tr></table></div></figure>


<p><strong>生成Server端证书Server Key</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ./build-key-server kumu_server #一路回车，密码处填写密码</span>
</span><span class='line'>Generating a 1024 bit RSA private key
</span><span class='line'>....................................++++++
</span><span class='line'>.........++++++
</span><span class='line'>writing new private key to <span class="s1">&#39;kumu_server.key&#39;</span>
</span><span class='line'>-----
</span><span class='line'>You are about to be asked to enter information that will be incorporated
</span><span class='line'>into your certificate request.
</span><span class='line'>What you are about to enter is what is called a Distinguished Name or a DN.
</span><span class='line'>There are quite a few fields but you can leave some blank
</span><span class='line'>For some fields there will be a default value,
</span><span class='line'>If you enter <span class="s1">&#39;.&#39;</span>, the field will be left blank.
</span><span class='line'>-----
</span><span class='line'>Country Name <span class="o">(</span>2 letter code<span class="o">)</span> <span class="o">[</span>CN<span class="o">]</span>:
</span><span class='line'>State or Province Name <span class="o">(</span>full name<span class="o">)</span> <span class="o">[</span>BJ<span class="o">]</span>:
</span><span class='line'>Locality Name <span class="o">(</span>eg, city<span class="o">)</span> <span class="o">[</span>BJ<span class="o">]</span>:
</span><span class='line'>Organization Name <span class="o">(</span>eg, company<span class="o">)</span> <span class="o">[</span>kumu<span class="o">]</span>:
</span><span class='line'>Organizational Unit Name <span class="o">(</span>eg, section<span class="o">)</span> <span class="o">[</span>kumu<span class="o">]</span>:
</span><span class='line'>Common Name <span class="o">(</span>eg, your name or your server<span class="s1">&#39;s hostname) [kumu_server]:</span>
</span><span class='line'><span class="s1">Name [kumu]:</span>
</span><span class='line'><span class="s1">Email Address [root@kumu]:</span>
</span><span class='line'>
</span><span class='line'><span class="s1">Please enter the following &#39;</span>extra<span class="s1">&#39; attributes</span>
</span><span class='line'><span class="s1">to be sent with your certificate request</span>
</span><span class='line'><span class="s1">A challenge password []:123321  #输入密码</span>
</span><span class='line'><span class="s1">An optional company name []:kumu</span>
</span><span class='line'><span class="s1">Using configuration from /etc/openvpn/openssl.cnf</span>
</span><span class='line'><span class="s1">Check that the request matches the signature</span>
</span><span class='line'><span class="s1">Signature ok</span>
</span><span class='line'><span class="s1">The Subject&#39;</span>s Distinguished Name is as follows
</span><span class='line'>countryName           :PRINTABLE:<span class="s1">&#39;CN&#39;</span>
</span><span class='line'>stateOrProvinceName   :PRINTABLE:<span class="s1">&#39;BJ&#39;</span>
</span><span class='line'>localityName          :PRINTABLE:<span class="s1">&#39;BJ&#39;</span>
</span><span class='line'>organizationName      :PRINTABLE:<span class="s1">&#39;kumu&#39;</span>
</span><span class='line'>organizationalUnitName:PRINTABLE:<span class="s1">&#39;kumu&#39;</span>
</span><span class='line'>commonName            :T61STRING:<span class="s1">&#39;kumu_server&#39;</span>
</span><span class='line'>name                  :PRINTABLE:<span class="s1">&#39;kumu&#39;</span>
</span><span class='line'>emailAddress          :IA5STRING:<span class="s1">&#39;root@kumu&#39;</span>
</span><span class='line'>Certificate is to be certified <span class="k">until </span>May 11 22:54:08 2023 GMT <span class="o">(</span>3650 days<span class="o">)</span>
</span><span class='line'>Sign the certificate? <span class="o">[</span>y/n<span class="o">]</span>:y
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>1 out of 1 certificate requests certified, commit? <span class="o">[</span>y/n<span class="o">]</span>y
</span><span class='line'>Write out database with 1 new entries
</span><span class='line'>Data Base Updated
</span></code></pre></td></tr></table></div></figure>


<p><strong>生成Client端证书</strong>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ./build-key kumu_client1  #一路回车，密码处填写密码</span>
</span><span class='line'>Generating a 1024 bit RSA private key
</span><span class='line'>..++++++
</span><span class='line'>.....................++++++
</span><span class='line'>writing new private key to <span class="s1">&#39;kumu_client1.key&#39;</span>
</span><span class='line'>-----
</span><span class='line'>You are about to be asked to enter information that will be incorporated
</span><span class='line'>into your certificate request.
</span><span class='line'>What you are about to enter is what is called a Distinguished Name or a DN.
</span><span class='line'>There are quite a few fields but you can leave some blank
</span><span class='line'>For some fields there will be a default value,
</span><span class='line'>If you enter <span class="s1">&#39;.&#39;</span>, the field will be left blank.
</span><span class='line'>-----
</span><span class='line'>Country Name <span class="o">(</span>2 letter code<span class="o">)</span> <span class="o">[</span>CN<span class="o">]</span>:
</span><span class='line'>State or Province Name <span class="o">(</span>full name<span class="o">)</span> <span class="o">[</span>BJ<span class="o">]</span>:
</span><span class='line'>Locality Name <span class="o">(</span>eg, city<span class="o">)</span> <span class="o">[</span>BJ<span class="o">]</span>:
</span><span class='line'>Organization Name <span class="o">(</span>eg, company<span class="o">)</span> <span class="o">[</span>kumu<span class="o">]</span>:
</span><span class='line'>Organizational Unit Name <span class="o">(</span>eg, section<span class="o">)</span> <span class="o">[</span>kumu<span class="o">]</span>:
</span><span class='line'>Common Name <span class="o">(</span>eg, your name or your server<span class="s1">&#39;s hostname) [kumu_client1]:</span>
</span><span class='line'><span class="s1">Name [kumu]:</span>
</span><span class='line'><span class="s1">Email Address [root@kumu]:</span>
</span><span class='line'>
</span><span class='line'><span class="s1">Please enter the following &#39;</span>extra<span class="s1">&#39; attributes</span>
</span><span class='line'><span class="s1">to be sent with your certificate request</span>
</span><span class='line'><span class="s1">A challenge password []:123321</span>
</span><span class='line'><span class="s1">An optional company name []:kumu</span>
</span><span class='line'><span class="s1">Using configuration from /etc/openvpn/openssl.cnf</span>
</span><span class='line'><span class="s1">Check that the request matches the signature</span>
</span><span class='line'><span class="s1">Signature ok</span>
</span><span class='line'><span class="s1">The Subject&#39;</span>s Distinguished Name is as follows
</span><span class='line'>countryName           :PRINTABLE:<span class="s1">&#39;CN&#39;</span>
</span><span class='line'>stateOrProvinceName   :PRINTABLE:<span class="s1">&#39;BJ&#39;</span>
</span><span class='line'>localityName          :PRINTABLE:<span class="s1">&#39;BJ&#39;</span>
</span><span class='line'>organizationName      :PRINTABLE:<span class="s1">&#39;kumu&#39;</span>
</span><span class='line'>organizationalUnitName:PRINTABLE:<span class="s1">&#39;kumu&#39;</span>
</span><span class='line'>commonName            :T61STRING:<span class="s1">&#39;kumu_client1&#39;</span>
</span><span class='line'>name                  :PRINTABLE:<span class="s1">&#39;kumu&#39;</span>
</span><span class='line'>emailAddress          :IA5STRING:<span class="s1">&#39;root@kumu&#39;</span>
</span><span class='line'>Certificate is to be certified <span class="k">until </span>May 11 23:01:12 2023 GMT <span class="o">(</span>3650 days<span class="o">)</span>
</span><span class='line'>Sign the certificate? <span class="o">[</span>y/n<span class="o">]</span>:y
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>1 out of 1 certificate requests certified, commit? <span class="o">[</span>y/n<span class="o">]</span>y
</span><span class='line'>Write out database with 1 new entries
</span><span class='line'>Data Base Updated
</span><span class='line'><span class="c"># ls /etc/openvpn/keys/</span>
</span><span class='line'>01.pem  ca.key      index.txt.attr      kumu_client1.crt  kumu_server.crt  openvpn-status.log
</span><span class='line'>02.pem  dh1024.pem  index.txt.attr.old  kumu_client1.csr  kumu_server.csr  serial
</span><span class='line'>ca.crt  index.txt   index.txt.old       kumu_client1.key  kumu_server.key  serial.old
</span></code></pre></td></tr></table></div></figure>


<p><strong>注</strong>：生成其他客户端证书以此类推，名字不相同即可</p>

<p><strong>证书加密</strong>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ./build-dh </span>
</span><span class='line'>./build-dh: line 7: dhparam: <span class="nb">command </span>not found
</span></code></pre></td></tr></table></div></figure>


<p>出现如上问题，修改<code>./build-dh</code>命令中<code>$OPENSSL</code>为<code>openssl</code>即可，原因是默认<code>/usr/local/src/openvpn/easy-rsa/easy-rsa/2.0/vars</code>文件定义了<code>OPENSSL=openssl</code>,而笔者没有引用<code>vars</code>文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ./build-dh </span>
</span><span class='line'>Generating DH parameters, 1024 bit long safe prime, generator 2
</span><span class='line'>This is going to take a long <span class="nb">time</span>
</span><span class='line'>... ...
</span><span class='line'><span class="c"># openvpn --genkey --secret /etc/openvpn/keys/ta.key  #生成加密key</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Server端配置文件修改:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># pwd</span>
</span><span class='line'>/usr/local/src/openvpn/openvpn-2.3.1/sample/sample-config-files
</span><span class='line'><span class="c"># ls </span>
</span><span class='line'>client.conf  loopback-client  openvpn-shutdown.sh  server.conf         tls-home.conf         xinetd-server-config
</span><span class='line'>firewall.sh  loopback-server  openvpn-startup.sh   static-home.conf    tls-office.conf
</span><span class='line'>home.up      office.up        README               static-office.conf  xinetd-client-config
</span><span class='line'><span class="c"># cp server.conf /etc/openvpn/  #拷贝Server模板配置文件到配置目录</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Server端配置文件内容如下</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep -vE &#39;^;|^$|^#&#39; /etc/openvpn/server.conf </span>
</span><span class='line'>port 1194
</span><span class='line'>proto udp
</span><span class='line'>dev tun
</span><span class='line'>ca /etc/openvpn/keys/ca.crt
</span><span class='line'>cert /etc/openvpn/keys/kumu_server.crt
</span><span class='line'>key /etc/openvpn/keys/kumu_server.key  <span class="c"># This file should be kept secret</span>
</span><span class='line'>dh /etc/openvpn/keys/dh1024.pem
</span><span class='line'>server 10.8.0.0 255.255.255.0
</span><span class='line'>push <span class="s2">&quot;route 192.168.10.0 255.255.255.0&quot;</span> <span class="c"># 推送路由</span>
</span><span class='line'>client-to-client
</span><span class='line'>keepalive 10 120
</span><span class='line'>tls-auth /etc/openvpn/keys/ta.key 0 <span class="c"># This file is secret</span>
</span><span class='line'>comp-lzo
</span><span class='line'>persist-key
</span><span class='line'>persist-tun
</span><span class='line'>status /etc/openvpn/keys/openvpn-status.log
</span><span class='line'>verb 3
</span></code></pre></td></tr></table></div></figure>


<h3>开启路由转发和启动Openvpn</h3>

<p><strong>开启路由转发</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo </span>1 &gt; /proc/sys/net/ipv4/ip_forward <span class="c">#临时开启</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者修改/etc/sysctl.conf中<code>net.ipv4.ip_forward = 1</code>，执行<code>sysctl -p</code>永久生效</p>

<p><strong>启动服务</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openvpn --config /etc/openvpn/server.conf --daemon
</span></code></pre></td></tr></table></div></figure>


<h3>Windows客户端连接配置</h3>

<ul>
<li>64位安装<a href="http://swupdate.openvpn.org/community/releases/openvpn-install-2.3.1-I001-x86_64.exe">openvpn-2.3.1-X86_64.exe</a></li>
<li>32位请安装<a href="http://swupdate.openvpn.org/community/releases/openvpn-install-2.3.1-I001-i686.exe">openvpn-2.3.1-i686.exe</a></li>
</ul>


<p>拷贝Server端生成的如下客户端证书到Windows软件安装目录<code>OpenVPN\config</code>下</p>

<ul>
<li>kumu_client1.crt</li>
<li>kumu_client1.key</li>
<li>ca.key</li>
<li>ta.key</li>
</ul>


<p>在<code>OpenVPN\config</code>目录中新建Client端配置文件<code>client.ovpn</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>client
</span><span class='line'>dev tun
</span><span class='line'>proto udp
</span><span class='line'>remote 10.2.0.110 1194
</span><span class='line'>resolv-retry infinite
</span><span class='line'>nobind
</span><span class='line'>persist-key
</span><span class='line'>persist-tun
</span><span class='line'>ca ca.crt
</span><span class='line'>cert kumu_client1.crt
</span><span class='line'>key kumu_client1.key
</span><span class='line'>ns-cert-type server
</span><span class='line'>tls-auth ta.key 1
</span><span class='line'>comp-lzo
</span><span class='line'>verb 3
</span></code></pre></td></tr></table></div></figure>


<p>Win7/Win8以管理员身份启动Openvpn Windows客户端即可，基本的Windows安装这里不作介绍，如果正常，Openvpn Gui客户端显示绿色，ping测试无误，如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>C:<span class="se">\U</span>sers<span class="se">\k</span>umu&gt;ping 10.8.0.1  <span class="c">#测试VPN</span>
</span><span class='line'>
</span><span class='line'>正在 Ping 10.8.0.1 具有 32 字节的数据:
</span><span class='line'>来自 10.8.0.1 的回复: 字节<span class="o">=</span>32 时间&lt;1ms <span class="nv">TTL</span><span class="o">=</span>64
</span><span class='line'>来自 10.8.0.1 的回复: 字节<span class="o">=</span>32 时间&lt;1ms <span class="nv">TTL</span><span class="o">=</span>64
</span><span class='line'>... ...
</span><span class='line'>C:<span class="se">\U</span>sers<span class="se">\k</span>umu&gt;ping 192.168.10.19 <span class="c">#测试内网</span>
</span><span class='line'>
</span><span class='line'>正在 Ping 192.168.10.19 具有 32 字节的数据:
</span><span class='line'>来自 192.168.10.19 的回复: 字节<span class="o">=</span>32 时间<span class="o">=</span>1ms <span class="nv">TTL</span><span class="o">=</span>64
</span><span class='line'>来自 192.168.10.19 的回复: 字节<span class="o">=</span>32 时间<span class="o">=</span>2ms <span class="nv">TTL</span><span class="o">=</span>64
</span><span class='line'>... ...
</span></code></pre></td></tr></table></div></figure>


<h3>Linux客户端配置</h3>

<p><strong>安装</strong>参见Server端安装</p>

<h4>相关配置</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># mkdir /etc/openvpn</span>
</span><span class='line'><span class="c"># cp /usr/local/src/openvpn/openvpn-2.3.1/sample/sample-config-files/client.conf /etc/openvpn/</span>
</span><span class='line'><span class="c"># grep -vE &#39;^$|^#|^;&#39; /etc/openvpn/client.conf</span>
</span><span class='line'>client
</span><span class='line'>dev tun
</span><span class='line'>proto udp
</span><span class='line'>remote 10.2.0.110 1194
</span><span class='line'>resolv-retry infinite
</span><span class='line'>nobind
</span><span class='line'>persist-key
</span><span class='line'>persist-tun
</span><span class='line'>ca ca.crt
</span><span class='line'>cert kumu_client1.crt
</span><span class='line'>key kumu_client1.key
</span><span class='line'>ns-cert-type server
</span><span class='line'>tls-auth ta.key 1
</span><span class='line'>comp-lzo
</span><span class='line'>verb 3
</span></code></pre></td></tr></table></div></figure>


<p>拷贝Server端生成的如下客户端证书到Linux客户端/etc/openvpn下(这里为了方便不再生成一套客户端证书了)</p>

<ul>
<li>kumu_client1.crt</li>
<li>kumu_client1.key</li>
<li>ca.key</li>
<li>ta.key</li>
</ul>


<p><strong>启动Openvpn客户端服务</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openvpn --config /etc/openvpn/client.conf --daemon
</span></code></pre></td></tr></table></div></figure>


<h4>测试</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ifconfig tun0</span>
</span><span class='line'>tun0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00
</span><span class='line'>          inet addr:10.8.0.6  P-t-P:10.8.0.5  Mask:255.255.255.255
</span><span class='line'>... ...
</span><span class='line'><span class="c"># route -n</span>
</span><span class='line'>Kernel IP routing table
</span><span class='line'>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
</span><span class='line'>10.8.0.5        0.0.0.0         255.255.255.255 UH    0      0        0 tun0
</span><span class='line'>10.8.0.0        10.8.0.5        255.255.255.0   UG    0      0        0 tun0
</span><span class='line'>192.168.10.0    10.8.0.5        255.255.255.0   UG    0      0        0 tun0
</span><span class='line'>... ...
</span><span class='line'><span class="c"># ping 192.168.10.19</span>
</span><span class='line'>PING 192.168.10.19 <span class="o">(</span>192.168.10.19<span class="o">)</span> 56<span class="o">(</span>84<span class="o">)</span> bytes of data.
</span><span class='line'>64 bytes from 192.168.10.19: <span class="nv">icmp_seq</span><span class="o">=</span>1 <span class="nv">ttl</span><span class="o">=</span>64 <span class="nb">time</span><span class="o">=</span>0.690 ms
</span><span class='line'>64 bytes from 192.168.10.19: <span class="nv">icmp_seq</span><span class="o">=</span>2 <span class="nv">ttl</span><span class="o">=</span>64 <span class="nb">time</span><span class="o">=</span>1.21 ms
</span><span class='line'>... ...
</span></code></pre></td></tr></table></div></figure>


<p>测试正常，无误！</p>

<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
</feed>
