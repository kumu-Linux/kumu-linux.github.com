<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[OPS Notes By Kumu]]></title>
  <link href="http://kumu-Linux.github.io/atom.xml" rel="self"/>
  <link href="http://kumu-Linux.github.io/"/>
  <updated>2014-04-03T23:56:08+08:00</updated>
  <id>http://kumu-Linux.github.io/</id>
  <author>
    <name><![CDATA[枯木]]></name>
    <email><![CDATA[1988.wulei@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[grub install with kvm virtio disk]]></title>
    <link href="http://kumu-Linux.github.io/blog/2014/03/26/grub-virtio/"/>
    <updated>2014-03-26T14:31:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2014/03/26/grub-virtio</id>
    <content type="html"><![CDATA[<p>grub-install ERROR: not suitable driver was found</p>

<!--more-->


<ul>
<li>First</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>grub-install /dev/vda
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Second</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grub</span>
</span><span class='line'>&gt; device <span class="o">(</span>hd0<span class="o">)</span> /dev/vda
</span><span class='line'>&gt; root <span class="o">(</span>hd0,0<span class="o">)</span>
</span><span class='line'>&gt; setup <span class="o">(</span>hd0<span class="o">)</span>
</span><span class='line'>&gt; quit
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>/boot/grub/device.map</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">(</span>hd0<span class="o">)</span> /dev/vda
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh X11Forawarding占用OpenNebula kvm端口]]></title>
    <link href="http://kumu-Linux.github.io/blog/2014/03/24/opennebula-port/"/>
    <updated>2014-03-24T17:04:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2014/03/24/opennebula-port</id>
    <content type="html"><![CDATA[<p>虚拟机重建出现如下错误：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>virsh create deployment.0
</span><span class='line'>error: Failed to create domain from deployment.0
</span><span class='line'>error: Unable to <span class="nb">read </span>from monitor: Connection reset by peer
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>通过日志发现kvm端口被ssh占用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># tail -f /var/log/libvirt/qemu/one-120.log</span>
</span><span class='line'>… …
</span><span class='line'>inet_listen_opts: <span class="nb">bind</span><span class="o">(</span>ipv4,0.0.0.0,6010<span class="o">)</span>: Address already in use
</span><span class='line'>… …
</span><span class='line'><span class="c"># netstat -tulnp | grep 6010</span>
</span><span class='line'>tcp        0      0 127.0.0.1:6010          0.0.0.0:*               LISTEN      28575/5
</span><span class='line'><span class="c"># ps -ef | grep 28575</span>
</span><span class='line'>root     28575  0.0  0.0  73484  3656 ?        Ss   13:03   0:00 sshd: root@pts/5
</span></code></pre></td></tr></table></div></figure>


<p>后查明原因是sshd_config配置文件默认开启<code>X11Forawarding</code>，<code>X11Forawarding</code>默认占用端口为6010开始，和OpenNebula kvm端口占用有冲突。另外，如果连接工具没有开启<code>X11Forawarding</code>，Server端也不会开启转发占用端口的，根本解决方法就是禁用<code>X11Forawarding</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep X11Forwarding /etc/ssh/sshd_config </span>
</span><span class='line'>X11Forwarding no
</span><span class='line'><span class="c"># /etc/init.d/sshd restart</span>
</span></code></pre></td></tr></table></div></figure>


<p>退出已登录的ssh连接，重新登录就不会出现端口占用的问题了，推荐默认关闭X11Forawarding，这在之前的文章<a href="http://kumu-linux.github.io/blog/2013/09/26/ssh-safe/">ssh的一些安全设定</a>已经介绍过了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[2]salt文件分发]]></title>
    <link href="http://kumu-Linux.github.io/blog/2014/02/20/salt-file-manager/"/>
    <updated>2014-02-20T22:12:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2014/02/20/salt-file-manager</id>
    <content type="html"><![CDATA[<p><strong>取消配置文件<code>/etc/salt/master</code>以下注释</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>... ...
</span><span class='line'>file_roots:
</span><span class='line'>  base:
</span><span class='line'>    - /srv/salt
</span><span class='line'>... ...</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p><strong>新建相关目录</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir /srv/salt
</span><span class='line'>touch /srv/salt/top.sls</span></code></pre></td></tr></table></div></figure>


<p>top.sls文件
<code>/srv/salt/top.sls</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>base:
</span><span class='line'>  '*':
</span><span class='line'>    - ssh_key.key</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir /srv/salt/ssh_key
</span><span class='line'>touch /srv/salt/test.sls</span></code></pre></td></tr></table></div></figure>


<p><code>/srv/salt/test.sls</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/root/.ssh/authorized_keys: 
</span><span class='line'># 客户端文件存放路径和命名，如果.ssh目录不存在则会自动新建
</span><span class='line'>  file:
</span><span class='line'>    - managed
</span><span class='line'>    - source: salt://ssh_key/test   
</span><span class='line'>    # 默认file根目录为`/srv/salt`，拷贝相应文件至所在目录
</span><span class='line'>    - user: root
</span><span class='line'>    - group: root
</span><span class='line'>    - mode: 600</span></code></pre></td></tr></table></div></figure>


<p><strong>最终目录结构</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># tree /srv/salt/
</span><span class='line'>/srv/salt/
</span><span class='line'>|-- ssh_key
</span><span class='line'>|   |-- test
</span><span class='line'>|   |-- test.sls
</span><span class='line'>`-- top.sl</span></code></pre></td></tr></table></div></figure>


<p><strong>server端主动推送</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>salt '*' state.highstate -v     # 按照top.sls执行所有
</span><span class='line'>salt '*' state.sls ssh_key.ms   # 指定sls执行</span></code></pre></td></tr></table></div></figure>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[1]salt install]]></title>
    <link href="http://kumu-Linux.github.io/blog/2014/02/20/salt-install/"/>
    <updated>2014-02-20T21:57:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2014/02/20/salt-install</id>
    <content type="html"><![CDATA[<h2>Install</h2>

<p>First => repl源</p>

<p>rhel6</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rpm -ivh \
</span><span class='line'>http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>rhel5</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rpm -ivh \
</span><span class='line'>http://dl.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm</span></code></pre></td></tr></table></div></figure>


<h3>Server</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install salt-master
</span><span class='line'>chkconfig salt-master on
</span><span class='line'>service salt-master start  # salt-master -d也可以启动</span></code></pre></td></tr></table></div></figure>


<h3>Client</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install salt-minion
</span><span class='line'>chkconfig salt-minion on
</span><span class='line'>service salt-minion start  # salt-minion -d也可以启动</span></code></pre></td></tr></table></div></figure>


<p>使用<code>--user</code>选项可以选择运行salt的用户</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>salt-master -d --user test
</span><span class='line'>salt-minion -d --user test</span></code></pre></td></tr></table></div></figure>


<h2>Configure</h2>

<h3>Master基本配置</h3>

<p><code>/etc/salt/master</code>主配置文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>... ...
</span><span class='line'>interface: 192.168.80.131   # 取消外网监听
</span><span class='line'>... ...
</span><span class='line'>autosign_file: /etc/salt/autosign.conf  # 设定匹配主机自动接受key
</span><span class='line'>... ...</span></code></pre></td></tr></table></div></figure>


<p>restart生效</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/init.d/salt-master restart</span></code></pre></td></tr></table></div></figure>


<h3>Client基本配置</h3>

<p><code>/etc/salt/minion</code>主配置文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>... ...
</span><span class='line'>master: 192.168.80.131  # 取消外网监听
</span><span class='line'>... ...</span></code></pre></td></tr></table></div></figure>


<p>restart生效</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service salt-minion restart</span></code></pre></td></tr></table></div></figure>


<h2>基本命令</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># salt-key -L   # 列出当前所有key，包括接受、未接受、拒绝的key
</span><span class='line'>Accepted Keys:
</span><span class='line'>Unaccepted Keys:
</span><span class='line'>kumu-ops-130.puppet.com
</span><span class='line'>Rejected Keys:
</span><span class='line'># salt-key -A   # 接受所有未认证key
</span><span class='line'>The following keys are going to be accepted:
</span><span class='line'>Unaccepted Keys:
</span><span class='line'>kumu-ops-130.puppet.com
</span><span class='line'>Proceed? [n/Y] y
</span><span class='line'>Key for minion kumu-ops-130.puppet.com accepted.</span></code></pre></td></tr></table></div></figure>


<ul>
<li>添加某个key, <code>salt-key -a keyname</code></li>
<li>删除某个key，<code>slat-key -d keyname</code></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># salt kumu-ops-130.puppet.com test.ping
</span><span class='line'># salt '*' test.ping    # 测试所有主机连通性</span></code></pre></td></tr></table></div></figure>


<h3>匹配</h3>

<ul>
<li>匹配所有的Client

<ul>
<li><code>salt '*' test.ping</code></li>
</ul>
</li>
<li>匹配符合条件的Client

<ul>
<li><code>salt '*.example.net' test.ping</code></li>
<li><code>salt '*.example.*' test.ping</code></li>
</ul>
</li>
<li>单个匹配Client

<ul>
<li><code>salt 'web?.example.net' test.ping</code></li>
</ul>
</li>
<li>匹配web1到web5

<ul>
<li><code>salt 'web[1-5]' test.ping</code></li>
</ul>
</li>
<li>匹配web-x、web-y、web-z Client

<ul>
<li><code>salt 'web-[x-z]' test.ping</code></li>
</ul>
</li>
<li>匹配web1-prod和web1-devel的Client

<ul>
<li><code>salt -E 'web1-(prod|devel)' test.ping</code></li>
</ul>
</li>
<li>列表

<ul>
<li><code>salt -L 'web1,web2,web3' test.ping</code></li>
</ul>
</li>
</ul>


<h3>Grains</h3>

<p>salt配备了一个获取底层信息的接口<code>Grains</code>，grains的信息都是静态信息，不可变的</p>

<ul>
<li>匹配所有的CentOS Client：

<ul>
<li><code>salt -G 'os:CentOS' test.ping</code></li>
</ul>
</li>
<li>查看grains分类:

<ul>
<li><code>salt '*' grains.ls</code></li>
</ul>
</li>
<li>查看grains所有信息:

<ul>
<li><code>salt '*' grains.items</code></li>
</ul>
</li>
<li>osrelease查看grains某个信息:

<ul>
<li><code>salt '*' grains.item</code></li>
</ul>
</li>
</ul>


<h3>More&#8230;</h3>

<p>查看salt更多的命令手册 <code>salt '*' sys.doc</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[opennebula 3.8 market兼容问题]]></title>
    <link href="http://kumu-Linux.github.io/blog/2014/02/20/opennebula-market/"/>
    <updated>2014-02-20T16:12:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2014/02/20/opennebula-market</id>
    <content type="html"><![CDATA[<p>今天下午发现公司所有的OpenNebula Sunstone访问出错，而且错误界面关闭不了，严重影响操作</p>

<!--more-->




<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_market_err.png" /></center>


<p>Firebug获知锁定错误为market插件</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_market_err2.png" /></center>


<p>Google获知原因所在，具体问题可以参见<a href="http://www.marshut.com/iqmmzn/opennebula-3-8-and-market-compatiable-problem.html">opennebula-3-8-and-market-compatiable-problem</a> ，解决方法是关闭sunstone的Market plugins，修改<code>etc/sunstone-plugins.yaml</code>配置文件，修改下行从<code>True</code>变为<code>false</code>，如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-</span> <span class="n">plugins</span><span class="o">/</span><span class="n">marketplace</span><span class="o">-</span><span class="n">tab</span><span class="o">.</span><span class="n">js</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">:ALL</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="ss">:user</span><span class="p">:</span>
</span><span class='line'><span class="ss">:group</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>完成之后刷新页面即可恢复正常</p>

<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL复制备忘]]></title>
    <link href="http://kumu-Linux.github.io/blog/2014/02/17/mysql-rep/"/>
    <updated>2014-02-17T22:50:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2014/02/17/mysql-rep</id>
    <content type="html"><![CDATA[<ul>
<li><a href="#repl1">复制的用途</a></li>
<li><a href="#repl2">复制工作过程</a></li>
<li><a href="#repl3">复制配置</a>

<ul>
<li><a href="#repl4">创建复制账号</a></li>
<li><a href="#repl5">配置主库和备库</a></li>
<li><a href="#repl6">启动复制</a></li>
</ul>
</li>
<li><a href="#repl7">线上运行后主从配置</a></li>
<li><a href="#repl8">一些重要选项</a></li>
<li><a href="#repl9">参考</a></li>
</ul>


<h2 id="env">环境说明</h2>


<p>MySQL支持两种复制方式：基于行的复制和基于语句的复制，两种方式都是通过在主库上记录二进制日志，在被库重复日志的方式来实现异步的数据复制。</p>

<!--more-->




<h2 id="repl1">复制的用途：</h2>


<ul>
<li>数据分布</li>
<li>负载均衡</li>
<li>备份

<ul>
<li>复制只是备份的一种技术补充，但是不能取代备份</li>
</ul>
</li>
<li>高可用性和故障切除

<ul>
<li>避免单点故障</li>
</ul>
</li>
<li>MySQL升级测试</li>
</ul>


<h2 id="repl2">复制工作过程：</h2>


<ul>
<li>1、主库把数据更改记录到二进制日志[Binary Log]中</li>
<li>2、备库将主库上的日志复制到自己的中继日志[Relay Log]中</li>
<li>3、备库读取中继日志中的事件，将其重放到备库数据之上</li>
</ul>


<center><img src="http://kumu-Linux.github.io/images/mysql_rep/mysql_rep1.jpg" /></center>


<p>第一步是主库记录二进制日志。在每次准备提交事务完成数据更新前，主库将数据更新的事件记录到二进制日志中，MySQL会按照事务提交的顺序而不是语句执行顺序来记录二进制日志。在记录二进制日志后，主库会告诉存储引擎可以提交事务了。然后备库复制二进制日志到其本地中继日志中，首先备库会启动一个工作线程，称为I/O线程，I/O和主库建立一个普通的客户端连接，然后在主库上启动一个特殊的二进制转储[binlog dump]线程[无对应SQL命令]，该线程会读取主库上二进制日志的事件，如果该线程追赶上主库将睡眠状态，直到主库发送信号量通知其有新事件产生才会被唤醒，备库I/O线程会将收到的事件记录到中继日记。备库复制过程有两个线程，一个SQL线程和一个IO线程。</p>

<h2 id="repl3">复制配置：</h2>


<p>要求：主备拥有同样的数据</p>

<p>过程：</p>

<ul>
<li>1、在每台服务器上创建复制账号[推荐这么做]</li>
<li>2、配置主库和备库</li>
<li>3、通知备库连接到主库并从主库复制数据</li>
</ul>


<h3 id="repl4">创建复制账号</h3>


<p>主从推荐都加，其实主只需要REPLICATION SLAVE权限就可以了，主要目的是:</p>

<ul>
<li>1、监控和管理复制的账号需要REPLICATION CLIENT权限，使用同一账号方便管理</li>
<li>2、方便角色切换</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">GRANT</span> <span class="n">REPLICATION</span> <span class="n">SLAVE</span><span class="p">,</span> <span class="n">REPLICATION</span> <span class="n">CLIENT</span> <span class="k">ON</span> <span class="o">*</span><span class="p">.</span><span class="o">*</span>
</span><span class='line'>    <span class="o">-&gt;</span> <span class="k">TO</span> <span class="n">repl</span><span class="o">@</span><span class="s1">&#39;192.168.0.%&#39;</span> <span class="n">IDENTIFIED</span> <span class="k">BY</span> <span class="s1">&#39;pass&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>




<h3 id="repl5">配置主库和备库</h3>


<p>主库：打开二进制日志选项，指定唯一的server id，在配置文件<code>my.cnf</code>修改如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="p">[</span><span class="n">mysqld</span><span class="p">]</span>
</span><span class='line'><span class="n">log</span><span class="o">-</span><span class="n">bin</span><span class="o">=</span><span class="n">bin</span>
</span><span class='line'><span class="n">server</span><span class="o">-</span><span class="n">id</span><span class="o">=</span><span class="mi">1</span>     <span class="c1"># server id值应该唯一，防止相同</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果之前没有开启二进制日志，则需要重启MySQL服务，为确保二进制是否已经创建，使用SHOW MASTER STATUS命令检查</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SHOW</span> <span class="n">MASTER</span> <span class="n">STATUS</span><span class="err">\</span><span class="n">G</span>
</span><span class='line'><span class="o">+----------------+-----------+--------------+------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">File</span>           <span class="o">|</span> <span class="n">Position</span>  <span class="o">|</span> <span class="n">Binlog_Do_DB</span> <span class="o">|</span> <span class="n">Binlog_Ignore_DB</span> <span class="o">|</span> <span class="n">Executed_Gtid_Set</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------+-----------+--------------+------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">bin</span><span class="o">-</span><span class="n">log</span><span class="p">.</span><span class="mi">000001</span> <span class="o">|</span> <span class="mi">400</span>       <span class="o">|</span>              <span class="o">|</span>                  <span class="o">|</span>                   <span class="o">|</span>
</span><span class='line'><span class="o">+----------------+-----------+--------------+------------------+-------------------+</span>
</span><span class='line'><span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>备库修改配置如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="p">[</span><span class="n">mysqld</span><span class="p">]</span>
</span><span class='line'><span class="n">log</span><span class="o">-</span><span class="n">bin</span><span class="o">=</span><span class="n">bin</span>
</span><span class='line'><span class="n">server</span><span class="o">-</span><span class="n">id</span><span class="o">=</span><span class="mi">2</span>
</span><span class='line'><span class="n">relay</span><span class="o">-</span><span class="n">log</span><span class="o">=</span><span class="n">mysqld</span><span class="o">-</span><span class="n">relay</span><span class="o">-</span><span class="n">bin</span>
</span><span class='line'><span class="n">log</span><span class="o">-</span><span class="n">slave</span><span class="o">-</span><span class="n">updates</span><span class="o">=</span><span class="mi">1</span>
</span><span class='line'><span class="c1"># 如果是A -&gt; B -&gt; C架构需要启用log-slave-updates该选项，允许备库将其重放的事件也记录到自身的二进制日志中</span>
</span><span class='line'><span class="n">read_only</span><span class="o">=</span><span class="mi">1</span>     <span class="c1"># 防止从库被修改</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>log_slave_updates</code>选项可以让备库变成其它服务器的主库,下图为发送复制事件到其它备库</p>

<center><img src="http://kumu-Linux.github.io/images/mysql_rep/mysql_rep2.jpg" /></center>




<h3 id="repl6">启动复制</h3>


<p>从库启动复制配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">CHANGE</span> <span class="n">MASTER</span> <span class="k">TO</span>
</span><span class='line'>    <span class="o">-&gt;</span> <span class="n">MASTER_HOST</span><span class="o">=</span><span class="s1">&#39;192.168.0.10&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">-&gt;</span> <span class="n">MASTER_USER</span><span class="o">=</span><span class="s1">&#39;repl&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">-&gt;</span> <span class="n">MASTER_PASSWORD</span><span class="o">=</span><span class="s1">&#39;pass&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">-&gt;</span> <span class="n">MASTER_LOG_FILE</span><span class="o">=</span><span class="s1">&#39;bin-log.000001&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">-&gt;</span> <span class="n">MASTER_LOG_POS</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span>
</span><span class='line'>    <span class="o">-&gt;</span> <span class="n">MASTER_CONNECT_RETRY</span><span class="o">=</span><span class="mi">10</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>查看当前状态</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SHOW</span> <span class="n">SLAVE</span> <span class="n">STATUS</span><span class="err">\</span><span class="n">G</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>               <span class="n">Slave_IO_State</span><span class="p">:</span>
</span><span class='line'>                  <span class="n">Master_Host</span><span class="p">:</span> <span class="mi">192</span><span class="p">.</span><span class="mi">168</span><span class="p">.</span><span class="mi">0</span><span class="p">.</span><span class="mi">10</span>
</span><span class='line'>                  <span class="n">Master_User</span><span class="p">:</span> <span class="n">repl</span>
</span><span class='line'>                  <span class="n">Master_Port</span><span class="p">:</span> <span class="mi">3306</span>
</span><span class='line'>                <span class="n">Connect_Retry</span><span class="p">:</span> <span class="mi">60</span>
</span><span class='line'>              <span class="n">Master_Log_File</span><span class="p">:</span> <span class="n">bin</span><span class="o">-</span><span class="n">log</span><span class="p">.</span><span class="mi">000001</span>
</span><span class='line'>          <span class="n">Read_Master_Log_Pos</span><span class="p">:</span> <span class="mi">400</span>
</span><span class='line'>               <span class="n">Relay_Log_File</span><span class="p">:</span> <span class="n">mysqld</span><span class="o">-</span><span class="n">relay</span><span class="o">-</span><span class="n">bin</span><span class="p">.</span><span class="mi">000001</span>
</span><span class='line'>                <span class="n">Relay_Log_Pos</span><span class="p">:</span> <span class="mi">400</span>
</span><span class='line'>        <span class="n">Relay_Master_Log_File</span><span class="p">:</span> <span class="n">bin</span><span class="o">-</span><span class="n">log</span><span class="p">.</span><span class="mi">000001</span>
</span><span class='line'>             <span class="n">Slave_IO_Running</span><span class="p">:</span> <span class="n">No</span>
</span><span class='line'>            <span class="n">Slave_SQL_Running</span><span class="p">:</span> <span class="n">No</span>
</span><span class='line'>            <span class="p">...</span>
</span><span class='line'>            <span class="n">Seconds_Behind_Master</span><span class="p">:</span> <span class="no">NULL</span>
</span></code></pre></td></tr></table></div></figure>


<p>START SLAVE</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="n">START</span> <span class="n">SLAVE</span><span class="p">;</span>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SHOW</span> <span class="n">SLAVE</span> <span class="n">STATUS</span><span class="err">\</span><span class="n">G</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>               <span class="n">Slave_IO_State</span><span class="p">:</span> <span class="n">Waiting</span> <span class="k">for</span> <span class="n">master</span> <span class="k">to</span> <span class="n">send</span> <span class="n">event</span>
</span><span class='line'>                  <span class="n">Master_Host</span><span class="p">:</span> <span class="mi">192</span><span class="p">.</span><span class="mi">168</span><span class="p">.</span><span class="mi">0</span><span class="p">.</span><span class="mi">10</span>
</span><span class='line'>                  <span class="n">Master_User</span><span class="p">:</span> <span class="n">repl</span>
</span><span class='line'>                  <span class="n">Master_Port</span><span class="p">:</span> <span class="mi">3306</span>
</span><span class='line'>                <span class="n">Connect_Retry</span><span class="p">:</span> <span class="mi">60</span>
</span><span class='line'>              <span class="n">Master_Log_File</span><span class="p">:</span> <span class="n">bin</span><span class="o">-</span><span class="n">log</span><span class="p">.</span><span class="mi">000001</span>
</span><span class='line'>          <span class="n">Read_Master_Log_Pos</span><span class="p">:</span> <span class="mi">400</span>
</span><span class='line'>               <span class="n">Relay_Log_File</span><span class="p">:</span> <span class="n">mysqld</span><span class="o">-</span><span class="n">relay</span><span class="o">-</span><span class="n">bin</span><span class="p">.</span><span class="mi">000001</span>
</span><span class='line'>                <span class="n">Relay_Log_Pos</span><span class="p">:</span> <span class="mi">400</span>
</span><span class='line'>        <span class="n">Relay_Master_Log_File</span><span class="p">:</span> <span class="n">bin</span><span class="o">-</span><span class="n">log</span><span class="p">.</span><span class="mi">000001</span>
</span><span class='line'>             <span class="n">Slave_IO_Running</span><span class="p">:</span> <span class="n">Yes</span>
</span><span class='line'>            <span class="n">Slave_SQL_Running</span><span class="p">:</span> <span class="n">Yes</span>
</span><span class='line'>            <span class="p">...</span>
</span><span class='line'>            <span class="n">Seconds_Behind_Master</span><span class="p">:</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>




<h2 id="repl7">线上服务器配置主从</h2>


<p>很多情况下,一些主库已经运行很长时间了，需要做主从同步，这时从库还没有数据，那么就要把主的数据导入到从。</p>

<p>冷备：</p>

<p>最基本的方法是关闭主库，把数据复制到备库。然后重启主库后，会使用一个新的二进制文件，在备库执行<code>CHANGE MASTER TO</code>指向这个文件的起始处即可。[缺点很明显，关闭主库]</p>

<p>使用热备份：</p>

<pre><code>*   如果只使用MyISAM表，可以使用mysqldump等方式保持数据一致性备份
</code></pre>

<p>使用mysqldump：</p>

<pre><code>*   如果只包含InnoDB表，那么使用mysqldump如下命令备份数据
</code></pre>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysqldump</span> <span class="o">-</span><span class="n">hxx</span><span class="p">.</span><span class="n">xx</span><span class="p">.</span><span class="n">xx</span><span class="p">.</span><span class="n">xx</span> <span class="o">--</span><span class="n">single</span><span class="o">-</span><span class="n">transaction</span> <span class="o">--</span><span class="k">all</span><span class="o">-</span><span class="k">databases</span> <span class="err">\</span>
</span><span class='line'>    <span class="o">--</span><span class="n">master</span><span class="o">-</span><span class="n">data</span><span class="o">=</span><span class="mi">1</span> <span class="o">&gt;</span> <span class="k">all</span><span class="o">-</span><span class="k">databases</span><span class="p">.</span><span class="k">sql</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者边导出边写入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysqldump</span> <span class="o">-</span><span class="n">hmaster_ip</span> <span class="o">--</span><span class="n">single</span><span class="o">-</span><span class="n">transaction</span> <span class="o">--</span><span class="k">all</span><span class="o">-</span><span class="k">databases</span> <span class="err">\</span>
</span><span class='line'>    <span class="o">--</span><span class="n">master</span><span class="o">-</span><span class="n">data</span><span class="o">=</span><span class="mi">1</span> <span class="o">|</span> <span class="n">mysql</span> <span class="o">-</span><span class="n">hslave_ip</span>
</span></code></pre></td></tr></table></div></figure>


<p>master-data默认值是1，加上之后会记录Position点并执行<code>CHANGE MASTER TO MASTER_LOG_FILE='bin-log.xxxx', MASTER_LOG_POS=xxxx;</code>语句，为2则记录但会注释<code>CHANGE MASTER</code>语句，不会被执行。关于备份可以使用其它的工具如Percona Xtrabackup等等</p>

<ul>
<li>A-B-C方式

<ul>
<li>B为从和主身份时，B实例上需要设置<code>logs-slave-updates</code>选项，这个选项告诉从服务器将其SQL线程执行的更新记录到从服务器自己的二进制日志上，当然前提是需要开启binlog</li>
</ul>
</li>
</ul>


<h2 id="repl8">一些重要的选项</h2>


<ul>
<li>[主]主库上二进制日志最重要的选项:<code>sync_binlog</code>，推荐设置成1，保证在服务器崩溃时不丢失事件，虽然会降低性能</li>
<li>[主从]<code>innodb_flush_log_at_trx_commit</code>根据实际情况设置</li>
<li>二进制日志推荐使用指定命名，如<code>log-bin=bin</code>[主从]，中继日志指定命名<code>relay-log=mysqld-relay-bin</code>[从]</li>
<li>[从]<code>skip_slave_start</code>选项可以阻止备库崩溃后自动启动复制，预留时间修复</li>
<li>[从]<code>read_only</code>，可以阻止大部分用户更改非临时表，除了复制SQL线程和其它拥有超级权限的用户之外</li>
</ul>


<p>关于主从复制的一些问题，这里暂不讨论</p>

<h2 id="repl9">参考</h2>


<ul>
<li>《高性能MySQL第三版》</li>
<li><a href="http://dev.mysql.com/doc/refman/5.6/en/index.html">MySQL 5.6 Reference Manual</a></li>
</ul>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenNebula4.4入门之安装和节点配置]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/12/19/opennebula4-dot-4/"/>
    <updated>2013-12-19T10:51:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/12/19/opennebula4-dot-4</id>
    <content type="html"><![CDATA[<p>OpenNebula入门的PDF文档已可下载，<a href="http://vdisk.weibo.com/s/EKoLFfHiE-oT/1387002741">OpenNebula4.4入门配置</a>，本博客连载更新相关内容</p>

<!--more-->


<p><strong>本文内容目录组成如下</strong>：</p>

<ul>
<li><a href="#env">环境说明</a></li>
<li><a href="#soft">软件包组成</a></li>
<li><a href="#server">Server端安装和配置</a></li>
<li><a href="#node_server">节点端安装配置</a></li>
<li><a href="#node_add">添加节点</a>

<ul>
<li><a href="#onehost">onehost</a></li>
</ul>
</li>
</ul>


<h2 id="env">环境说明</h2>


<p>因为CentOS6.4虚拟化有很大的一个提升，所以系统环境管理端和节点宿主机都采用CentOS6.4 x86_64</p>

<h2 id="soft">软件包组成</h2>


<p>从OpenNebula官网下载<a href="http://downloads.opennebula.org/packages/opennebula-4.4.0/CentOS-6/CentOS-6-opennebula-4.4.0-1.tar.gz">CentOS/RHEL 6</a>对应软件包或者加入OpenNebula源，直接下载软件包这里不再赘述，添加OpenNebula源方法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat &lt;&lt; EOT &gt; /etc/yum.repos.d/opennebula.repo</span>
</span><span class='line'><span class="o">[</span>opennebula<span class="o">]</span>
</span><span class='line'><span class="nv">name</span><span class="o">=</span>opennebula
</span><span class='line'><span class="nv">baseurl</span><span class="o">=</span>http://downloads.opennebula.org/repo/CentOS/6/stable/<span class="se">\$</span>basearch
</span><span class='line'><span class="nv">enabled</span><span class="o">=</span>1
</span><span class='line'><span class="nv">gpgcheck</span><span class="o">=</span>0
</span><span class='line'>EOT
</span></code></pre></td></tr></table></div></figure>


<p>OpenNebula4.4主要有以下几个软件组成：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ls opennebula-*</span>
</span><span class='line'>opennebula-4.4.0-1.x86_64.rpm           //OpenNebula命令行指令
</span><span class='line'>opennebula-flow-4.4.0-1.x86_64.rpm      //管理OpenNebula服务
</span><span class='line'>opennebula-java-4.4.0-1.x86_64.rpm      //OpenNebula Java Api
</span><span class='line'>opennebula-ozones-4.4.0-1.x86_64.rpm    //OpenNebula网页使用界面
</span><span class='line'>opennebula-server-4.4.0-1.x86_64.rpm    //OpenNebula Server守护进程
</span><span class='line'>opennebula-common-4.4.0-1.x86_64.rpm    //基本依赖性组件
</span><span class='line'>opennebula-gate-4.4.0-1.x86_64.rpm      //使虚拟机和OpenNebula之间的通信
</span><span class='line'>opennebula-node-kvm-4.4.0-1.x86_64.rpm  //元软件包，包括安装oneadmin用户、libvirt和kvm
</span><span class='line'>opennebula-ruby-4.4.0-1.x86_64.rpm      //ruby依赖性组件
</span><span class='line'>opennebula-sunstone-4.4.0-1.x86_64.rpm  //OpenNebula网页使用界面
</span><span class='line'>opennebula-context-4.4.0-1.x86_64.rpm   //context组件
</span></code></pre></td></tr></table></div></figure>




<h2 id="server">Server端安装和配置</h2>


<p>为解决一些依赖关系，安装之前可以激活epel源，因为测试为CentOS6.4，因此激活方式如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># rpm -ivh http://dl.fedoraproject.org/pub/epel/6Server/x86_64/epel-release-6-8.noarch.rpm</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果下载的是OpenNebula软件包，则进入解压目录，安装方式如下 [以下安装为组成Server端最基本的软件]：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum localinstall opennebula-server-4.4.0-1.x86_64.rpm  \</span>
</span><span class='line'>opennebula-4.4.0-1.x86_64.rpm opennebula-common-4.4.0-1.x86_64.rpm <span class="se">\</span>
</span><span class='line'>opennebula-ruby-4.4.0-1.x86_64.rpm opennebula-sunstone-4.4.0-1.x86_64 -y
</span></code></pre></td></tr></table></div></figure>


<p>如果使用OpenNebula的源，安装如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install opennebula-server opennebula-sunstone -y</span>
</span></code></pre></td></tr></table></div></figure>


<p>安装完成之后创建如下用户以及目录文件：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep oneadmin /etc/passwd</span>
</span><span class='line'>oneadmin:x:9869:9869::/var/lib/one:/bin/bash
</span><span class='line'><span class="c"># ls -ld /etc/one/  //OpenNebula相关配置文件所在目录</span>
</span><span class='line'>drwxr-x---. 11 root oneadmin 4096 Aug 20 11:35 /etc/one/
</span><span class='line'><span class="c"># ls /etc/init.d/opennebula*</span>
</span><span class='line'>/etc/init.d/opennebula  /etc/init.d/opennebula-occi  /etc/init.d/opennebula-sunstone
</span><span class='line'><span class="c"># ls -ld /var/log/one/</span>
</span><span class='line'>drwxr-x---. 2 oneadmin oneadmin 4096 Jul 25 01:13 /var/log/one/
</span></code></pre></td></tr></table></div></figure>


<p>默认OpenNebula数据存储使用sqlite，如果需要使用MySQL，则需要做如下操作：<br/>
<strong>1.</strong>  创建相关数据库：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql&gt; create database opennebula;
</span><span class='line'>Query OK, 1 row affected <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; grant all privileges on opennebula.* to oneadmin@<span class="s1">&#39;localhost&#39;</span> identified by <span class="s1">&#39;oneadmin&#39;</span>;
</span><span class='line'>Query OK, 0 rows affected <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; flush privileges;
</span><span class='line'>Query OK, 0 rows affected <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>2.</strong>  修改配置文件如下 [用户、端口、密码、库名和实际情况对应修改]：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># vim /etc/one/oned.conf</span>
</span><span class='line'>… …
</span><span class='line'><span class="c">#DB = [ backend = &quot;sqlite&quot; ]</span>
</span><span class='line'><span class="c"># Sample configuration for MySQL</span>
</span><span class='line'><span class="nv">DB</span> <span class="o">=</span> <span class="o">[</span> <span class="nv">backend</span> <span class="o">=</span> <span class="s2">&quot;mysql&quot;</span>,
</span><span class='line'>       <span class="nv">server</span>  <span class="o">=</span> <span class="s2">&quot;localhost&quot;</span>,
</span><span class='line'>       <span class="nv">port</span>    <span class="o">=</span> 3306,
</span><span class='line'>       <span class="nv">user</span>    <span class="o">=</span> <span class="s2">&quot;oneadmin&quot;</span>,
</span><span class='line'>       <span class="nv">passwd</span>  <span class="o">=</span> <span class="s2">&quot;oneadmin&quot;</span>,
</span><span class='line'>       <span class="nv">db_name</span> <span class="o">=</span> <span class="s2">&quot;opennebula&quot;</span> <span class="o">]</span>
</span><span class='line'>… …
</span></code></pre></td></tr></table></div></figure>


<p>修改sunstone默认监听IP:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep &#39;:host&#39; /etc/one/sunstone-server.conf </span>
</span><span class='line'>:host: 127.0.0.1
</span><span class='line'><span class="c"># sed -i &#39;/:host/s/127.0.0.1/192.168.80.130/g&#39; /etc/one/sunstone-server.conf</span>
</span><span class='line'><span class="c"># grep &#39;:host&#39; /etc/one/sunstone-server.conf </span>
</span><span class='line'>:host: 192.168.80.130
</span></code></pre></td></tr></table></div></figure>


<p>启动相关服务:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># /etc/init.d/opennebula start</span>
</span><span class='line'><span class="c"># /etc/init.d/opennebula-sunstone start</span>
</span><span class='line'><span class="c"># lsof -i:9869</span>
</span><span class='line'>COMMAND   PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
</span><span class='line'>ruby    22266 oneadmin    6u  IPv4 106746      0t0  TCP 192.168.80.130:9869 <span class="o">(</span>LISTEN<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>修改datastore:</p>

<p>OpenNebula默认用的是Shared Transfer Driver，这种模式比较适合快速部署和热迁移，只是要配置网络文件系统。如果没有网络文件系统，不想做热迁移，那么可以换成SSH Transfer Driver测试部署。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>onedatastore list
</span><span class='line'>  ID NAME                SIZE AVAIL CLUSTER      IMAGES TYPE DS       TM
</span><span class='line'>   0 system                0M -     -                 0 sys  -        shared
</span><span class='line'>   1 default            98.4G 85%   -                 1 img  fs       shared
</span><span class='line'>   2 files              98.4G 85%   -                 0 fil  fs       ssh
</span><span class='line'><span class="nv">$ </span>onedatastore update 1
</span><span class='line'><span class="nv">CLONE_TARGET</span><span class="o">=</span><span class="s2">&quot;SYSTEM&quot;</span>
</span><span class='line'><span class="nv">DISK_TYPE</span><span class="o">=</span><span class="s2">&quot;FILE&quot;</span>
</span><span class='line'><span class="nv">DS_MAD</span><span class="o">=</span><span class="s2">&quot;fs&quot;</span>
</span><span class='line'><span class="nv">LN_TARGET</span><span class="o">=</span><span class="s2">&quot;SYSTEM&quot;</span>
</span><span class='line'><span class="nv">TM_MAD</span><span class="o">=</span><span class="s2">&quot;ssh&quot;</span>
</span><span class='line'><span class="nv">TYPE</span><span class="o">=</span><span class="s2">&quot;IMAGE_DS&quot;</span>
</span><span class='line'><span class="nv">$ </span>onedatastore list
</span><span class='line'>  ID NAME                SIZE AVAIL CLUSTER      IMAGES TYPE DS       TM
</span><span class='line'>   0 system                0M -     -                 0 sys  -        shared
</span><span class='line'>   1 default            98.4G 85%   -                 1 img  fs       ssh
</span><span class='line'>   2 files              98.4G 85%   -                 0 fil  fs       ssh
</span></code></pre></td></tr></table></div></figure>


<p>修改过程产生如下错误：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>onedatastore update 1
</span><span class='line'>Editor not defined
</span></code></pre></td></tr></table></div></figure>


<p>这是因为如下原因，CentOS默认vi位置是/bin/vi，添加相关链接即可</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep -i editor_path= /usr/lib/one/ruby/cli/one_helper.rb</span>
</span><span class='line'><span class="nv">EDITOR_PATH</span><span class="o">=</span><span class="s1">&#39;/usr/bin/vi&#39;</span>
</span><span class='line'><span class="c"># ln -s /bin/vi /usr/bin/vi</span>
</span></code></pre></td></tr></table></div></figure>


<p>用户名和密码通过以下方式获得：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /var/lib/one/.one/one_auth </span>
</span><span class='line'>oneadmin:cd24c3a59c9fd8a7ab853b10247e8147
</span></code></pre></td></tr></table></div></figure>


<p><strong>注</strong>：测试过程中因为测试环境服务端时间不对，导致cookie被忽略，OpenNebula Sunstone选择Keep me logged in一直登陆不上或者直接登陆很快退出，寻找原因花了很长时间，最后调整到正确时间，登陆显示ok。P.S: 时间是一个非常容易被我们忽略的问题，切记切记!</p>

<p>完成以上步骤之后，浏览器登陆 <a href="http://ip:9869">http://ip:9869</a> 即可</p>

<h2 id="node_server">节点端安装配置</h2>


<p>软件包下载见Server端安装章节，节点只需要安装以下两个软件</p>

<pre><code>opennebula-node-kvm-4.4.0-1.x86_64.rpm  
opennebula-common-4.4.0-1.x86_64.rpm
</code></pre>

<p>yum安装以上软件即可，安装过程同时会安装虚拟化相关组件，包括bridge-utils、libvirt、qemu-kvm、qemu-img等。</p>

<p>桥接网络：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /etc/sysconfig/network-scripts/ifcfg-eth0 </span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span>eth0
</span><span class='line'><span class="nv">TYPE</span><span class="o">=</span>Ethernet
</span><span class='line'><span class="nv">ONBOOT</span><span class="o">=</span>yes
</span><span class='line'><span class="nv">BRIDGE</span><span class="o">=</span>br0
</span><span class='line'><span class="nv">NAME</span><span class="o">=</span><span class="s2">&quot;System eth0&quot;</span>
</span><span class='line'><span class="c"># cat /etc/sysconfig/network-scripts/ifcfg-br0</span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span>br0
</span><span class='line'><span class="nv">ONBOOT</span><span class="o">=</span>yes
</span><span class='line'><span class="nv">TYPE</span><span class="o">=</span>Bridge
</span><span class='line'><span class="nv">BOOTPROTO</span><span class="o">=</span>static
</span><span class='line'><span class="nv">IPADDR</span><span class="o">=</span>192.168.80.131
</span><span class='line'><span class="nv">NETMASK</span><span class="o">=</span>255.255.255.0
</span><span class='line'><span class="nv">GATEWAY</span><span class="o">=</span>192.168.80.2
</span></code></pre></td></tr></table></div></figure>


<p>修改之后，重启网络并查看确认：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># service network restart</span>
</span><span class='line'><span class="c"># brctl show</span>
</span><span class='line'>bridge name bridge id       STP enabled interfaces
</span><span class='line'>br0     8000.000c2942e561   no      eth0
</span></code></pre></td></tr></table></div></figure>


<p>修改/etc/libvirt/qemu.conf的相关配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">user</span>  <span class="o">=</span> <span class="s2">&quot;oneadmin&quot;</span>
</span><span class='line'><span class="nv">group</span> <span class="o">=</span> <span class="s2">&quot;oneadmin&quot;</span>
</span><span class='line'><span class="nv">dynamic_ownership</span> <span class="o">=</span> 0
</span></code></pre></td></tr></table></div></figure>


<p>修改/etc/libvirt/libvirtd.conf相关配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">listen_tcp</span> <span class="o">=</span> 1          //OpenNebula使用libvirt提供的TCP协议
</span><span class='line'><span class="nv">listen_tls</span> <span class="o">=</span> 0
</span></code></pre></td></tr></table></div></figure>


<p>修改/etc/sysconfig/libvirtd开启监听选项：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">LIBVIRTD_ARGS</span><span class="o">=</span><span class="s2">&quot;--listen&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>启动libvirtd服务：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># /etc/init.d/libvirtd start</span>
</span><span class='line'><span class="c"># netstat -tulnp | grep libvirt</span>
</span><span class='line'>tcp        0      0 0.0.0.0:16509               0.0.0.0:*                   LISTEN      2664/libvirtd
</span></code></pre></td></tr></table></div></figure>


<p>ssh无密码登陆：</p>

<p>ssh使用公钥认证无密码登陆这个比较简单，顺带也提一下，方法如下：</p>

<p><strong>管理端</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># su - oneadmin</span>
</span><span class='line'><span class="nv">$ </span>cat ~/.ssh/config     //增加超时时间，不询问直接添加主机到known_hosts文件
</span><span class='line'>ConnectTimeout 5
</span><span class='line'>Host *
</span><span class='line'>    StrictHostKeyChecking no
</span><span class='line'>    UserKnownHostsFile /dev/null
</span></code></pre></td></tr></table></div></figure>


<p><strong>节点端</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># su - oneadmin</span>
</span><span class='line'><span class="nv">$ </span>vim .ssh/authorized_keys          //把管理端ssh公钥加入节点.ssh/authorized_keys文件
</span><span class='line'><span class="nv">$ </span>chmod 400 .ssh/authorized_keys
</span></code></pre></td></tr></table></div></figure>


<p>如此，Server端的oneadmin用户就可以无密码登陆节点oneadmin了。</p>

<h2 id="node_add">添加节点</h2>


<p>节点如此安装软件和配置之后便可以在Server端添加了，可以使用web添加，也可以使用命令添加。关于web界面的添加可以参考本人共享的pdf文档，这里不作具体的介绍，只介绍命令添加。</p>

<h3 id="onehost">onehost命令</h3>


<p>使用命令行添加主机也比较简单，这里使用的命令是<strong>onehost</strong></p>

<p>使用onehost命令删除之前web创建的主机，如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>su - oneadmin
</span><span class='line'><span class="nv">$ </span>onehost list
</span><span class='line'>  ID NAME            CLUSTER   RVM      ALLOCATED_CPU      ALLOCATED_MEM STAT
</span><span class='line'>   1 192.168.80.131  -           0       0 / 400 <span class="o">(</span>0%<span class="o">)</span>     0K / 3.7G <span class="o">(</span>0%<span class="o">)</span> on
</span><span class='line'><span class="nv">$ </span>onehost delete 1      //删除主机，可以是ID也可以是NAME
</span><span class='line'><span class="nv">$ </span>onehost list
</span><span class='line'>  ID NAME            CLUSTER   RVM      ALLOCATED_CPU      ALLOCATED_MEM static
</span></code></pre></td></tr></table></div></figure>


<p>当然删除之后我们还是需要再创建一遍，虽然很无聊，But你懂的，如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>onehost create 192.168.80.131 --im kvm --vm kvm --net dummy
</span><span class='line'>ID: 2
</span><span class='line'><span class="nv">$ </span>onehost list
</span><span class='line'>  ID NAME            CLUSTER   RVM      ALLOCATED_CPU      ALLOCATED_MEM STAT
</span><span class='line'>   2 192.168.80.131  -           0       0 / 400 <span class="o">(</span>0%<span class="o">)</span>     0K / 3.7G <span class="o">(</span>0%<span class="o">)</span> on
</span></code></pre></td></tr></table></div></figure>


<pre><code>--im/-i:信息管理driver. 可选: kvm, xen, vmware, ec2, ganglia, dummy.
--vm/-v: 虚拟化管理driver. 可选: kvm, xen, vmware, ec2, dummy.
--net/-n: 虚拟网络driver. 可选: 802.1Q,dummy,ebtables,fw,ovswitch,vmware.
</code></pre>

<p>查看主机的详细信息 <strong>onehost show</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>onehost show 2
</span><span class='line'>HOST 2 INFORMATION
</span><span class='line'>ID                    : 2
</span><span class='line'>NAME                  : 192.168.80.131
</span><span class='line'>CLUSTER               : -
</span><span class='line'>STATE                 : MONITORED
</span><span class='line'>IM_MAD                : kvm
</span><span class='line'>VM_MAD                : kvm
</span><span class='line'>VN_MAD                : dummy
</span><span class='line'>LAST MONITORING TIME  : 11/29 22:19:21
</span><span class='line'>
</span><span class='line'>HOST SHARES
</span><span class='line'>TOTAL MEM             : 3.7G
</span><span class='line'>USED MEM <span class="o">(</span>REAL<span class="o">)</span>       : 111M
</span><span class='line'>USED MEM <span class="o">(</span>ALLOCATED<span class="o">)</span>  : 0K
</span><span class='line'>TOTAL CPU             : 400
</span><span class='line'>USED CPU <span class="o">(</span>REAL<span class="o">)</span>       : 0
</span><span class='line'>USED CPU <span class="o">(</span>ALLOCATED<span class="o">)</span>  : 0
</span><span class='line'>RUNNING VMS           : 0
</span><span class='line'>
</span><span class='line'>… …
</span></code></pre></td></tr></table></div></figure>


<p>通过-x选项还可以以xml的格式显示主机相关信息</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>onehost show -x 2
</span><span class='line'>&lt;HOST&gt;
</span><span class='line'>  &lt;ID&gt;2&lt;/ID&gt;
</span><span class='line'>  &lt;NAME&gt;192.168.80.131&lt;/NAME&gt;
</span><span class='line'>  &lt;STATE&gt;2&lt;/STATE&gt;
</span><span class='line'>  &lt;IM_MAD&gt;kvm&lt;/IM_MAD&gt;
</span><span class='line'>  &lt;VM_MAD&gt;kvm&lt;/VM_MAD&gt;
</span><span class='line'>  &lt;VN_MAD&gt;dummy&lt;/VN_MAD&gt;
</span><span class='line'>  &lt;LAST_MON_TIME&gt;1385735001&lt;/LAST_MON_TIME&gt;
</span><span class='line'>  &lt;CLUSTER_ID&gt;-1&lt;/CLUSTER_ID&gt;
</span><span class='line'>  &lt;CLUSTER/&gt;
</span><span class='line'>  &lt;HOST_SHARE&gt;
</span><span class='line'>    &lt;DISK_USAGE&gt;0&lt;/DISK_USAGE&gt;
</span><span class='line'>    &lt;MEM_USAGE&gt;0&lt;/MEM_USAGE&gt;
</span><span class='line'>    &lt;CPU_USAGE&gt;0&lt;/CPU_USAGE&gt;
</span><span class='line'>    &lt;MAX_DISK&gt;0&lt;/MAX_DISK&gt;
</span><span class='line'>    &lt;MAX_MEM&gt;3916984&lt;/MAX_MEM&gt;
</span><span class='line'>    &lt;MAX_CPU&gt;400&lt;/MAX_CPU&gt;
</span><span class='line'>    &lt;FREE_DISK&gt;0&lt;/FREE_DISK&gt;
</span><span class='line'>    &lt;FREE_MEM&gt;3803128&lt;/FREE_MEM&gt;
</span><span class='line'>    &lt;FREE_CPU&gt;399&lt;/FREE_CPU&gt;
</span><span class='line'>    &lt;USED_DISK&gt;0&lt;/USED_DISK&gt;
</span><span class='line'>    &lt;USED_MEM&gt;113856&lt;/USED_MEM&gt;
</span><span class='line'>    &lt;USED_CPU&gt;0&lt;/USED_CPU&gt;
</span><span class='line'>    &lt;RUNNING_VMS&gt;0&lt;/RUNNING_VMS&gt;
</span><span class='line'>  &lt;/HOST_SHARE&gt;
</span><span class='line'>… …
</span></code></pre></td></tr></table></div></figure>


<p>onehost还有两个选项,disable和enable，disable表示不再监控该物理主机，但是不影响正在运行的虚拟机，enable表示开启监控</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>onehost disable 0
</span><span class='line'><span class="nv">$ </span>onehost <span class="nb">enable </span>0
</span></code></pre></td></tr></table></div></figure>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[qemu-kvm桥接网络]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/12/10/kvm-tap/"/>
    <updated>2013-12-10T22:22:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/12/10/kvm-tap</id>
    <content type="html"><![CDATA[<!--more-->


<h2>手动桥接</h2>

<p>qemu-kvm安装或者启动虚拟系统的时候如果需要和外界通信，那么就要设置网络桥接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/usr/libexec/qemu-kvm -m 1024 <span class="se">\</span>
</span><span class='line'>-drive <span class="nv">file</span><span class="o">=</span>/data/images/CentOS6_4.qcow2,if<span class="o">=</span>virtio <span class="se">\</span>
</span><span class='line'>-net nic,model<span class="o">=</span>virtio -net tap,script<span class="o">=</span>no -nographic -vnc :0
</span></code></pre></td></tr></table></div></figure>


<p>使用<code>-net tap,script=no</code>方式启动之后，系统会生成tapX的虚拟网卡,默认是DOWN状态的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ip link show dev tap0</span>
</span><span class='line'>37: tap0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN qlen 500
</span><span class='line'>    link/ether d2:b0:af:7b:23:0f brd ff:ff:ff:ff:ff:ff
</span></code></pre></td></tr></table></div></figure>


<p>如果想和外界通信，可以手动执行生效，如下所示当前与br0桥接的设备，并没有tap相关的网卡</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># brctl show br0</span>
</span><span class='line'>bridge name   bridge id       STP enabled interfaces
</span><span class='line'>br0       8000.b8975a626020   no      eth0
</span><span class='line'>                          vnet0
</span><span class='line'>                          vnet1
</span></code></pre></td></tr></table></div></figure>


<p>我们需要把tap0也桥接到br0下以便和外界通信，方法如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ip link set tap0 up        //使tap0状态变为up</span>
</span><span class='line'><span class="c"># brctl addif br0 tap0        //桥接tap0到br0</span>
</span><span class='line'><span class="c"># brctl show br0          </span>
</span><span class='line'>bridge name   bridge id       STP enabled interfaces
</span><span class='line'>br0       8000.b8975a626020   no      eth0
</span><span class='line'>                          tap0
</span><span class='line'>                          vnet0
</span><span class='line'>                          vnet1
</span></code></pre></td></tr></table></div></figure>


<p><code>brctl delif br0 tap0</code>删除桥接网络，qemu-kvm工具在客户机关闭时会自动解除TAP设备的bridge绑定，所以这一步无需操作</p>

<h2>脚本实现</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/usr/libexec/qemu-kvm -m 1024 <span class="se">\</span>
</span><span class='line'>-drive <span class="nv">file</span><span class="o">=</span>/data/images/CentOS6_4.qcow2,if<span class="o">=</span>virtio <span class="se">\</span>
</span><span class='line'>-net nic,model<span class="o">=</span>virtio -net tap,script<span class="o">=</span>/tmp/qemu-ifup.sh -nographic -vnc :0
</span></code></pre></td></tr></table></div></figure>


<p>如上<code>tap,script=/tmp/qemu-ifup.sh</code>指定script网络配置启动前启动脚本，脚本内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /tmp/qemu-ifup.sh </span>
</span><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 桥接网络设备</span>
</span><span class='line'><span class="nv">switch</span><span class="o">=</span>br0
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -n <span class="nv">$1</span> <span class="o">]</span>; <span class="k">then</span>          //<span class="nv">$1</span>为qemu-kvm传递值，这里是tap
</span><span class='line'>    ip link <span class="nb">set</span> <span class="nv">$1</span> up
</span><span class='line'>    brctl addif <span class="k">${</span><span class="nv">switch</span><span class="k">}</span> <span class="nv">$1</span>
</span><span class='line'>    <span class="nb">exit </span>0
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="k">   </span><span class="nb">echo</span> <span class="s2">&quot;no interface!&quot;</span>
</span><span class='line'>   <span class="nb">exit </span>1
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<p>如此，便不需要每次手动添加了</p>

<p>这部分内容的理解主要是 <a href="http://smilejay.com/2012/08/kvm-bridge-networking/">KVM使用网桥模式</a> 这篇文章，顺便推荐此博主的《KVM虚拟化技术：实战与原理解析》一书，对系统的学习KVM很有帮助</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[svn and git Server备忘]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/12/09/svn-git/"/>
    <updated>2013-12-09T13:58:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/12/09/svn-git</id>
    <content type="html"><![CDATA[<h2><u>Git Server with ssh</u></h2>

<!--more-->


<ul>
<li>Server</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>useradd -s /usr/bin/git-shell git   //创建git用户
</span><span class='line'>git init --bare /home/git/testrepo  //初始化名为testrepo，Server端操作
</span><span class='line'>mkdir /home/git/.ssh -p
</span><span class='line'>vim .ssh/authorized_keys            //加入客户端ssh公钥，设置ssh公钥认证
</span><span class='line'>chmod 700 /home/git/.ssh/
</span><span class='line'>chmod 400 /home/git/.ssh/authorized_keys
</span><span class='line'>chown git:git -R /home/git
</span></code></pre></td></tr></table></div></figure>


<p>注意：如果是root用户执行的命令，需要修改权限如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chow -R git:git testrepo
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Client</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone git@sevrer_ip:/home/git/testrepo  //克隆repo
</span></code></pre></td></tr></table></div></figure>


<p>具体操作</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>testrepo                         //进入本地版本库
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;hello&quot;</span> &gt;&gt; <span class="nb">test</span>                //新建测试文件
</span><span class='line'>git add <span class="nb">test</span>                        //添加到git缓存
</span><span class='line'>git commit -m <span class="s2">&quot;first commit&quot;</span> <span class="nb">test</span>   //本地提交
</span><span class='line'>git push -u origin master           //提交给远程服务器
</span><span class='line'>git pull                            //客户端拉取数据
</span></code></pre></td></tr></table></div></figure>


<h2><u>Svn Server with apache &amp;&amp; ldap</u></h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install subversion mod_dav_svn -y
</span></code></pre></td></tr></table></div></figure>


<p>yum安装后会生成subversion.conf并添加相应模块配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep LoadModule /etc/httpd/conf.d/subversion.conf </span>
</span><span class='line'>LoadModule dav_svn_module     modules/mod_dav_svn.so
</span><span class='line'>LoadModule authz_svn_module   modules/mod_authz_svn.so
</span></code></pre></td></tr></table></div></figure>


<p>svn创建库</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>svnadmin create --fs-type fsfs /var/www/svn
</span><span class='line'>chown apache:apache -R /var/www/svn
</span></code></pre></td></tr></table></div></figure>


<p>设置ldap认证</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep -vE &#39;^$|^#&#39; /etc/httpd/conf.d/subversion.conf </span>
</span><span class='line'>LoadModule dav_svn_module     modules/mod_dav_svn.so
</span><span class='line'>LoadModule authz_svn_module   modules/mod_authz_svn.so
</span><span class='line'>&lt;Location /svn&gt;
</span><span class='line'>    DAV svn
</span><span class='line'>    SVNPath /var/www/svn
</span><span class='line'>    AuthBasicProvider ldap
</span><span class='line'>    AuthType Basic
</span><span class='line'>    AuthzLDAPAuthoritative off
</span><span class='line'>    AuthName <span class="s2">&quot;Please provide your windows login credentials to continue.&quot;</span>
</span><span class='line'>    AuthLDAPURL <span class="s2">&quot;ldap://ldap_ip/ou=users,ou=test,dc=intranet,dc=test,dc=com?sAMAccountName&quot;</span> NONE
</span><span class='line'>    AuthLDAPBindDN <span class="s2">&quot;test@intranet.test.com&quot;</span>
</span><span class='line'>    AuthLDAPBindPassword password
</span><span class='line'>    require valid-user
</span><span class='line'>&lt;/Location&gt;
</span></code></pre></td></tr></table></div></figure>


<p>启动apache</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>service httpd start
</span></code></pre></td></tr></table></div></figure>


<p>浏览器登陆<br/>
<a href="http://svn_ip/svn">http://svn_ip/svn</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenNebula添加节点]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/11/07/opennubula-node/"/>
    <updated>2013-11-07T15:14:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/11/07/opennubula-node</id>
    <content type="html"><![CDATA[<h3>需求</h3>

<p>The hosts must have a working installation of KVM, that usually requires:</p>

<ul>
<li>CPU with VT extensions</li>
<li>libvirt >= 0.4.0</li>
<li>kvm kernel modules (kvm.ko, kvm-{intel,amd}.ko). Available from kernel 2.6.20 onwards.</li>
<li>the qemu user-land tools</li>
</ul>


<!--more-->


<p>笔者测试所用为VMware Workstation，除本身物理机支持并开启虚拟化外，Workstation也要开启相关配置[ 设置&#8211;处理器，查看是否开启 ]</p>

<h3>节点软件安装</h3>

<p>可以参见<a href="http://kumu-linux.github.io/blog/2013/08/22/opennebula-install/">OpenNebula在CentOS6.4安装备忘</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install qemu-kvm qemu-img libvirt ruby \     </span>
</span><span class='line'>libvirt-python python-virtinst libvirt-client
</span><span class='line'><span class="c"># yum install opennebula-common-4.2.0-1.x86_64.rpm \</span>
</span><span class='line'>opennebula-node-kvm-4.2.0-1.x86_64.rpm
</span></code></pre></td></tr></table></div></figure>


<h3>节点配置</h3>

<h4>启动kvm</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># /etc/init.d/libvirtd start</span>
</span></code></pre></td></tr></table></div></figure>


<h4>桥接网络</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install bridge-utils -y</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>桥接实例</strong>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /etc/sysconfig/network-scripts/ifcfg-eth0 </span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span>eth0
</span><span class='line'><span class="nv">TYPE</span><span class="o">=</span>Ethernet
</span><span class='line'><span class="nv">ONBOOT</span><span class="o">=</span>yes
</span><span class='line'><span class="nv">NAME</span><span class="o">=</span><span class="s2">&quot;System eth0&quot;</span>
</span><span class='line'><span class="nv">BRIDGE</span><span class="o">=</span><span class="s2">&quot;br0&quot;</span>
</span><span class='line'><span class="c"># cat /etc/sysconfig/network-scripts/ifcfg-br0</span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span><span class="s2">&quot;br0&quot;</span>
</span><span class='line'><span class="nv">TYPE</span><span class="o">=</span><span class="s2">&quot;Bridge&quot;</span>  <span class="c"># 注意大小写</span>
</span><span class='line'><span class="nv">BOOTPROTO</span><span class="o">=</span><span class="s2">&quot;static&quot;</span>
</span><span class='line'><span class="nv">IPADDR</span><span class="o">=</span>192.168.80.131
</span><span class='line'><span class="nv">NETMASK</span><span class="o">=</span>255.255.255.0
</span><span class='line'><span class="nv">GATEWAY</span><span class="o">=</span>192.168.80.2
</span><span class='line'><span class="nv">ONBOOT</span><span class="o">=</span><span class="s2">&quot;yes&quot;</span>
</span><span class='line'><span class="nv">DELAY</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>修改完毕，重启网络</p>

<h4>相关配置修改</h4>

<p>修改/etc/libvirt/qemu.conf的相关配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep -vE &#39;^($|#)&#39; /etc/libvirt/qemu.conf</span>
</span><span class='line'><span class="nv">user</span>  <span class="o">=</span> <span class="s2">&quot;oneadmin&quot;</span>
</span><span class='line'><span class="nv">group</span> <span class="o">=</span> <span class="s2">&quot;oneadmin&quot;</span>
</span><span class='line'><span class="nv">dynamic_ownership</span> <span class="o">=</span> 0
</span></code></pre></td></tr></table></div></figure>


<p>修改/etc/libvirt/libvirtd.conf相关配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">listen_tcp</span> <span class="o">=</span> 1
</span><span class='line'><span class="nv">listen_tls</span> <span class="o">=</span> 0
</span><span class='line'><span class="nv">mdns_adv</span> <span class="o">=</span> 0
</span><span class='line'><span class="nv">unix_sock_group</span> <span class="o">=</span> <span class="s2">&quot;oneadmin&quot;</span>
</span><span class='line'><span class="nv">unix_sock_ro_perms</span> <span class="o">=</span> <span class="s2">&quot;0777&quot;</span>
</span><span class='line'><span class="nv">unix_sock_rw_perms</span> <span class="o">=</span> <span class="s2">&quot;0777&quot;</span>
</span><span class='line'><span class="nv">auth_unix_ro</span> <span class="o">=</span> <span class="s2">&quot;none&quot;</span>
</span><span class='line'><span class="nv">auth_unix_rw</span> <span class="o">=</span> <span class="s2">&quot;none&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>修改/etc/sysconfig/libvirtd相关配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">LIBVIRTD_ARGS</span><span class="o">=</span><span class="s2">&quot;--listen&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>启动libvirtd服务[安全起见可以只监听内网IP]：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># /etc/init.d/libvirtd restart</span>
</span><span class='line'><span class="c"># netstat -tulnp | grep libvirtd</span>
</span><span class='line'>tcp        0      0 0.0.0.0:16509     0.0.0.0:*       LISTEN      50818/libvirtd
</span><span class='line'>tcp        0      0 :::16509          :::*            LISTEN      50818/libvirtd
</span></code></pre></td></tr></table></div></figure>


<p>修改 /etc/sudoers 文件，最后一行加上：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>oneadmin <span class="nv">ALL</span><span class="o">=(</span>root<span class="o">)</span>NOPASSWD:ALL
</span></code></pre></td></tr></table></div></figure>


<p>CentOS系统的sudo选项requiretty是默认打开的，远程执行命令时，ssh默认不会分配tty。没有tty，sudo就无法在获取密码时关闭回显。使用-tt选项强制SSH分配tty（使用两次-tt）。另一方面，sudoers中的Defaults选项requiretty要求只有拥有tty的用户才能使用sudo。可以通过visudo编辑配置文件，禁用这个选项：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#Defaults    requiretty</span>
</span></code></pre></td></tr></table></div></figure>


<p>添加<code>oneadmin</code>用户和OpenNebula Server主机ssh公钥认证，使得OpenNebula Server主机<code>oneadmin</code>用户可以使用公钥无密码登陆，关于ssh密钥配置这里不再进一步说明。</p>

<h4>其它配置</h4>

<p>另外OpenNebula的脚本要用到/sbin/brctl，而CentOS的路径是/usr/sbin/brctl，添加软链接：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -s /usr/sbin/brctl /sbin/brctl
</span></code></pre></td></tr></table></div></figure>


<p>还要用到/usr/bin/kvm，而CentOS没有链接，需要设置软链接：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -s /usr/libexec/qemu-kvm /usr/bin/kvm
</span></code></pre></td></tr></table></div></figure>


<p>最后在Web上添加host主机节点即可，状态显示为<code>on</code>则表示添加成功。</p>

<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修改CentOS/RHEL rsync监听地址]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/11/07/rsync/"/>
    <updated>2013-11-07T10:35:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/11/07/rsync</id>
    <content type="html"><![CDATA[<p>为了安全起见，服务器不对外提供的服务尽量不监听外网地址的，rsync也不例外。由于CentOS/RHEL中rpm安装的rsync为非独立进程，需要依赖xinetd进程。笔者一开始尝试修改rsync的配置文件<code>rsyncd.conf</code>中加入<code>address = 192.168.80.128</code>，重启xinetd服务，发现修改没有生效。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>...
</span><span class='line'>tcp        0      0 0.0.0.0:873                 0.0.0.0:*     ...
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>因为CentOS/RHEL是依赖xinetd的，所以我就想到了xinetd配置文件<code>/etc/xinetd.conf</code>，发现选项<code># bind       =</code>，于是修改如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>...
</span><span class='line'>  <span class="nb">bind</span>        <span class="o">=</span> 192.168.80.128 <span class="c"># 此处ip填写主机本地ip即可</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>修改完成保存，重启xinetd程序，修改生效</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>...
</span><span class='line'>tcp        0      0 192.168.80.128:873               0.0.0.0:*                   LISTEN      25967/xinetd
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>当然你也可以直接不依赖xinetd修改监听地址，直接使用命令启动rsync，如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rsync --address<span class="o">=</span>192.168.80.128 --config<span class="o">=</span>/etc/rsyncd.conf --daemon
</span></code></pre></td></tr></table></div></figure>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[paramiko解析AES加密算法]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/11/05/paramiko/"/>
    <updated>2013-11-05T21:01:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/11/05/paramiko</id>
    <content type="html"><![CDATA[<blockquote><p>对等加密（Reciprocal cipher）又称为对称密钥加密（Symmetric-key algorithm）、对称加密、私钥加密、共享密钥加密，是密码学中的一类加密算法。该类密码的加密算法是它自己本身的逆反函数，所以其解密算法等同于加密算法，也就是说，要还原对等加密的密文，套用加密同样的算法即可得到明文。换句话说，若参数（或密钥）合适的话，两次连续的对等加密运算后会回复原始文字。在数学上，这有时称之为对合。在实际应用中，体现为加密和解密使用同一个密钥，或者知道一方密钥能够轻易计算出另一方密钥。常见的对称加密算法有DES、3DES、AES、Blowfish、IDEA、RC4、RC5、RC6。</p></blockquote>

<!--more-->


<p>在说明问题之前，引用维基百科对对称加密的一个说明。今天使用paramiko解析DSA密钥时出现如下ERROR：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>... ...
</span><span class='line'>paramiko.SSHException: Unknown private key cipher <span class="s2">&quot;AES-128-CBC&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>DSA密钥内容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>-----BEGIN DSA PRIVATE KEY-----
</span><span class='line'>Proc-Type: 4,ENCRYPTED
</span><span class='line'>DEK-Info: AES-128-CBC,381624AF862F1717C46EF898D9E1FA92
</span><span class='line'>
</span><span class='line'>... ...
</span><span class='line'>OCGYNLsO68FToi8qJEP1DI9Jvk6tpU3y4ebBqSZnX7jr1M5+Hj5rfMqv7+kp3T4R
</span><span class='line'>314ae9Ism9AXLIK2miTAcvbexZpbcesadqvo69DMsfhSmKKJYABK3eRYaDlUwkzN
</span><span class='line'>... ...
</span><span class='line'>-----END DSA PRIVATE KEY-----
</span></code></pre></td></tr></table></div></figure>


<p>使用<code>ssh-keygen -t rsa</code>测试没有问题，后来得知之前的DSA密钥时使用Secure CRT生成的，查了相关AES算法加密，发现paramiko默认并不支持AES算法，所以出现之前的<code>Unknown Error</code>错误。后来借助Google找到了相关的答案，<a href="http://comments.gmane.org/gmane.comp.python.paramiko/479">Unknown private key cipher AES-128-CBC</a> ，顺便记录下。</p>

<p>解决方法需要修改<code>paramiko</code>代码，打开<code>/usr/lib/pythonX.X/site-packages/paramiko/pkey.py</code>修改如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">...</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">DES3</span><span class="p">,</span> <span class="n">AES</span>
</span><span class='line'>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>    <span class="n">_CIPHER_TABLE</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;AES-128-CBC&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;cipher&#39;</span><span class="p">:</span> <span class="n">AES</span><span class="p">,</span> <span class="s">&#39;keysize&#39;</span><span class="p">:</span> <span class="mi">16</span><span class="p">,</span> <span class="s">&#39;blocksize&#39;</span><span class="p">:</span> <span class="mi">16</span><span class="p">,</span> <span class="s">&#39;mode&#39;</span><span class="p">:</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_CBC</span> <span class="p">},</span>
</span><span class='line'>        <span class="s">&#39;DES-EDE3-CBC&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;cipher&#39;</span><span class="p">:</span> <span class="n">DES3</span><span class="p">,</span> <span class="s">&#39;keysize&#39;</span><span class="p">:</span> <span class="mi">24</span><span class="p">,</span> <span class="s">&#39;blocksize&#39;</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span> <span class="s">&#39;mode&#39;</span><span class="p">:</span> <span class="n">DES3</span><span class="o">.</span><span class="n">MODE_CBC</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上修改，保存之后退出即可。</p>

<p>顺便附带我的paramiko测试代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">paramiko</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">paramiko_ssh</span><span class="p">(</span><span class="n">hostip</span><span class="p">,</span> <span class="n">cmd</span><span class="p">):</span>
</span><span class='line'>    <span class="n">ssh</span> <span class="o">=</span> <span class="n">paramiko</span><span class="o">.</span><span class="n">SSHClient</span><span class="p">()</span>
</span><span class='line'>    <span class="n">pkey_file</span> <span class="o">=</span> <span class="s">&#39;/root/.ssh/dsa&#39;</span>
</span><span class='line'>    <span class="n">pkey_pass</span> <span class="o">=</span> <span class="s">&#39;123321&#39;</span>
</span><span class='line'>    <span class="n">ssh_port</span> <span class="o">=</span> <span class="mi">22</span>
</span><span class='line'>    <span class="n">ssh_user</span> <span class="o">=</span> <span class="s">&#39;root&#39;</span>
</span><span class='line'>    <span class="n">key</span> <span class="o">=</span> <span class="n">paramiko</span><span class="o">.</span><span class="n">DSSKey</span><span class="o">.</span><span class="n">from_private_key_file</span><span class="p">(</span><span class="n">pkey_file</span><span class="p">,</span> <span class="n">password</span><span class="o">=</span><span class="n">pkey_pass</span><span class="p">)</span>
</span><span class='line'>    <span class="c"># 如果是RSA KEY，上一行修改DSS为RSA</span>
</span><span class='line'>    <span class="n">ssh</span><span class="o">.</span><span class="n">set_missing_host_key_policy</span><span class="p">(</span><span class="n">paramiko</span><span class="o">.</span><span class="n">AutoAddPolicy</span><span class="p">())</span>
</span><span class='line'>    <span class="n">ssh</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">hostip</span><span class="p">,</span> <span class="n">ssh_port</span><span class="p">,</span> <span class="n">ssh_user</span><span class="p">,</span> <span class="n">pkey</span><span class="o">=</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>    <span class="n">stdin</span><span class="p">,</span> <span class="n">stdout</span><span class="p">,</span> <span class="n">stderr</span> <span class="o">=</span> <span class="n">ssh</span><span class="o">.</span><span class="n">exec_command</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">stderr</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'>    <span class="n">ssh</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">ssh_cmd</span><span class="o">=</span><span class="s">&#39;touch /tmp/test&#39;</span>
</span><span class='line'>    <span class="n">paramiko_ssh</span><span class="p">(</span><span class="s">&#39;127.0.0.1&#39;</span><span class="p">,</span> <span class="n">ssh_cmd</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xshell基本设置备忘]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/10/17/xshell/"/>
    <updated>2013-10-17T15:41:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/10/17/xshell</id>
    <content type="html"><![CDATA[<center><img src="http://kumu-Linux.github.io/images/xshell/xshell6.png" width="400"></center>


<p>类似xshell的终端连接工具有很多，比如putty、securecrt，xshell算是一个新秀，具体怎么使用完全看个人爱好，没有什么可以争议的。</p>

<!--more-->


<h3>选项</h3>

<p>菜单栏&#8211;工具&#8211;选项</p>

<p>选中复制，中键粘贴</p>

<p><img src="http://kumu-Linux.github.io/images/xshell/xshell4.png" width="400"></p>

<p>窗口透明【Alt+R快捷键启用和关闭】</p>

<p><img src="http://kumu-Linux.github.io/images/xshell/xshell2.png" width="400"></p>

<p>关闭警告声</p>

<p><img src="http://kumu-Linux.github.io/images/xshell/xshell3.png" width="400"></p>

<h3>属性</h3>

<p>菜单栏&#8211;文件&#8211;属性【Alt+p快速打开】</p>

<p>backspace 按键乱码，属性&#8211;终端&#8211;键盘</p>

<p><img src="http://kumu-Linux.github.io/images/xshell/xshell1.png" width="400"></p>

<p>Xshell启用Xagent，属性&#8211;ssh</p>

<p><img src="http://kumu-Linux.github.io/images/xshell/xshell5.png" width="400"></p>

<p><strong>注</strong>：<s>Win8和Win8.1测试发现在xshell上中文输入乱码，最后确认得知是自带输入法的问题，禁用自带输入法选择第三方输入法即可</s></p>

<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh的一些安全设定]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/09/26/ssh-safe/"/>
    <updated>2013-09-26T10:42:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/09/26/ssh-safe</id>
    <content type="html"><![CDATA[<center><img src="http://kumu-Linux.github.io/images/nmap_ssh.jpg" width="500"></center>




<!--more-->


<p>ssh是我们日常工作中必不可少的工具，所以它的安全性也是异常重要了，这里笔者简单介绍了一些ssh配置中需要注意的几个点。</p>

<!--more-->


<p>首先,作为root用户登录并备份原始文件，输入下面的命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak
</span></code></pre></td></tr></table></div></figure>


<h3>1、调整认证时限(默认单位为s)，即当用户登录ssh之后，要求输入密码的时间限制，规定时间没有输入则自动断线：</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>LoginGraceTime 60
</span></code></pre></td></tr></table></div></figure>


<h3>2、最好限制root用户远程登录，修改如下：</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>PermitRootLogin no
</span></code></pre></td></tr></table></div></figure>


<h3>3、关闭X11转发，防止额外的信息泄露</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>X11Forwarding no
</span></code></pre></td></tr></table></div></figure>


<h3>4、取消以下两行的注释，使得登录后显示一些信息</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>PrintMotd yes
</span><span class='line'>PrintLastLog yes
</span></code></pre></td></tr></table></div></figure>


<h3>5、编辑<code>/etc/motd</code>文件，添加一些警告信息，如下</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>This computer system is <span class="k">for </span>authorized users only. All activity
</span><span class='line'>is logged and regularly checked. Individuals using this system
</span><span class='line'>without authority or in excess of their authority are subject to
</span><span class='line'>having all their services revoked...
</span></code></pre></td></tr></table></div></figure>


<h3>6、关闭ssh闲置会话</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ClientAliveInterval 60
</span><span class='line'>ClientAliveCountMax 5
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ClientAliveInterval设置表示如果超过这么长时间没有收到客户端的任何数据，将通过安全通道向客户端发送一个&#8221;alive&#8221;消息，并等候应答，单位默认为s。</li>
<li>ClientAliveCountMax表示在未收到任何客户端回应前最多允许发送多少个&#8221;alive&#8221;消息，这是设置5次</li>
</ul>


<p>以上也就是客户端如果60*5=300s，即5分钟如果没有任何操作，则空闲连接会被强制断开，关闭时提示如下</p>

<pre><code>Connection to x.x.x.x closed by remote host.
Connection to x.x.x.x closed.
</code></pre>

<h3>7、开启TCPKeepAlive</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>TCPKeepAlive yes
</span></code></pre></td></tr></table></div></figure>


<p>TCPKeepAlive指定系统是否向客户端发送TCP keepalive消息，这种消息可以检测到死连接、连接不当关闭、客户端崩溃等异常，避免僵尸进程产生，推荐开启。</p>

<h3>8、修改ssh默认端口22</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Port xxxx    <span class="c">#自定义端口</span>
</span></code></pre></td></tr></table></div></figure>


<h3>9、设置允许登录的ssh用户</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>AllowUsers test1 test2 test3
</span></code></pre></td></tr></table></div></figure>


<p>也可以设置允许的组</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>AllowGroups admin
</span></code></pre></td></tr></table></div></figure>


<h3>10、关闭不必要的认证</h3>

<p>如果可以，只允许公钥认证，关闭其它认证方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>PasswordAuthentication no
</span><span class='line'>ChallengeResponseAuthentication no
</span></code></pre></td></tr></table></div></figure>


<p>基本的一个设置就是以上的部分了内容了，还可以结合<code>fail2ban</code>更好的保护ssh的安全。关于<code>fail2ban</code>下次介绍，其实很多网友已经写了很多相关的博文了。</p>

<h3>参考文章</h3>

<ul>
<li><a href="http://blog.licess.org/sshd_config/">sshd_config配置</a></li>
<li><a href="http://lamp.linux.gov.cn/OpenSSH/sshd_config.html">sshd_config中文手册</a></li>
<li><a href="http://www.ibm.com/developerworks/cn/aix/library/au-sshsecurity/">SSH 安全性和配置入门</a></li>
<li><a href="http://www.amazon.com/CentOS-6-Linux-Server-Cookbook/dp/1849519021">CentOS 6 Linux Server Cookbook </a></li>
</ul>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenNebula KVM磁盘热插拔]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/09/25/kvm-disk-hotplug/"/>
    <updated>2013-09-25T15:22:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/09/25/kvm-disk-hotplug</id>
    <content type="html"><![CDATA[<p>KVM支持以下两种磁盘类型的热插拔：</p>

<ul>
<li>sd: SCSI (default).</li>
<li>vd: virtio.</li>
</ul>


<p>KVM虚拟机需要开启acpi才支持磁盘的热插拔，使用OpenNebula安装虚拟机的时候需要设置如下选项：</p>

<ul>
<li>FEATURES = [ acpi=&#8221;yes&#8221; ]</li>
</ul>


<!--more-->


<h3>virtio磁盘热插拔</h3>

<p>虚拟机加载acpiphp驱动</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># modprobe acpiphp   # 加载驱动</span>
</span><span class='line'><span class="c"># fdisk -l</span>
</span><span class='line'>
</span><span class='line'>Disk /dev/vda: 32.2 GB, 32212254720 bytes
</span><span class='line'>255 heads, 63 sectors/track, 3916 cylinders
</span><span class='line'><span class="nv">Units</span> <span class="o">=</span> cylinders of 16065 * <span class="nv">512</span> <span class="o">=</span> 8225280 bytes
</span><span class='line'>
</span><span class='line'>   Device Boot      Start         End      Blocks   Id  System
</span><span class='line'>/dev/vda1   *           1          13      104391   83  Linux
</span><span class='line'>/dev/vda2              14        3916    31350847+  8e  Linux LVM
</span></code></pre></td></tr></table></div></figure>


<p>选择需要添加磁盘的虚拟机- [ Disks &amp; Hotplugging ] ，配置完成之后选择 Attach 挂载使用</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_disk1.jpg" width="500"></center>


<p>Device Prefix选择sd表示scsi磁盘，如果是vd则是vitio类型磁盘。选择Attach之后，刷新页面就会看到新建的磁盘。</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_disk2.jpg" width="500"></center>


<p>此时查看vda磁盘是否生效</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># fdisk -l           # 查看磁盘识别</span>
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>Disk /dev/vdb: 1048 MB, 1048576000 bytes
</span><span class='line'>16 heads, 63 sectors/track, 2031 cylinders
</span><span class='line'><span class="nv">Units</span> <span class="o">=</span> cylinders of 1008 * <span class="nv">512</span> <span class="o">=</span> 516096 bytes
</span><span class='line'>
</span><span class='line'>Disk /dev/vdb doesn<span class="err">&#39;</span>t contain a valid partition table
</span></code></pre></td></tr></table></div></figure>


<h3>scsi磁盘热插拔</h3>

<p>虚拟机加载acpiphp驱动</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># modprobe acpiphp   # 加载驱动</span>
</span></code></pre></td></tr></table></div></figure>


<p>选择需要添加磁盘的虚拟机- [ Disks &amp; Hotplugging ] ，配置完成之后选择 Attach挂载使用</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_disk3.jpg" width="500"></center>


<p>如下即可看到新添加的磁盘</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># fdisk -l</span>
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>Disk /dev/sda: 1048 MB, 1048576000 bytes
</span><span class='line'>33 heads, 61 sectors/track, 1017 cylinders
</span><span class='line'><span class="nv">Units</span> <span class="o">=</span> cylinders of 2013 * <span class="nv">512</span> <span class="o">=</span> 1030656 bytes
</span><span class='line'>
</span><span class='line'>Disk /dev/sda doesn<span class="err">&#39;</span>t contain a valid partition table
</span></code></pre></td></tr></table></div></figure>


<p>如果未识别scsi磁盘，执行如下命令，使得KVM虚拟机识别</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># echo &#39;- - -&#39; &gt; /sys/class/scsi_host/host0/scan</span>
</span><span class='line'><span class="c"># fdisk -l</span>
</span><span class='line'>...
</span><span class='line'>Disk /dev/sdb: 1048 MB, 1048576000 bytes
</span><span class='line'>33 heads, 61 sectors/track, 1017 cylinders
</span><span class='line'><span class="nv">Units</span> <span class="o">=</span> cylinders of 2013 * <span class="nv">512</span> <span class="o">=</span> 1030656 bytes
</span><span class='line'>
</span><span class='line'>Disk /dev/sdb doesn<span class="err">&#39;</span>t contain a valid partition table
</span></code></pre></td></tr></table></div></figure>


<h3>参考文档</h3>

<ul>
<li><a href="http://opennebula.org/documentation:rel4.2:kvmg">KVM Driver 4.2</a></li>
<li><a href="http://serverfault.com/questions/453456/adding-virtio-block-devices-at-runtime-in-libvirt-kvm">Adding Virtio block devices at runtime in Libvirt KVM</a></li>
</ul>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[30 Handy Bash Shell Aliases[译]]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/09/25/shell-alias/"/>
    <updated>2013-09-25T10:42:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/09/25/shell-alias</id>
    <content type="html"><![CDATA[<p>本文为 <a href="http://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html">原文地址</a> 翻译而来，有些地方稍作改动。</p>

<p>一个别名就是一个命令的快捷方式，<code>alias</code>命令允许用户通过输入一个词启动任何命令或一组命令(包括选项和文件名)。通过<code>alias</code>命令可以显示所有已定义的别名列表。你可以在<code>~ /.bashrc</code>文件中自定义用户的别名。通过这些别名可以减少打字时间，更灵活的操作，提升工作效率。</p>

<!--more-->


<h3>Task：列出系统别名列表</h3>

<p>输入以下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出实例:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">cp</span><span class="o">=</span><span class="s1">&#39;cp -i&#39;</span>
</span><span class='line'><span class="nb">alias </span>l.<span class="o">=</span><span class="s1">&#39;ls -d .* --color=auto&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ll</span><span class="o">=</span><span class="s1">&#39;ls -l --color=auto&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ls</span><span class="o">=</span><span class="s1">&#39;ls --color=auto&#39;</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>默认<code>alias</code>命令不添加任何选项输出当前用户定义的别名。</p>

<h3>Task：定义/创建一个别名(bash语法)</h3>

<p>创建别名使用如下语法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">name</span><span class="o">=</span>value
</span><span class='line'><span class="nb">alias </span><span class="nv">name</span><span class="o">=</span><span class="s1">&#39;command&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">name</span><span class="o">=</span><span class="s1">&#39;command arg1 arg2&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">name</span><span class="o">=</span><span class="s1">&#39;/path/to/script&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">name</span><span class="o">=</span><span class="s1">&#39;/path/to/script.pl arg1&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在以下的实例中，创建一个<code>clear</code>清屏命令的别名c，输入如下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">c</span><span class="o">=</span>clear
</span></code></pre></td></tr></table></div></figure>


<p>输入以上命令之后，如果需要清屏，只需直接输入简单的<code>c</code>来代替<code>clear</code>命令即可实现</p>

<h3>Task：暂时禁用别名</h3>

<p>显示别名<code>cp</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">alias </span>cp
</span><span class='line'><span class="nb">alias </span><span class="nv">cp</span><span class="o">=</span><span class="s1">&#39;cp -i&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>cp</code>命令是<code>cp -i</code>的别名，<code>-i</code>选项一定程度上能起到保护作用，但是当我们只想使用原始的cp命令的时候，我们肯定不能简单的输入<code>cp</code>命令，这里有两种方式实现</p>

<ul>
<li>使用全名</li>
<li>或者使用\+命令</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls a b
</span><span class='line'>a  b
</span><span class='line'><span class="nv">$ </span>cp b a      <span class="c">#使用别名之后的cp在覆盖文件时会提示</span>
</span><span class='line'>cp: overwrite <span class="sb">`</span>a<span class="err">&#39;</span>? y
</span><span class='line'><span class="nv">$ </span>/bin/cp b a <span class="c">#使用全称不会有提示</span>
</span><span class='line'><span class="nv">$ </span><span class="se">\c</span>p b a     <span class="c">#使用\cp不会有提示</span>
</span></code></pre></td></tr></table></div></figure>


<h3>移除alias (bash语法)</h3>

<p>你需要使用<code>unalias</code>命令移除别名，语法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">unalias </span>aliasname
</span></code></pre></td></tr></table></div></figure>


<p>例如，移除之前<code>clear</code>的别名<code>c</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">unalias </span>c
</span></code></pre></td></tr></table></div></figure>


<p>如果你在<code>~/bashrc</code>文件中定义了别名，也需要从该文件中移除对应所在行。</p>

<h3>Task：定义永久别名</h3>

<p>alias c只能在当前会话中生效。当你重启或者退出当前会话的时候，就失效了。为了避免这种问题，田间别名到你的<code>~/.bashrc</code>配置文件中，输入:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vi ~/.bashrc
</span></code></pre></td></tr></table></div></figure>


<p>通过添加如下内容，对于当前用户别名c永久生效：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">c</span><span class="o">=</span><span class="s1">&#39;clear&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>保存并退出这个文件，全局别名可以存放在<code>/etc/bashrc</code>文件中，请注意这个别名命令建立在各种shell中，包括ksh、csh、bash等等</p>

<h3>一个关于权限访问的小贴士</h3>

<p>你可以添加如下代码到<code>~/.bashrc</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># if user is not root, pass all commands via sudo #</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> <span class="nv">$UID</span> -ne 0 <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">    </span><span class="nb">alias </span><span class="nv">reboot</span><span class="o">=</span><span class="s1">&#39;sudo reboot&#39;</span>
</span><span class='line'>    <span class="nb">alias </span><span class="nv">update</span><span class="o">=</span><span class="s1">&#39;sudo yum update&#39;</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<h3>按照操作系统添加别名的小贴士</h3>

<p>你可以添加如下代码到<code>~/.bashrc</code> <a href="http://bash.cyberciti.biz/guide/The_case_statement">case语句</a>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">### Get os name via uname ###</span>
</span><span class='line'><span class="nv">_myos</span><span class="o">=</span><span class="s2">&quot;$(uname)&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c">### add alias as per os using $_myos ###</span>
</span><span class='line'><span class="k">case</span> <span class="nv">$_myos</span> in
</span><span class='line'>   Linux<span class="o">)</span> <span class="nb">alias </span><span class="nv">foo</span><span class="o">=</span><span class="s1">&#39;/path/to/linux/bin/foo&#39;</span>;;
</span><span class='line'>   FreeBSD|OpenBSD<span class="o">)</span> <span class="nb">alias </span><span class="nv">foo</span><span class="o">=</span><span class="s1">&#39;/path/to/bsd/bin/foo&#39;</span> ;;
</span><span class='line'>   SunOS<span class="o">)</span> <span class="nb">alias </span><span class="nv">foo</span><span class="o">=</span><span class="s1">&#39;/path/to/sunos/bin/foo&#39;</span> ;;
</span><span class='line'>   *<span class="o">)</span> ;;
</span><span class='line'><span class="k">esac</span>
</span></code></pre></td></tr></table></div></figure>


<h3>30个有用的别名</h3>

<p>你可以定义不同类型的别名来节约时间和提升效率。</p>

<h4>#1: 控制<code>ls</code>命令输出</h4>

<p>给<code>ls</code>命令的输出来电颜色看看</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## Colorize the ls output ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ls</span><span class="o">=</span><span class="s1">&#39;ls --color=auto&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## Use a long listing format ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ll</span><span class="o">=</span><span class="s1">&#39;ls -la&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## Show hidden files ##</span>
</span><span class='line'><span class="nb">alias </span>l.<span class="o">=</span><span class="s1">&#39;ls -d .* --color=auto&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#2: 调整<code>cd</code>命令习惯</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## get rid of command not found ##</span>
</span><span class='line'><span class="nb">alias </span>cd..<span class="o">=</span><span class="s1">&#39;cd ..&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## a quick way to get out of current directory ##</span>
</span><span class='line'><span class="nb">alias</span> ..<span class="o">=</span><span class="s1">&#39;cd ..&#39;</span>
</span><span class='line'><span class="nb">alias</span> ...<span class="o">=</span><span class="s1">&#39;cd ../../../&#39;</span>
</span><span class='line'><span class="nb">alias</span> ....<span class="o">=</span><span class="s1">&#39;cd ../../../../&#39;</span>
</span><span class='line'><span class="nb">alias</span> .....<span class="o">=</span><span class="s1">&#39;cd ../../../../&#39;</span>
</span><span class='line'><span class="nb">alias</span> .4<span class="o">=</span><span class="s1">&#39;cd ../../../../&#39;</span>
</span><span class='line'><span class="nb">alias</span> .5<span class="o">=</span><span class="s1">&#39;cd ../../../../..&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#3：控制<code>grep</code>命令输出</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## Colorize the grep command output for ease of use (good for log files)##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">grep</span><span class="o">=</span><span class="s1">&#39;grep --color=auto&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">egrep</span><span class="o">=</span><span class="s1">&#39;egrep --color=auto&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">fgrep</span><span class="o">=</span><span class="s1">&#39;fgrep --color=auto&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#4：开启计算器小数点计算</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">bc</span><span class="o">=</span><span class="s1">&#39;bc -l&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#5：生成sha1摘要</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">sha1</span><span class="o">=</span><span class="s1">&#39;openssl sha1&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#6、根据需要创建父目录</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">mkdir</span><span class="o">=</span><span class="s1">&#39;mkdir -pv&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#7：有颜色的diff输出</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># install  colordiff package :) 前提需要安装colordiff包</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">diff</span><span class="o">=</span><span class="s1">&#39;colordiff&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#8：使mount命令输出格式更漂亮以及可读性更高</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">mount</span><span class="o">=</span><span class="s1">&#39;mount |column -t&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#9：短命令节省时间</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># handy short cuts #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">h</span><span class="o">=</span><span class="s1">&#39;history&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">j</span><span class="o">=</span><span class="s1">&#39;jobs -l&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#10：创建一些新的命令</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">path</span><span class="o">=</span><span class="s1">&#39;echo -e ${PATH//:/\\n}&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">now</span><span class="o">=</span><span class="s1">&#39;date +&quot;%T&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">nowtime</span><span class="o">=</span>now
</span><span class='line'><span class="nb">alias </span><span class="nv">nowdate</span><span class="o">=</span><span class="s1">&#39;date +&quot;%d-%m-%Y&quot;&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#11：设置默认的vim</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">vi</span><span class="o">=</span>vim
</span><span class='line'><span class="nb">alias </span><span class="nv">svi</span><span class="o">=</span><span class="s1">&#39;sudo vi&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">vis</span><span class="o">=</span><span class="s1">&#39;vim &quot;+set si&quot;&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">edit</span><span class="o">=</span><span class="s1">&#39;vim&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#12：ping的相关设置</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Stop after sending count ECHO_REQUEST packets #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ping</span><span class="o">=</span><span class="s1">&#39;ping -c 5&#39;</span>
</span><span class='line'><span class="c"># Do not wait interval 1 second, go fast #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">fastping</span><span class="o">=</span><span class="s1">&#39;ping -c 100 -s.2&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#13：显示打开的端口</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">ports</span><span class="o">=</span><span class="s1">&#39;netstat -tulanp&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#14：唤醒沉睡的服务</h4>

<p><a href="http://www.cyberciti.biz/tips/linux-send-wake-on-lan-wol-magic-packets.html">Wake-on-LAN(WOL)</a>是一个以太网网络标准,允许通过一个网络信息打开服务。您可以使用以下的别名快速唤醒NAS设备和服务器<a href="http://bash.cyberciti.biz/misc-shell/simple-shell-script-to-wake-up-nas-devices-computers/">Devices Using Linux or Unix Computer</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## replace mac with your actual server mac address #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">wakeupnas01</span><span class="o">=</span><span class="s1">&#39;/usr/bin/wakeonlan 00:11:32:11:15:FC&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">wakeupnas02</span><span class="o">=</span><span class="s1">&#39;/usr/bin/wakeonlan 00:11:32:11:15:FD&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">wakeupnas03</span><span class="o">=</span><span class="s1">&#39;/usr/bin/wakeonlan 00:11:32:11:15:FE&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#15：控制防火墙(iptables)输出</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## shortcut  for iptables and pass it via sudo#</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ipt</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/iptables&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># display all rules #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iptlist</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/iptables -L -n -v --line-numbers&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iptlistin</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/iptables -L INPUT -n -v --line-numbers&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iptlistout</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/iptables -L OUTPUT -n -v --line-numbers&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iptlistfw</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/iptables -L FORWARD -n -v --line-numbers&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">firewall</span><span class="o">=</span>iptlist
</span></code></pre></td></tr></table></div></figure>


<h4>#16：通过curl调试web服务或者CDN问题</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># get web server headers #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">header</span><span class="o">=</span><span class="s1">&#39;curl -I&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># find out if remote server supports gzip / mod_deflate or not #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">headerc</span><span class="o">=</span><span class="s1">&#39;curl -I --compress&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#17：一些安全的设置</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># do not delete / or prompt if deleting more than 3 files at a time #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rm</span><span class="o">=</span><span class="s1">&#39;rm -I --preserve-root&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># confirmation #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">mv</span><span class="o">=</span><span class="s1">&#39;mv -i&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">cp</span><span class="o">=</span><span class="s1">&#39;cp -i&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ln</span><span class="o">=</span><span class="s1">&#39;ln -i&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Parenting changing perms on / #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">chown</span><span class="o">=</span><span class="s1">&#39;chown --preserve-root&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">chmod</span><span class="o">=</span><span class="s1">&#39;chmod --preserve-root&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">chgrp</span><span class="o">=</span><span class="s1">&#39;chgrp --preserve-root&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#18：升级RHEL/CentOS/Fedora Linux 服务</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## distrp specifc RHEL/CentOS ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">update</span><span class="o">=</span><span class="s1">&#39;yum update&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">updatey</span><span class="o">=</span><span class="s1">&#39;yum -y update&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#19：调节sudo和su</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># become root #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">root</span><span class="o">=</span><span class="s1">&#39;sudo -i&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">su</span><span class="o">=</span><span class="s1">&#39;sudo -i&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#20：通过sudo关机或重启</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># reboot / halt / poweroff</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">reboot</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/reboot&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">poweroff</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/poweroff&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">halt</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/halt&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">shutdown</span><span class="o">=</span><span class="s1">&#39;sudo /sbin/shutdown&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#21：控制web服务</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># also pass it via sudo so whoever is admin can reload it without calling you #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">nginxreload</span><span class="o">=</span><span class="s1">&#39;sudo /usr/local/nginx/sbin/nginx -s reload&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">nginxtest</span><span class="o">=</span><span class="s1">&#39;sudo /usr/local/nginx/sbin/nginx -t&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">lightyload</span><span class="o">=</span><span class="s1">&#39;sudo /etc/init.d/lighttpd reload&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">lightytest</span><span class="o">=</span><span class="s1">&#39;sudo /usr/sbin/lighttpd -f /etc/lighttpd/lighttpd.conf -t&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">httpdreload</span><span class="o">=</span><span class="s1">&#39;sudo /usr/sbin/apachectl -k graceful&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">httpdtest</span><span class="o">=</span><span class="s1">&#39;sudo /usr/sbin/apachectl -t &amp;&amp; /usr/sbin/apachectl -t -D DUMP_VHOSTS&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#22：给备份做别名</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># if cron fails or if you want backup on demand just run these commands # </span>
</span><span class='line'><span class="c"># again pass it via sudo so whoever is in admin group can start the job #</span>
</span><span class='line'><span class="c"># Backup scripts #</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">backup</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type local --taget /raid1/backups&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">nasbackup</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type nas --target nas01&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">s3backup</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type nas --target nas01 --auth /home/scripts/admin/.authdata/amazon.keys&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rsnapshothourly</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys --config /home/scripts/admin/scripts/backup/config/adsl.conf&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rsnapshotdaily</span><span class="o">=</span><span class="s1">&#39;sudo  /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rsnapshotweekly</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rsnapshotmonthly</span><span class="o">=</span><span class="s1">&#39;sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">amazonbackup</span><span class="o">=</span>s3backup
</span></code></pre></td></tr></table></div></figure>


<h4>#23：系统管理员设置端口相关的命令</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## All of our servers eth1 is connected to the Internets via vlan / router etc  ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">dnstop</span><span class="o">=</span><span class="s1">&#39;dnstop -l 5  eth1&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">vnstat</span><span class="o">=</span><span class="s1">&#39;vnstat -i eth1&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iftop</span><span class="o">=</span><span class="s1">&#39;iftop -i eth1&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">tcpdump</span><span class="o">=</span><span class="s1">&#39;tcpdump -i eth1&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ethtool</span><span class="o">=</span><span class="s1">&#39;ethtool eth1&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># work on wlan0 by default #</span>
</span><span class='line'><span class="c"># Only useful for laptop as all servers are without wireless interface</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">iwconfig</span><span class="o">=</span><span class="s1">&#39;iwconfig wlan0&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#24：快速获取系统内存、cpu使用以及gpu内存信息</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## pass options to free ## </span>
</span><span class='line'><span class="nb">alias </span><span class="nv">meminfo</span><span class="o">=</span><span class="s1">&#39;free -m -l -t&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## get top process eating memory</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">psmem</span><span class="o">=</span><span class="s1">&#39;ps auxf | sort -nr -k 4&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">psmem10</span><span class="o">=</span><span class="s1">&#39;ps auxf | sort -nr -k 4 | head -10&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## get top process eating cpu ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">pscpu</span><span class="o">=</span><span class="s1">&#39;ps auxf | sort -nr -k 3&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">pscpu10</span><span class="o">=</span><span class="s1">&#39;ps auxf | sort -nr -k 3 | head -10&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## Get server cpu info ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">cpuinfo</span><span class="o">=</span><span class="s1">&#39;lscpu&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## older system use /proc/cpuinfo ##</span>
</span><span class='line'><span class="c">##alias cpuinfo=&#39;less /proc/cpuinfo&#39; ##</span>
</span><span class='line'>
</span><span class='line'><span class="c">## get GPU ram on desktop / laptop## </span>
</span><span class='line'><span class="nb">alias </span><span class="nv">gpumeminfo</span><span class="o">=</span><span class="s1">&#39;grep -i --color memory /var/log/Xorg.0.log&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#25：控制家庭路由器</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Reboot my home Linksys WAG160N / WAG54 / WAG320 / WAG120N Router / Gateway from *nix.</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">rebootlinksys</span><span class="o">=</span><span class="s2">&quot;curl -u &#39;admin:my-super-password&#39; &#39;http://192.168.1.2/setup.cgi?todo=reboot&#39;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Reboot tomato based Asus NT16 wireless bridge </span>
</span><span class='line'><span class="nb">alias </span><span class="nv">reboottomato</span><span class="o">=</span><span class="s2">&quot;ssh admin@192.168.1.1 /sbin/reboot&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#26：wget续传</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## this one saved by butt so many times ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">wget</span><span class="o">=</span><span class="s1">&#39;wget -c&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#27：使用不同的浏览器测试网页</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## this one saved by butt so many times ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ff4</span><span class="o">=</span><span class="s1">&#39;/opt/firefox4/firefox&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ff13</span><span class="o">=</span><span class="s1">&#39;/opt/firefox13/firefox&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">chrome</span><span class="o">=</span><span class="s1">&#39;/opt/google/chrome/chrome&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">opera</span><span class="o">=</span><span class="s1">&#39;/opt/opera/opera&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">#default ff </span>
</span><span class='line'><span class="nb">alias </span><span class="nv">ff</span><span class="o">=</span>ff13
</span><span class='line'>
</span><span class='line'><span class="c">#my default browser </span>
</span><span class='line'><span class="nb">alias </span><span class="nv">browser</span><span class="o">=</span>chrome
</span></code></pre></td></tr></table></div></figure>


<h4>#28：ssh小贴士</h4>

<p>不创建别名，通过使用OpenSSH配置文件<code>~/.ssh/config</code>配置，它提供了很多选项，如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Host server10
</span><span class='line'>  Hostname 1.2.3.4
</span><span class='line'>  IdentityFile ~/backups/.ssh/id_dsa
</span><span class='line'>  user foobar
</span><span class='line'>  Port 30000
</span><span class='line'>  ForwardX11Trusted yes
</span><span class='line'>  TCPKeepAlive yes
</span></code></pre></td></tr></table></div></figure>


<p>现在可以通过如下命令连接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh server10
</span></code></pre></td></tr></table></div></figure>


<h4>#29：现在轮到你分享了</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## set some other defaults ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">df</span><span class="o">=</span><span class="s1">&#39;df -H&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">du</span><span class="o">=</span><span class="s1">&#39;du -ch&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># top is atop, just like vi is vim</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">top</span><span class="o">=</span><span class="s1">&#39;atop&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## nfsrestart  - must be root  ##</span>
</span><span class='line'><span class="c">## refresh nfs mount / cache etc for Apache ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">nfsrestart</span><span class="o">=</span><span class="s1">&#39;sync &amp;&amp; sleep 2 &amp;&amp; /etc/init.d/httpd stop &amp;&amp; umount netapp2:/exports/http &amp;&amp; sleep 2 &amp;&amp; mount -o rw,sync,rsize=32768,wsize=32768,intr,hard,proto=tcp,fsc natapp2:/exports /http/var/www/html &amp;&amp;  /etc/init.d/httpd start&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## Memcached server status  ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">mcdstats</span><span class="o">=</span><span class="s1">&#39;/usr/bin/memcached-tool 10.10.27.11:11211 stats&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">mcdshow</span><span class="o">=</span><span class="s1">&#39;/usr/bin/memcached-tool 10.10.27.11:11211 display&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## quickly flush out memcached server ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">flushmcd</span><span class="o">=</span><span class="s1">&#39;echo &quot;flush_all&quot; | nc 10.10.27.11 11211&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## Remove assets quickly from Akamai / Amazon cdn ##</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">cdndel</span><span class="o">=</span><span class="s1">&#39;/home/scripts/admin/cdn/purge_cdn_cache --profile akamai&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">amzcdndel</span><span class="o">=</span><span class="s1">&#39;/home/scripts/admin/cdn/purge_cdn_cache --profile amazon&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## supply list of urls via file or stdin</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">cdnmdel</span><span class="o">=</span><span class="s1">&#39;/home/scripts/admin/cdn/purge_cdn_cache --profile akamai --stdin&#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">amzcdnmdel</span><span class="o">=</span><span class="s1">&#39;/home/scripts/admin/cdn/purge_cdn_cache --profile amazon --stdin&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>#30：The End Is the Beginning</h4>

<p>&#8230; &#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenNebula Windows Server镜像制作]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/09/22/opennebula-win/"/>
    <updated>2013-09-22T11:01:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/09/22/opennebula-win</id>
    <content type="html"><![CDATA[<p>Windows镜像制作的方法和Linux其实类似，主要注意的是，Windows需要安装virtio设备驱动。以下主要介绍驱动的安装方法，其它类似镜像导入和模板制作都和Linux方法一样。</p>

<h3>创建虚拟机镜像文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># qemu-img create -f qcow2 win_2008.qcow2 50G</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<h3>安装虚拟机</h3>

<p>网卡推荐使用e1000，磁盘类型使用virtio。使用virtio需要安装virtio设备驱动，否则默认是不能识别virtio设备的。</p>

<h4>下载fedora项目组最新的virtio驱动iso</h4>

<ul>
<li><a href="http://alt.fedoraproject.org/pub/alt/virtio-win/latest/images/bin/">virtio官网地址</a> 目前的提供virtio最新驱动iso为 <a href="http://alt.fedoraproject.org/pub/alt/virtio-win/latest/images/bin/virtio-win-0.1-65.iso">virtio-win-0.1-65.iso</a> ，下载之后使用如下方式安装</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># kvm -m 2048 -cdrom cn_windows_server_2008_r2.iso \</span>
</span><span class='line'>-drive <span class="nv">file</span><span class="o">=</span>/data/virtio-win-0.1-65.iso,media<span class="o">=</span>cdrom <span class="se">\</span>
</span><span class='line'>-drive <span class="nv">file</span><span class="o">=</span>win_2008.qcow2,if<span class="o">=</span>virtio <span class="se">\</span>
</span><span class='line'>-net nic,model<span class="o">=</span>e1000 -net tap,ifname<span class="o">=</span>tap0,script<span class="o">=</span>no <span class="se">\</span>
</span><span class='line'>-boot d -nographic -vnc :0
</span></code></pre></td></tr></table></div></figure>


<p>客户端通过VNC连接，启动之后virtio的硬盘是不能被识别的，如下图</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_win1.jpg" width="500" /></center>




<p></p>


<p>此时，需要安装virtio驱动，点击加载驱动程序，Windows Server 2008对应win7版本</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_win2.jpg" width="500" /></center>


<p></p>


<p>选择之后，按提示操作安装，安装完之后就会识别之前建立的磁盘</p>

<center><img src="http://kumu-Linux.github.io/images/OpenNebula/OpenNebula_win3.jpg" width="500" /></center>


<p></p>


<p>磁盘识别之后就可以之后的完整系统安装，关于Windows Server 2008的安装步骤这里不再赘述。</p>

<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh认证代理]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/09/09/ssh-agent/"/>
    <updated>2013-09-09T10:55:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/09/09/ssh-agent</id>
    <content type="html"><![CDATA[<h3>简介</h3>

<p>ssh允许用户把密钥存储在内存中，这就是ssh认证代理[ssh-agent]。认证代理为用户提供了使用RSA密钥而不必随时键入口令字的能力，这对于不必在所有登录、X会话或运行脚本时都要键入口令字提供便利是很有效的。ssh-agent是个长时间持续运行的守护进程（daemon），设计它的唯一目的就是对解密的专用密钥进行高速缓存。ssh包含的内建支持允许它同ssh-agent通信，允许ssh不必每次新连接时都提示您要密码才能获取解密的专用密钥。</p>

<!--more-->


<h3>实例</h3>

<h4>Before ssh-agent</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ssh root@192.168.80.130</span>
</span><span class='line'>Enter passphrase <span class="k">for </span>key <span class="s1">&#39;/root/.ssh/id_rsa&#39;</span>:   <span class="c"># 正常输入密码</span>
</span><span class='line'>Last login: Sat Sep  7 12:40:02 2013 from 192.168.80.131
</span></code></pre></td></tr></table></div></figure>


<h4>After ssh-agent</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ssh-agent bash</span>
</span><span class='line'><span class="c"># ssh-add       </span>
</span><span class='line'><span class="c"># 默认ssh-add添加~/.ssh/id_rsa私钥，按提示输入密码即可，可添加多个密钥</span>
</span><span class='line'><span class="c"># 如果要加入其它密钥直接 ssh-add 私钥文件 即可</span>
</span><span class='line'>Enter passphrase <span class="k">for</span> /root/.ssh/id_rsa:
</span><span class='line'>Identity added: /root/.ssh/id_rsa <span class="o">(</span>/root/.ssh/id_rsa<span class="o">)</span>
</span><span class='line'><span class="c"># ssh-add -l                    # 显示添加密钥添加列表</span>
</span><span class='line'>2048 4f:a8:76:04:42:90:b4:18:c1:6b:13:06:31:c8:59:bf /root/.ssh/id_rsa <span class="o">(</span>RSA<span class="o">)</span>
</span><span class='line'><span class="c"># ssh root@192.168.80.130       # 不需要密码登录了</span>
</span><span class='line'>Last login: Sat Sep  7 12:58:09 2013 from 192.168.80.128
</span></code></pre></td></tr></table></div></figure>


<h4>ssh-agent + ForwardAgent</h4>

<p>A->B->C&#8230;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ssh root@192.168.80.130</span>
</span><span class='line'>Last login: Sat Sep  7 14:05:34 2013 from 192.168.80.128
</span><span class='line'><span class="c"># ssh root@192.168.80.131       # 默认ForwardAgent默认值为no，因此登录到B时再登录C需要密码了</span>
</span><span class='line'>Enter passphrase <span class="k">for </span>key <span class="s1">&#39;/root/.ssh/id_rsa&#39;</span>:
</span></code></pre></td></tr></table></div></figure>


<p>如果想A->B->C&#8230;都不需要密码则可以设置<code>~/.ssh/config</code>如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Host *
</span><span class='line'>    ForwardAgent yes
</span></code></pre></td></tr></table></div></figure>


<p><strong>设置之后</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ssh root@192.168.80.130</span>
</span><span class='line'>Last login: Sat Sep  7 14:06:01 2013 from 192.168.80.128
</span><span class='line'><span class="c"># ssh root@192.168.80.131       # 没有再次提示输入密码，直接登录</span>
</span><span class='line'>Last login: Sat Sep  7 14:05:20 2013 from 192.168.80.130
</span></code></pre></td></tr></table></div></figure>


<h3>参考和拓展文档</h3>

<ul>
<li><a href="http://blog.hellosa.org/2010/03/07/ssh-agent-secure.html">ssh-agent 的安全隐患</a></li>
<li><a href="http://blog.pkufranky.com/2012/08/ssh-agent-forwarding-guide/">SSH Agent Forwarding原理</a></li>
<li><a href="http://livecipher.blogspot.tw/2013/02/ssh-agent-forwarding.html">SSH key agent forwarding</a></li>
<li><a href="https://help.github.com/articles/using-ssh-agent-forwarding">Using ssh agent forwarding</a></li>
<li><a href="upc.lbl.gov/docs/user/sshagent.shtml">A short ssh-agent tutorial</a></li>
</ul>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rsyslog远程传输的几种方式]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/08/28/rsyslog-remote/"/>
    <updated>2013-08-28T10:51:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/08/28/rsyslog-remote</id>
    <content type="html"><![CDATA[<h3>基本介绍</h3>

<p>Rsyslog是一个syslogd的多线程增强版，<a href="www.rsyslog.com/doc/rsyslog_ng_comparison.html">rsyslog vs. syslog-ng</a> 链接是rsyslog官方和syslog特性和性能上的一些对比，目前大部分Linux发行版本默认也是使用rsyslog记录日志。这里介绍rsyslog远程传输的几种方式，对远程日志传输可以有一个了解。</p>

<!--more-->


<p>rsyslog提供三个远程日志传输方式：</p>

<ul>
<li>UDP: 数据包传输可信度不高</li>
<li>TCP: 数据包传输可信度比较高</li>
<li>RELP: 数据包传输可信度最高，避免数据丢失，比较新的协议，目前应用较少</li>
</ul>


<p>以下为man手册对RELP协议的一个介绍：</p>

<blockquote><p>RELP can be used instead of UDP or plain TCP syslog to  provide  reliable  delivery  of syslog  messages.  Please  note that plain TCP syslog does NOT provide truly reliable delivery, with it messages may be  lost when there is a connection problem or the server shuts down. RELP prevents message loss in hose cases.</p></blockquote>

<p>关于RELP的更进一步了解可以参考 <a href="http://www.rsyslog.com/tag/relp/">Using TLS with RELP</a> <a href="http://www.rsyslog.com/doc/imrelp.html">RELP Input Module</a>  <a href="http://www.rsyslog.com/doc/omrelp.html">RELP Output Module (omrelp)</a></p>

<h3>相关配置</h3>

<blockquote><p>To forward messages to another host via UDP, prepend the hostname with the at sign (&#8220;@&#8221;).  To forward it via plain tcp, prepend two at signs (&#8220;@@&#8221;). To forward via RELP, prepend the string &#8220;:omrelp:&#8221; in front of the hostname.</p></blockquote>

<h4>UDP传输</h4>

<h5>Server端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Provides UDP syslog reception</span>
</span><span class='line'><span class="nv">$ModLoad</span> imudp
</span><span class='line'><span class="nv">$UDPServerRun</span> 514
</span><span class='line'><span class="nv">$AllowedSender</span> UDP, 192.168.80.0/24
</span><span class='line'>
</span><span class='line'><span class="c"># This one is the template to generate the log filename dynamically, depending on the client&#39;s IP address. </span>
</span><span class='line'><span class="c"># 根据客户端的IP单独存放主机日志在不同目录，syslog需要手动创建             </span>
</span><span class='line'><span class="nv">$template</span> Remote,<span class="s2">&quot;/var/log/syslog/%fromhost-ip%/%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Log all messages to the dynamically formed file.</span>
</span><span class='line'>:fromhost-ip, !isequal, <span class="s2">&quot;127.0.0.1&quot;</span> ?Remote
</span><span class='line'><span class="c"># 排除本地主机IP日志记录，只记录远程主机日志</span>
</span><span class='line'><span class="c"># 注意此规则需要在其它规则之前，否则配置没有意义，远程主机的日志也会记录到Server的日志文件中</span>
</span><span class='line'>&amp; ~ <span class="c"># 忽略之前所有的日志，远程主机日志记录完之后不再继续往下记录</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者把以上配置单独存放在<code>/etc/rsyslog.d/</code>中的xxx.conf配置文件中，尽量避免修改主配置文件，当然如果要独立文件主配置文件中必须含有以下配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep &#39;rsyslog.d&#39; /etc/rsyslog.conf </span>
</span><span class='line'><span class="c"># Include all config files in /etc/rsyslog.d/</span>
</span><span class='line'><span class="nv">$IncludeConfig</span> /etc/rsyslog.d/*.conf
</span></code></pre></td></tr></table></div></figure>


<h5>Client端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>*.*                     @192.168.80.130
</span></code></pre></td></tr></table></div></figure>


<p>以上配置完成之后<code>/etc/init.d/rsyslog restart</code></p>

<h4>TCP传输</h4>

<p>TCP配置和UDP类似，如下</p>

<h5>Server端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Provides TCP syslog reception</span>
</span><span class='line'><span class="nv">$ModLoad</span> imtcp
</span><span class='line'><span class="nv">$InputTCPServerRun</span> 514
</span><span class='line'><span class="nv">$AllowedSender</span> TCP, 192.168.80.0/24
</span><span class='line'>
</span><span class='line'><span class="c"># This one is the template to generate the log filename dynamically, depending on the client&#39;s IP address.          </span>
</span><span class='line'><span class="nv">$template</span> Remote,<span class="s2">&quot;/var/log/syslog/%fromhost-ip%/%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Log all messages to the dynamically formed file.</span>
</span><span class='line'>:fromhost-ip, !isequal, <span class="s2">&quot;127.0.0.1&quot;</span> ?Remote
</span><span class='line'>&amp; ~
</span></code></pre></td></tr></table></div></figure>


<h5>Client端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>*.*                     @@192.168.80.130
</span></code></pre></td></tr></table></div></figure>


<p>客户端和服务端重启相关服务即可</p>

<p>关于TCP和UDP的传输方式，rsyslog官方推荐使用TCP传输方式</p>

<blockquote><p>In general, we suggest to use TCP syslog. It is way more reliable than UDP syslog and still pretty fast. The main reason is, that UDP might suffer of message loss. This happens when the syslog server must receive large bursts of messages. If the system buffer for UDP is full, all other messages will be dropped. With TCP, this will not happen. But sometimes it might be good to have a UDP server configured as well. That is, because some devices (like routers) are not able to send TCP syslog by design. In that case, you would need both syslog server types to have everything covered. If you need both syslog server types configured, please make sure they run on proper ports. By default UDP syslog is received on port 514. TCP syslog needs a different port because often the RPC service is using this port as well.</p></blockquote>

<h4>RELP传输</h4>

<p>RELP需要安装<code>rsyslog-relp</code>相应模块</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install rsyslog-relp -y</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Server端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ModLoad</span> imrelp <span class="c"># 加载相应模块</span>
</span><span class='line'><span class="nv">$InputRELPServerRun</span> 20514 <span class="c"># 监听端口</span>
</span><span class='line'>
</span><span class='line'><span class="c"># This one is the template to generate the log filename dynamically, depending on the client&#39;s IP address.          </span>
</span><span class='line'><span class="nv">$template</span> Remote,<span class="s2">&quot;/var/log/syslog/%fromhost-ip%/%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Log all messages to the dynamically formed file.</span>
</span><span class='line'>:fromhost-ip, !isequal, <span class="s2">&quot;127.0.0.1&quot;</span> ?Remote
</span></code></pre></td></tr></table></div></figure>


<h5>Client端配置</h5>

<figure class='code'><figcaption><span>/etc/rsyslog.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ActionQueueType</span> LinkedList     <span class="c"># use asynchronous processing</span>
</span><span class='line'><span class="nv">$ActionQueueFileName</span> srvrfwd    <span class="c"># set file name, also enables disk mode</span>
</span><span class='line'><span class="nv">$ActionResumeRetryCount</span> -1      <span class="c"># infinite retries on insert failure</span>
</span><span class='line'><span class="nv">$ActionQueueSaveOnShutdown</span> on   <span class="c"># save in-memory data if rsyslog shuts down</span>
</span><span class='line'>*.* :omrelp:192.168.80.130:20514
</span></code></pre></td></tr></table></div></figure>


<p>客户端和服务端重启相关服务即可</p>

<h3>参考和拓展资料</h3>

<ul>
<li><a href="http://www.rsyslog.com/tag/relp/">Using TLS with RELP</a></li>
<li><a href="http://www.rsyslog.com/doc/imrelp.html">RELP Input Module</a></li>
<li><a href="http://www.rsyslog.com/doc/omrelp.html">RELP Output Module (omrelp)</a></li>
<li><a href="http://gertverdemme.nl/sysadm/security/rsyslog_relp_remote_logging">Rsyslog remote logging using RELP</a></li>
<li><a href="http://www.rsyslog.com/tag/udp/">UDP Rsyslog</a></li>
<li><a href="http://www.rsyslog.com/tag/tcp/">TCP Rsyslog</a></li>
</ul>


<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS6.4 X86_64 kvm+PXE备忘]]></title>
    <link href="http://kumu-Linux.github.io/blog/2013/08/22/kvm/"/>
    <updated>2013-08-22T13:10:00+08:00</updated>
    <id>http://kumu-Linux.github.io/blog/2013/08/22/kvm</id>
    <content type="html"><![CDATA[<h3>Install 安装</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install qemu-kvm qemu-img </span>
</span><span class='line'><span class="c"># 使用kvm至少要安装的包，一个提供用户级别kvm模拟器，一个提供磁盘镜像的管理</span>
</span><span class='line'><span class="c"># 安装虚拟化管理的相关工具</span>
</span><span class='line'><span class="c"># yum install virt-manager libvirt \     </span>
</span><span class='line'>libvirt-python python-virtinst libvirt-client
</span></code></pre></td></tr></table></div></figure>


<p>也可以yum groupinstall虚拟化组件，具体可参考<a href="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Virtualization_Host_Configuration_and_Guest_Installation_Guide/sect-Virtualization_Host_Configuration_and_Guest_Installation_Guide-Host_Installation-Installing_KVM_packages_on_an_existing_Red_Hat_Enterprise_Linux_system.html">Redhat官方文档</a></p>

<!--more-->


<ul>
<li>KVM 管理工具

<ul>
<li>kvm 内核模块 &lt;- qemu 管理工具 (可用性低)</li>
<li>qemu 是开源虚拟化软件, 虚拟不同 CPU 架构, 可以 x86 虚拟 power cpu</li>
<li>libvirt, virsh, virt-manager (redhat 的辅助工具)</li>
<li>libvirt api 提供管理接口工具</li>
<li>virt-manager 调用 libvirt 工具</li>
</ul>
</li>
</ul>


<p></p>


<ul>
<li>ibvirt接口

<ul>
<li>virsh 命令行工具</li>
<li>virt-manager 图形工具</li>
<li>RHEV-M (redhat专用收费软件)</li>
</ul>
</li>
</ul>


<p></p>


<ul>
<li>支持三种虚拟设备

<ul>
<li>Emulated software devices 仿真设备 ->  南北桥, USB, PS/2 ISA PCI</li>
<li>Para-virtualized devices  -> 时钟, 网络, 串口</li>
<li>Physically shared devices &#8211;> 光纤设备</li>
</ul>
</li>
</ul>


<p>安装完之后就可以启动kvm了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># /etc/init.d/libvirtd start</span>
</span></code></pre></td></tr></table></div></figure>


<h4>桥接网络</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install bridge-utils -y</span>
</span></code></pre></td></tr></table></div></figure>


<p>桥接实例:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /etc/sysconfig/network-scripts/ifcfg-eth0 </span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span>eth0
</span><span class='line'><span class="nv">TYPE</span><span class="o">=</span>Ethernet
</span><span class='line'><span class="nv">ONBOOT</span><span class="o">=</span>yes
</span><span class='line'><span class="nv">NAME</span><span class="o">=</span><span class="s2">&quot;System eth0&quot;</span>
</span><span class='line'><span class="nv">BRIDGE</span><span class="o">=</span><span class="s2">&quot;br0&quot;</span>
</span><span class='line'><span class="c"># cat /etc/sysconfig/network-scripts/ifcfg-br0</span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span><span class="s2">&quot;br0&quot;</span>
</span><span class='line'><span class="nv">TYPE</span><span class="o">=</span><span class="s2">&quot;Bridge&quot;</span>  <span class="c"># 注意大小写</span>
</span><span class='line'><span class="nv">BOOTPROTO</span><span class="o">=</span><span class="s2">&quot;static&quot;</span>
</span><span class='line'><span class="nv">IPADDR</span><span class="o">=</span>192.168.80.131
</span><span class='line'><span class="nv">NETMASK</span><span class="o">=</span>255.255.255.0
</span><span class='line'><span class="nv">GATEWAY</span><span class="o">=</span>192.168.80.2
</span><span class='line'><span class="nv">ONBOOT</span><span class="o">=</span><span class="s2">&quot;yes&quot;</span>
</span><span class='line'><span class="nv">DELAY</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>具体可参考: <a href="http://www.cyberciti.biz/faq/rhel-linux-kvm-virtualization-bridged-networking-with-libvirt/">CentOS / Redhat: KVM Bridged Network Configuration</a></p>

<h3>构建无人值守，实现KVM PXE安装</h3>

<h4>安装相关软件</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># yum install tftp-server syslinux dhcp vsftpd -y</span>
</span></code></pre></td></tr></table></div></figure>


<h5>dhcp</h5>

<p><strong>dhcp</strong> example:</p>

<figure class='code'><figcaption><span>dhcp    </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /etc/dhcp/dhcpd.conf </span>
</span><span class='line'>subnet 192.168.80.0 netmask 255.255.255.0 <span class="o">{</span>
</span><span class='line'>    range 192.168.80.10 192.168.80.100;
</span><span class='line'>    default-lease-time 600;
</span><span class='line'>    max-lease-time 7200;
</span><span class='line'>    next-server 192.168.80.131; <span class="c"># PXE Server地址</span>
</span><span class='line'>    filename <span class="s2">&quot;pxelinux.0&quot;</span>;      <span class="c"># 引导文件名</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c"># /etc/init.d/dhcpd restart</span>
</span></code></pre></td></tr></table></div></figure>


<h4>tftp</h4>

<p><strong>tftp</strong> example:</p>

<figure class='code'><figcaption><span>tftp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /etc/xinetd.d/tftp </span>
</span><span class='line'>service tftp
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="nv">socket_type</span>     <span class="o">=</span> dgram
</span><span class='line'>    <span class="nv">protocol</span>        <span class="o">=</span> udp
</span><span class='line'>    <span class="nb">wait</span>            <span class="o">=</span> yes
</span><span class='line'>    <span class="nv">user</span>            <span class="o">=</span> root
</span><span class='line'>    <span class="nv">server</span>          <span class="o">=</span> /usr/sbin/in.tftpd
</span><span class='line'>    <span class="nv">server_args</span>     <span class="o">=</span> -s /var/lib/tftpboot
</span><span class='line'>    <span class="nv">disable</span>         <span class="o">=</span> no <span class="c"># 默认yes，改为no即可</span>
</span><span class='line'>    <span class="nv">per_source</span>      <span class="o">=</span> 11
</span><span class='line'>    <span class="nv">cps</span>             <span class="o">=</span> 100 2
</span><span class='line'>    <span class="nv">flags</span>           <span class="o">=</span> IPv4
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c"># /etc/init.d/xinetd restart</span>
</span></code></pre></td></tr></table></div></figure>


<h4>vsftpd</h4>

<p>新建/var/ftp/centos目录，把CentOS光盘镜像挂载至/var/ftp/centos下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># mkdir /var/ftp/centos</span>
</span><span class='line'><span class="c"># mount /dev/cdrom /var/ftp/centos # 挂载镜像使用-o loop</span>
</span><span class='line'><span class="c"># /etc/init.d/vsftpd restart</span>
</span></code></pre></td></tr></table></div></figure>


<h4>无人值守</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># mkdir /var/lib/tftpboot/CentOS6</span>
</span><span class='line'><span class="c"># cp /var/ftp/centos/images/pxeboot/{initrd.img,vmlinuz} /var/lib/tftpboot/CentOS6</span>
</span><span class='line'><span class="c"># cp /var/ftp/centos/isolinux/{boot.msg,vesamenu.c32} /var/lib/tftpboot/</span>
</span><span class='line'><span class="c"># cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/</span>
</span><span class='line'><span class="c"># mkdir /var/ftp/tftpboot/pxelinux.cfg</span>
</span><span class='line'><span class="c"># cp /var/ftp/centos/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg/default</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>tftpboot目录树结构</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># tree /var/lib/tftpboot/</span>
</span><span class='line'>/var/lib/tftpboot/
</span><span class='line'>├── boot.msg
</span><span class='line'>├── CentOS6
</span><span class='line'>│   ├── initrd.img
</span><span class='line'>│   └── vmlinuz
</span><span class='line'>├── pxelinux.0
</span><span class='line'>├── pxelinux.cfg
</span><span class='line'>│   └── default
</span><span class='line'>└── vesamenu.c32
</span><span class='line'>
</span><span class='line'>2 directories, 6 files
</span></code></pre></td></tr></table></div></figure>


<p><strong>pxelinux.cfg/default</strong> example:</p>

<figure class='code'><figcaption><span>pxe default</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /var/lib/tftpboot/pxelinux.cfg/default                                                                                                                      </span>
</span><span class='line'><span class="c"># default CentOS6_PXE # 默认启动&#39;default CentOS6_PXE&#39;标记的内核</span>
</span><span class='line'>default vesamenu.c32  <span class="c"># 菜单选项</span>
</span><span class='line'>timeout 100 <span class="c"># 单位是1/10s</span>
</span><span class='line'><span class="c"># prompt 1  # 为 &#39;0&#39; 时则不提示&#39;boot: &#39;，将会直接启动 &#39;default&#39; 参数中指定的内容</span>
</span><span class='line'>
</span><span class='line'>display boot.msg    <span class="c"># 启动时显示</span>
</span><span class='line'>
</span><span class='line'><span class="c"># menu background splash.jpg    # 菜单背景等</span>
</span><span class='line'>menu title Welcome to CentOS 6.4!
</span><span class='line'>menu color border 0 <span class="c">#ffffffff #00000000</span>
</span><span class='line'>menu color sel 7 <span class="c">#ffffffff #ff000000</span>
</span><span class='line'>menu color title 0 <span class="c">#ffffffff #00000000</span>
</span><span class='line'>menu color tabmsg 0 <span class="c">#ffffffff #00000000</span>
</span><span class='line'>menu color unsel 0 <span class="c">#ffffffff #00000000</span>
</span><span class='line'>menu color hotsel 0 <span class="c">#ff000000 #ffffffff</span>
</span><span class='line'>menu color hotkey 7 <span class="c">#ffffffff #ff000000</span>
</span><span class='line'>menu color scrollbar 0 <span class="c">#ffffffff #00000000</span>
</span><span class='line'>
</span><span class='line'>label CentOS6_PXE
</span><span class='line'>  menu label ^PXE Install CentOS KVM
</span><span class='line'>  kernel /CentOS6/vmlinuz
</span><span class='line'>  append <span class="nv">ks</span><span class="o">=</span>ftp://192.168.80.131/ks.cfg <span class="nv">initrd</span><span class="o">=</span>/CentOS6/initrd.img
</span><span class='line'>label rescue
</span><span class='line'>  menu label ^Rescue installed system
</span><span class='line'>  kernel /CentOS6/vmlinuz
</span><span class='line'>  append <span class="nv">initrd</span><span class="o">=</span>/CentOS6/initrd.img rescue
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>关于PXE的进一步细节可以参考<a href="http://www.syslinux.org/wiki/index.php/PXELINUX">pxelinux官方文档</a></p>

<p><strong>ks.cfg</strong> example:</p>

<figure class='code'><figcaption><span>ks.cfg</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat /var/ftp/ks.cfg</span>
</span><span class='line'><span class="c"># System authorization information</span>
</span><span class='line'>auth  --useshadow  --enablemd5
</span><span class='line'><span class="c"># System bootloader configuration</span>
</span><span class='line'>bootloader --location<span class="o">=</span>mbr
</span><span class='line'><span class="c"># Clear the Master Boot Record</span>
</span><span class='line'>zerombr
</span><span class='line'><span class="c"># Partition clearing information</span>
</span><span class='line'>clearpart --all --initlabel
</span><span class='line'><span class="c"># Use text mode install</span>
</span><span class='line'>text
</span><span class='line'><span class="c"># Firewall configuration</span>
</span><span class='line'>firewall --disabled
</span><span class='line'>skipx
</span><span class='line'><span class="c"># Run the Setup Agent on first boot</span>
</span><span class='line'>firstboot --disable
</span><span class='line'><span class="c"># System keyboard</span>
</span><span class='line'>keyboard us
</span><span class='line'><span class="c"># System language</span>
</span><span class='line'>lang en_US
</span><span class='line'><span class="c"># Installation logging level</span>
</span><span class='line'>logging --level<span class="o">=</span>info
</span><span class='line'><span class="c"># Use network installation</span>
</span><span class='line'>url --url<span class="o">=</span>ftp://192.168.80.131/centos
</span><span class='line'><span class="c"># Network information</span>
</span><span class='line'>network --bootproto<span class="o">=</span>dhcp --device<span class="o">=</span>eth0 --onboot<span class="o">=</span>on
</span><span class='line'><span class="c"># Reboot after installation</span>
</span><span class='line'>reboot
</span><span class='line'><span class="c">#Root password</span>
</span><span class='line'>rootpw --iscrypted <span class="nv">$1$duSkJ1$1P5qGnqUGn3S1MTTFiPJY</span>.
</span><span class='line'>
</span><span class='line'><span class="c"># SELinux configuration</span>
</span><span class='line'>selinux --disabled
</span><span class='line'><span class="c"># System timezone</span>
</span><span class='line'>timezone  Asia/Shanghai
</span><span class='line'><span class="c"># Install OS instead of upgrade</span>
</span><span class='line'>install
</span><span class='line'>
</span><span class='line'><span class="c"># Disk partitioning information</span>
</span><span class='line'>part /boot --asprimary --bytes-per-inode<span class="o">=</span>4096 --fstype<span class="o">=</span><span class="s2">&quot;ext3&quot;</span> --size<span class="o">=</span>100
</span><span class='line'>part / --bytes-per-inode<span class="o">=</span>4096 --fstype<span class="o">=</span><span class="s2">&quot;ext3&quot;</span> --size<span class="o">=</span>5000
</span><span class='line'>part swap --bytes-per-inode<span class="o">=</span>4096 --fstype<span class="o">=</span><span class="s2">&quot;swap&quot;</span> --size<span class="o">=</span>512
</span><span class='line'>
</span><span class='line'>%packages --nobase
</span><span class='line'>@core
</span><span class='line'>@Development tools
</span><span class='line'>acpid   <span class="c"># 如果不安装acpid服务，virsh shutdown virtual_name 命令会失效</span>
</span><span class='line'>vim
</span><span class='line'>wget
</span><span class='line'>lsof
</span><span class='line'>%end
</span></code></pre></td></tr></table></div></figure>


<p>如果最小化安装则软件包选择如下：</p>

<figure class='code'><figcaption><span>Minimal install</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>%packages --nobase
</span><span class='line'>@core
</span></code></pre></td></tr></table></div></figure>


<p>关于kickstart的更进一步了解可参考红帽官档<a href="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Installation_Guide/s1-kickstart2-options.html">Kickstart Options</a> <a href="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Virtualization_Host_Configuration_and_Guest_Installation_Guide/sect-Virtualization_Host_Configuration_and_Guest_Installation_Guide-Guest_Installation-Installing_guests_with_PXE.html">Installing guest virtual machines with PXE</a></p>

<h3>PXE 安装KVM虚拟机</h3>

<p>如果要开启&#8211;graphics vnc选项，则需要修改vnc监听端口，默认监听的是127.0.0.1，修改为0.0.0.0即可</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># grep &#39;^vnc_listen&#39; /etc/libvirt/qemu.conf</span>
</span><span class='line'><span class="nv">vnc_listen</span> <span class="o">=</span> <span class="s2">&quot;0.0.0.0&quot;</span>
</span><span class='line'><span class="c"># /etc/init.d/libvirtd restart</span>
</span></code></pre></td></tr></table></div></figure>


<p>man手册关于vnc端口介绍摘录：</p>

<pre><code>Address to listen on for VNC/Spice connections. Default is typically 127.0.0.1   
(localhost only), but some hypervisors allow changing this globally     
(for example, the qemu driver default can be changed   in /etc/libvirt/qemu.conf).   
Use 0.0.0.0 to allow access from other machines. This is use by ’vnc’ and ’spice.  
</code></pre>

<h4>安装实例：</h4>

<h5>通过location方式结合Kickstart安装</h5>

<ul>
<li>&#8211;extra-args指定ks相关选项，并且指定console类型使得virsh console可以连接操作，也可指定客户机IP、网关、DNS等，无需DHCP：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># virt-install --name centos --ram=1024 --vcpus=1 --os-type=linux --os-variant=rhel6 \</span>
</span><span class='line'>--network bridge:br0 --disk <span class="nv">path</span><span class="o">=</span>/var/lib/libvirt/images/centos6-machine1.img,size<span class="o">=</span>10 <span class="se">\</span>
</span><span class='line'>--location ftp://192.168.80.131/centos/ --extra-args <span class="s2">&quot;ks=ftp://192.168.80.131/ks.cfg \</span>
</span><span class='line'><span class="s2">ksdevice=eth0 ip=192.168.80.150  netmask=255.255.255.0 console=ttyS0&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>PXE方式安装</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># virt-install --connect qemu:///system --network=bridge:br0 \</span>
</span><span class='line'>--pxe --name rhel6-machine1 --ram<span class="o">=</span>1024 --vcpus<span class="o">=</span>1 <span class="se">\</span>
</span><span class='line'>--os-type<span class="o">=</span>linux --os-variant<span class="o">=</span>rhel6 --disk <span class="se">\</span>
</span><span class='line'><span class="nv">path</span><span class="o">=</span>/var/lib/libvirt/images/rhel6-machine1.img,size<span class="o">=</span>10
</span></code></pre></td></tr></table></div></figure>


<p><strong>注意</strong>: 如果需要指定console，&#8211;pxe是不支持&#8211;extra-args额外选项的，所以需要在pxe <code>default</code> 文件添加相关内容[SERIAL和console]，如下example</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>SERIAL 0 115200
</span><span class='line'>label CentOS6_PXE
</span><span class='line'>    menu label ^PXE Install CentOS KVM
</span><span class='line'>    kernel /CentOS6/vmlinuz
</span><span class='line'>    append <span class="nv">ks</span><span class="o">=</span>ftp://192.168.80.131/ks.cfg <span class="nv">initrd</span><span class="o">=</span>/CentOS6/initrd.img <span class="nv">console</span><span class="o">=</span>tty0 <span class="nv">console</span><span class="o">=</span>ttyS0,115200
</span></code></pre></td></tr></table></div></figure>


<h5>本地安装：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># virt-install --name centos --ram=1024 --vcpus=1 --os-type=linux \</span>
</span><span class='line'>--os-variant<span class="o">=</span>rhel6 --location /mnt/ --network bridge:br0 <span class="se">\</span>
</span><span class='line'>--disk <span class="nv">path</span><span class="o">=</span>/var/lib/libvirt/images/rhel6.img,size<span class="o">=</span>10 --extra-args <span class="s2">&quot;console=ttyS0&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>关于KVM的Guest安装方式，virt-install man手册中也有很多实例，这里不一一介绍。</p>

<p>开启&#8211;graphics vnc选项可在Windows下下载vncviewer客户端，输入对应IP和端口即可[ 笔者个人还是习惯通过console连接安装，不开启vnc选项 ]，如下</p>

<figure class='code'><figcaption><span>查看对应端口</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># netstat -tulnp | grep kvm</span>
</span><span class='line'>tcp        0      0 0.0.0.0:5900                0.0.0.0:*                   LISTEN      55762/qemu-kvm
</span><span class='line'>tcp        0      0 0.0.0.0:5901                0.0.0.0:*                   LISTEN      56656/qemu-kvm
</span></code></pre></td></tr></table></div></figure>


<p>连接对应端口<br/>
<img src="http://kumu-Linux.github.io/images/vnc1.png" width="500"></p>

<p></p>


<p>连接之后,就可以正常安装了</p>

<p><img src="http://kumu-Linux.github.io/images/vnc2.png" width="500"></p>

<h3>virsh 操作命令</h3>

<p>这里只介绍一些常用的virsh使用方法，具体的命令可以参看virsh的man手册介绍或者参考红帽官方文档<a href="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/5/html/Virtualization/chap-Virtualization-Managing_guests_with_virsh.html">Managing guests with virsh</a></p>

<p>默认只输入virsh命令会进入virsh的终端：如下，help可以获取命令帮助</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># virsh </span>
</span><span class='line'>Welcome to virsh, the virtualization interactive terminal.
</span><span class='line'>
</span><span class='line'>Type:  <span class="s1">&#39;help&#39;</span> <span class="k">for </span><span class="nb">help </span>with commands
</span><span class='line'>       <span class="s1">&#39;quit&#39;</span> to quit
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># </span>
</span></code></pre></td></tr></table></div></figure>


<p>virsh简单操作</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>virsh <span class="c"># list    # 显示运行或者暂停的Guest</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      running
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># list --all  # 显示所有的Guest，包括状态为shut off的</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      running
</span><span class='line'> -     centos                         shut off
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># console centos6_1   # console方式连接Guest</span>
</span><span class='line'>Connected to domain centos6_1
</span><span class='line'>Escape character is ^<span class="o">]</span>      <span class="c"># 使用Ctrl+]即可退出</span>
</span><span class='line'>
</span><span class='line'>CentOS release 6.4 <span class="o">(</span>Final<span class="o">)</span>
</span><span class='line'>Kernel 2.6.32-358.el6.x86_64 on an x86_64
</span><span class='line'>
</span><span class='line'>localhost.localdomain login:
</span><span class='line'>virsh <span class="c"># start centos        # 开启某个Guest</span>
</span><span class='line'>Domain centos started
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># list</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      running
</span><span class='line'> 32    centos                         running
</span><span class='line'>virsh <span class="c"># shutdown centos     </span>
</span><span class='line'><span class="c"># 关闭某个Guest，这里一定要注意，如果Guest没有安装运行acpid服务，</span>
</span><span class='line'><span class="c"># 则此方式失效，可以kill强制关闭，或者console/ssh连接执行关闭                                                                                                                       </span>
</span><span class='line'>Domain centos is being shutdown
</span></code></pre></td></tr></table></div></figure>


<p>删除某个Guest，一般需要两步走，对于正在运行的Guest则需要先关闭再继续两步走[也可以直接virsh destroy virtual_name], 这里就演示三步：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>virsh destroy guest_name
</span><span class='line'>virsh undefine guest_name
</span><span class='line'>rm -rf guest_img  <span class="c"># 删除虚拟存储</span>
</span></code></pre></td></tr></table></div></figure>


<p>挂起主机</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>virsh <span class="c"># list</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      running
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># suspend centos6_1   # 挂起主机</span>
</span><span class='line'>Domain centos6_1 suspended
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># list</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      paused
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># resume centos6_1    # 把主机从挂起状态切换至运行状态</span>
</span><span class='line'>Domain centos6_1 resumed
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># list</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      running
</span><span class='line'>
</span><span class='line'>virsh <span class="c"># </span>
</span></code></pre></td></tr></table></div></figure>


<h4>virt-clone 克隆Guest</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># virt-clone --connect=qemu:///system --original=centos6_1 \</span>
</span><span class='line'>--name<span class="o">=</span>centos6_2 -f /var/lib/libvirt/images/centos6_2.img
</span><span class='line'>ERROR    Domain with devices to clone must be paused or shutoff.
</span><span class='line'><span class="c"># virsh suspend centos6_1</span>
</span><span class='line'>Domain centos6_1 suspended
</span><span class='line'>
</span><span class='line'><span class="c"># virsh list</span>
</span><span class='line'> Id    Name                           State
</span><span class='line'>----------------------------------------------------
</span><span class='line'> 28    centos6_1                      paused
</span><span class='line'>
</span><span class='line'><span class="c"># virt-clone --connect=qemu:///system --original=centos6_1 \</span>
</span><span class='line'>--name<span class="o">=</span>centos6_2 -f /var/lib/libvirt/images/centos6_2.img
</span><span class='line'>Allocating <span class="s1">&#39;centos6_2.img&#39;</span>           1% <span class="o">[</span>-              <span class="o">]</span> 9.0 MB/s | 112 MB     18:44 ETA
</span></code></pre></td></tr></table></div></figure>


<h3>参考和拓展资料</h3>

<ul>
<li><a href="http://www.joshbolling.com/blog/2013/01/automate-rhel-based-os-deployments-with-pxe-boot-and-kickstart/">Automate RHEL Based OS Deployments with PXE Boot and Kickstart</a></li>
<li><a href="http://www.linuxquestions.org/questions/linux-networking-3/centos-and-and-serial-console-login-894380/">Centos&amp; and serial console login</a></li>
<li><a href="http://zhumeng8337797.blog.163.com/blog/static/1007689142011715111317513/">kvm virsh console</a></li>
<li><a href="http://docs.fedoraproject.org/zh-CN/Fedora/12/html/Virtualization_Guide/chap-Virtualization_Guide-KVM_live_migration.html">KVM 实时迁移</a></li>
<li><a href="http://blog.csdn.net/signmem/article/details/7489135">rhel6 kvm备忘</a></li>
</ul>


<p>自己之前的两篇挫文： <a href="http://blog.csdn.net/kumu_linux/article/details/8263987">KVM在线迁移(动态迁移)</a> <a href="http://blog.csdn.net/kumu_linux/article/details/8263326">RHEL6 KVM安装备忘</a></p>

<p>&#8211;EOF&#8211;</p>
]]></content>
  </entry>
  
</feed>
