<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 监控调优 | Linux SA Notes By 枯木]]></title>
  <link href="http://kumu-Linux.github.com/blog/categories/jian-kong-diao-you/atom.xml" rel="self"/>
  <link href="http://kumu-Linux.github.com/"/>
  <updated>2013-05-23T23:37:40+08:00</updated>
  <id>http://kumu-Linux.github.com/</id>
  <author>
    <name><![CDATA[枯木]]></name>
    <email><![CDATA[1988.wulei@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LogAnalyzer网页日志分析之安装篇]]></title>
    <link href="http://kumu-Linux.github.com/blog/2013/04/23/loganalyzer/"/>
    <updated>2013-04-23T14:50:00+08:00</updated>
    <id>http://kumu-Linux.github.com/blog/2013/04/23/loganalyzer</id>
    <content type="html"><![CDATA[<h2>LogAnalyzer简介</h2>

<p>LogAnalyzer 是一个syslog和其他网络事件数据的Web前端工具，提供简单易用的日志浏览、搜索和基本分析以及图表显示，PHP语言开发。<a href="http://loganalyzer.adiscon.com/">官方地址</a></p>

<!--more-->


<h2>LogAnalyzer在RHEL6上的安装</h2>

<p>RHEL系列从RHEL6开始日志服务器，缺省的由原来RHEL5的syslog改为rsyslog。关于rsyslog和syslog的优缺点可以查看<a href="http://www.rsyslog.com/doc/rsyslog_ng_comparison.html">链接</a>，ryslog有很多优势，因此本文以rsyslog为例。rsyslog支持TCP/UDP协议，并且可以将日志直接写入到数据库中，如Mongodb、MySQL，本文将以MySQL为例。</p>

<p>ryslog优势：</p>

<ul>
<li>支持Multi-threading功能，处理效率比传统的syslog服务器更高</li>
<li>提供SSL加密功能，提高syslog传输安全性</li>
<li>提供数据库输出功能&lt;MySQL、Mongodb ... ...></li>
<li>提供过滤功能，可自定义相关的过滤条件</li>
</ul>


<h3>中心日志服务器配置</h3>

<h4>Log Server端配置</h4>

<p>安装<code>rsyslog</code>、<code>rsyslog-mysql</code>
<code>bash
yum install rsyslog rsyslog-mysql -y
</code></p>

<p>安装<code>MySQL</code>和<code>Apache</code>
<code>bash
yum install mysql-server
yum install httpd php php-mysyql php-gd
</code></p>

<p>导入rsyslog写入数据需要的MySQL库文件，默认安装好之后会在目录/usr/share/doc/rsyslog-mysql-x.x.x/createDB.sql有该文件，rsyslog-mysql的版本不同，具体的位置也相应的不同
<code>mysql
mysql -u root -p &lt; /usr/share/doc/rsyslog-mysql-5.8.10/createDB.sql
</code></p>

<p>如果导入正常的话，MySQL会生成Syslog库
``` mysql
mysql> use Syslog
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A</p>

<p>Database changed
mysql> show tables;
+------------------------+
| Tables_in_Syslog       |
+------------------------+
| SystemEvents           |
| SystemEventsProperties |
| charts                 |
| config                 |
| dbmappings             |
| fields                 |
| groupmembers           |
| groups                 |
| savedreports           |
| searches               |
| sources                |
| users                  |
| views                  |
+------------------------+
13 rows in set (0.00 sec)</p>

<p>mysql>
```</p>

<p>赋权，这里新增用户给insert权限即可，可参考<a href="http://www.rsyslog.com/doc/rsyslog_mysql.html">rsyslog_mysql</a>
``` mysql
mysql> grant insert on Syslog.* to 'sysloguser'@'localhost' identified by '123321';
Query OK, 0 rows affected (0.34 sec)</p>

<p>mysql> flush privileges;
Query OK, 0 rows affected (0.08 sec)</p>

<p>mysql>
```</p>

<p>修改rsyslog配置文件<code>/etc/rsyslog.conf</code>,添加mysql支持
``` bash
$ModLoad ommysql.so
<em>.</em>       :ommysql:localhost,Syslog,sysloguser,123321</p>

<h1><em>.</em>       :ommysql:database-server,database-name,database-userid,database-password</h1>

<p>```</p>

<p>修改rsyslog配置文件<code>/etc/rsyslog.conf</code>,配置udp和tcp接受监听
<code>bash
$ModLoad imudp
$UDPServerRun 514
$ModLoad imtcp
$InputTCPServerRun 514
$AllowedSender UDP, 127.0.0.1, 10.2.0.0/16  #10.2.0.0为接受某个网段发来的IP
$AllowedSender TCP, 127.0.0.1, 10.2.0.0/16
</code></p>

<p>完成以上步骤之后重新启动rsyslog即可
<code>bash
/etc/init.d/rsyslog restart
</code></p>

<p>这时登陆MySQL执行<code>mysql&gt; select * from Syslog.SystemEvents;</code>就可以看到rsyslog日志内容了</p>

<h4>Log Client端配置</h4>

<p>安装<code>rsyslog</code>
<code>bash
yum install rsyslog -y
</code></p>

<p>修改rsyslog配置文件<code>/etc/rsyslog.conf</code>,添加如下内容
<code>bash
*.* @@Server_ip #Server_ip为Log Server端的ip
</code></p>

<p>完成以上步骤之后重新启动rsyslog即可
<code>bash
/etc/init.d/rsyslog restart
</code></p>

<h3>安装LogAnalyzer</h3>

<p>下载解压
<code>bash
wget http://download.adiscon.com/loganalyzer/loganalyzer-3.6.3.tar.gz
tar xf loganalyzer-3.6.3.tar.gz
cd loganalyzer-3.6.3
mkdir /var/www/html/rsyslog
cp -r contrib/* src/* /var/www/html/rsyslog #拷贝到web家目录下
chown apache:apache -R /var/www/html/rsyslog
bash /var/www/html/rsyslog/configure.sh
</code></p>

<p>浏览器打开http://web_url/rsyslog</p>

<p>Next1，点击here执行安装</p>

<center><img src="http://kumu-Linux.github.com/images/loganlyzer1.png" alt="loganlyzer" title="loganlyzer" width="500" /></center>


<p>Next2</p>

<center><img src="http://kumu-Linux.github.com/images/loganlyzer2.png" alt="loganlyzer" title="loganlyzer" width="500" /></center>


<p>Next3</p>

<p>在Server端创建一个用户管理库和一个用户,然后输入到web中，开启使用数据库管理用户选项
``` mysql
mysql> create database loganalyzer;
Query OK, 1 row affected (0.02 sec)</p>

<p>mysql> grant all on loganalyzer.* to 'loganalyzer'@'localhost' identified by '123321';
Query OK, 0 rows affected (0.00 sec)</p>

<p>mysql> flush privileges;
Query OK, 0 rows affected (0.00 sec)</p>

<p>mysql>
```</p>

<center><img src="http://kumu-Linux.github.com/images/loganlyzer4.png" alt="loganlyzer" title="loganlyzer" width="500" /></center>


<p>Next4</p>

<center><img src="http://kumu-Linux.github.com/images/loganlyzer5.png" alt="loganlyzer" title="loganlyzer" width="500" /></center>


<p>Next5</p>

<center><img src="http://kumu-Linux.github.com/images/loganlyzer6.png" alt="loganlyzer" title="loganlyzer" width="500" /></center>


<p>Next6</p>

<p>添加登陆用户</p>

<center><img src="http://kumu-Linux.github.com/images/loganlyzer7.png" alt="loganlyzer" title="loganlyzer" width="500" /></center>


<p>Next7</p>

<p>选择数据库类型，并且添加相关数据库用户，修改用户权限如下：
<code>mysql
mysql&gt; grant all on Syslog.* to 'sysloguser'@'localhost' identified by '123321';
mysql&gt; flush privileges;
</code>
如果只是日志写入到数据库中，那么只需要insert权限即可。如果使用loganlyzer，那么安装过程需要额外的权限，可以新增用户，也可先给sysloguser所有的权限，安装完成之后，再次恢复权限如下：
<code>mysql
mysql&gt; grant insert,select on Syslog.* to 'sysloguser'@'localhost' identified by '123321'; #loganlyzer安装完成后需要使用select权限查询输出到页面，因此这里赋予select权限
mysql&gt; flush privileges;
</code></p>

<center><img src="http://kumu-Linux.github.com/images/loganlyzer8.png" alt="loganlyzer" title="loganlyzer" width="500" /></center>


<p>Next8安装成功</p>

<center><img src="http://kumu-Linux.github.com/images/loganlyzer9.png" alt="loganlyzer" title="loganlyzer" width="500" /></center>


<p>登陆，输入之前的用户名和密码即可：</p>

<center><img src="http://kumu-Linux.github.com/images/loganlyzer10.png" alt="loganlyzer" title="loganlyzer" width="500" /></center>


<p>登陆之后页面如下：</p>

<center><img src="http://kumu-Linux.github.com/images/loganlyzer11.png" alt="loganlyzer" title="loganlyzer" width="500" /></center>


<p>--EOF--</p>

<p>未完待续</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RHEL6修改snmpd日志输出]]></title>
    <link href="http://kumu-Linux.github.com/blog/2013/04/16/snmpd/"/>
    <updated>2013-04-16T10:52:00+08:00</updated>
    <id>http://kumu-Linux.github.com/blog/2013/04/16/snmpd</id>
    <content type="html"><![CDATA[<h3>需求和现象</h3>

<p>默认安装启动的snmp，会把日志记录在系统日志/var/log/messages中。频繁记录日志到messages，导致messages的日志输出都被snmp的相关信息占满，不便于其它问题的排查。另外，频繁的写日志对性能也不是很好，因此需要修改相关的配置。</p>

<!--more-->


<h3>解决方法</h3>

<p>第一反应就是想到snmp的配置文件，但是发现配置文件/etc/snmp/snmpd.conf中没有关于log的日志定义，ps -ef | grep snmp[d] 得到如下结果
``` bash</p>

<h1>ps -ef | grep snmp[d]</h1>

<p>root     59108     1  0 22:12 ?        00:00:00 /usr/sbin/snmpd -LS0-6d -Lf /dev/null -p /var/run/snmpd.pid
```</p>

<p>以上启动命令中就有关于日志的选项，关于snmp日志的警告级别如下</p>

<ul>
<li>0 or ! for LOG_EMERG,</li>
<li>1 or a for LOG_ALERT,</li>
<li>2 or c for LOG_CRIT,</li>
<li>3 or e for LOG_ERR,</li>
<li>4 or w for LOG_WARNING,</li>
<li>5 or n for LOG_NOTICE,</li>
<li>6 or i for LOG_INFO,</li>
<li>7 or d for LOG_DEBUG.</li>
</ul>


<p>默认的时0-6级别的日志都会被记录，查看/etc/init.d/snmpd启动文件，有以下定义
``` bash</p>

<h1>grep 'OPTIONS=' -A3 /etc/init.d/snmpd</h1>

<p>OPTIONS="-LS0-6d -Lf /dev/null -p /var/run/snmpd.pid"
if [ -e /etc/sysconfig/snmpd ]; then
  . /etc/sysconfig/snmpd
fi
```</p>

<p>snmpd启动文件定义了OPTIONS，启动文件中提到了/etc/sysconfig/snmpd，查看内容默认如下
``` bash</p>

<h1>cat /etc/sysconfig/snmpd</h1>

<h1>snmpd command line options</h1>

<h1>OPTIONS="-LS0-6d -Lf /dev/null -p /var/run/snmpd.pid"</h1>

<p>```</p>

<p>因为/etc/sysconfig/snmpd优先级高于OPTIONS，所以可以直接修改配置文件即可，取消OPTIONS注释，修改如下
``` bash</p>

<h1>cat /etc/sysconfig/snmpd</h1>

<h1>snmpd command line options</h1>

<p> OPTIONS="-LS0-3d -Lf /dev/null -p /var/run/snmpd.pid" #只记录0-3级别的日志即可
```</p>

<p>当然也可以直接修改/etc/init.d/snmpd启动文件中的OPTIONS</p>

<p>最后重启snmpd，使修改生效，就会发现messages的snmp的信息就相对少很多了，完成实际的需求。</p>

<p>参考文档:<a href="http://dgz.dyndns.org/mediawiki/index.php/%28RHEL%29_HOWTO_stop_snmpd_spamming_/var/log/messages">dyndns.org</a></p>

<p>--EOF--</p>
]]></content>
  </entry>
  
</feed>
